### YamlMime:Tutorial
title: Créer une extension de messagerie basée sur la recherche
metadata:
  title: Créer une extension de messagerie basée sur la recherche
  description: Dans ce didacticiel, vous allez apprendre à créer une extension de messagerie basée sur la recherche.
  audience: Developer
  level: Beginner
  ms.date: 01/27/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: messaging-extensions/how-to/search-commands/define-search-command.md
  nextTutorialTitle: En savoir plus sur les commandes de recherche
  ms.custom: mvc
  ms.localizationpriority: High
  ms.openlocfilehash: 9f0cb617d7f816cdc67e849f6a037b60e238e112
  ms.sourcegitcommit: 3dc9b539c6f7fbfb844c47a78e3b4d2200dabdad
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 03/31/2022
  ms.locfileid: "64571170"
items:
- durationInMinutes: 1
  content: "Les extensions de messagerie permettent aux utilisateurs d’interagir avec les services web dans Microsoft Teams client. Ils permettent de rechercher dans un système externe à partir de la zone de composition du message, de la zone de commande ou directement à partir d’un message. \n\n**Fonctionnalités clés de l’extension de messagerie basée sur la recherche**\n\n* Autoriser les utilisateurs à effectuer des recherches dans des systèmes externes.\n* Insérer des résultats de recherche dans un message sous la forme d’une carte.\n\nCe guide pas à pas vous aide à créer une extension de messagerie basée sur la recherche. Vous verrez le résultat suivant :\n\n![Final](~/assets/images/Teams-Messaging-Extensions-Search/final_output.png)\n"
- title: Configuration requise
  durationInMinutes: 1
  content: "Veillez à installer les outils suivants et à configurer votre environnement de développement :  \n\n* [Microsoft Teams](https://teams.microsoft.com/) compte valide\n* [.NET Core SDK](https://dotnet.microsoft.com/download) version 3.1\n* [Dernière version de Visual Studio](https://visualstudio.microsoft.com/downloads/)\n* [ngrok](https://ngrok.com/download) dernière version ou toute solution de tunneling équivalente\n\n  > [!NOTE]\n  > Après avoir téléchargé ngrok, inscrivez-vous et installez [authtoken](https://ngrok.com/download).\n"
- title: Configurer l’environnement local
  durationInMinutes: 1
  content: "Clonez `BotBuilder-Samples` le référentiel sur votre site GitHub :  \n\n 1. [Ouvrez exemples BotBuilder](https://github.com/microsoft/BotBuilder-Samples).\n 1. **Sélectionnez Code**.\n 1. Dans le menu déroulant, sélectionnez **Ouvrir avec GitHub Bureau**.\n\n    ![Référentiel de clones](~/assets/images/Teams-Messaging-Extensions-Search/clonerepository.png)\n\n 1. **Sélectionnez Clone**. \n"
- title: Créer et inscrire votre bot dans Azure AD portail
  durationInMinutes: 5
  content: "Pour créer et inscrire votre bot dans Microsoft Azure Active Directory (Azure AD), créer un tunnel à l’aide de ngrok et ajouter un point de terminaison de messagerie, effectuez les étapes suivantes :\n\n* Créez une ressource Azure Bot pour inscrire le bot auprès d’Azure Bot Service.\n* Créez une secret client pour activer l’authentification sso du bot.\n* Ajoutez Microsoft Teams canal pour déployer le bot sur un canal Teams’accès.\n* Utilisez ngrok pour créer un tunnel vers les points de terminaison de votre serveur web.\n* Ajoutez le point de terminaison de messagerie au tunnel ngrok que vous avez créé.\n\n**Pour créer une ressource Azure Bot**\n\n1. Accédez au [Portail Azure](https://portal.azure.com/).\n1. Sélectionnez **Créer une ressource**.\n1. Dans la zone de recherche, entrez **Azure Bot**.\n1. **Sélectionnez Entrée**.\n1. **Sélectionnez Azure Bot**.\n\n     ![Créer une carte de bot Azure](~/assets/images/bots/createazurebot.png)\n\n1. Sélectionnez **Créer**.\n1. Entrez le nom de handle de bot requis dans **le handle bot**.\n1. Sélectionnez **votre abonnement dans** la liste liste.\n1. Sélectionnez votre **groupe de ressources** dans la liste liste.\n\n    ![Sélectionner un bot Azure de ressources](~/assets/images/Teams-Messaging-Extensions-Search/review-plus-create.png) \n\n   Vous pouvez également créer un groupe de ressources (sélectionnez **Créer un nouvel** > entrez le nom de la ressource > sélectionnez **OK**).\n\n1. Si vous avez créé un nouveau groupe de ressources, sélectionnez l’emplacement requis dans la liste de listes des emplacements du nouveau groupe de ressources.\n\n    ![Nouvel emplacement de groupe de ressources](~/assets/images/meetings-side-panel/newresource.png)\n\n1. **Sélectionnez MultiTenant sous** **Type de bot**.\n\n    ![Type de bot](~/assets/images/Teams-Messaging-Extensions-Search/bot-type.png) \n\n1. Dans la section **ID de l’application Microsoft** , l’option Créer un **ID** d’application Microsoft est sélectionnée par défaut. \n\n   Vous pouvez soit sélectionner  Utiliser l’inscription d’application existante et entrer **l’ID** d’application existant et le mot de passe **de** l’application existante, soit sélectionner Créer un **ID d’application Microsoft**.\n\n   > [!NOTE]\n   > Vous ne pouvez pas créer plusieurs bots avec le même **ID d’application Microsoft**.\n\n1. Sélectionnez **Examiner et créer**.\n\n    ![Créer un ID d’application Microsoft](~/assets/images/meeting-token-generator/meeting-token-generator-appidcreate.png)\n\n1. Si la validation réussit, sélectionnez **Créer**. \n\n    La mise en service de votre service de bot prend quelques instants. \n\n1. Sélectionnez **Accéder à la ressource**. \n\n    ![Déployer l’application](~/assets/images/Teams-Messaging-Extensions-Search/botdeployment.png)\n\n    Votre bot Azure est créé.\n\n    ![Ressource de bot Azure créée](~/assets/images/Teams-Messaging-Extensions-Search/bot-page.png)\n\n**Pour créer une secret client**\n\n  Effectuez les étapes suivantes si vous avez créé un **ID d’application Microsoft** :\n\n1. Dans le panneau gauche, sélectionnez **Configuration**. \n\n   > [!TIP]\n   > Enregistrez **l’ID d’application Microsoft** ou **l’ID client** pour référence ultérieure.\n\n1. En plus de **l’ID de l’application Microsoft**, sélectionnez **Gérer**.\n\n    ![ID d’application Microsoft](~/assets/images/Teams-Messaging-Extensions-Search/config1.png)\n\n1. Dans la section **Secrets client** , sélectionnez **Nouvelle secret client**. \n\n    ![Nouvelle secret client](~/assets/images/meetings-side-panel/newclientsecret.png)\n\n   La **fenêtre Ajouter une secret client** s’affiche.  \n\n1. Entrez **la description**.\n\n1. Sélectionnez **Ajouter**.\n\n    ![Ajouter une secret client à l’application](~/assets/images/Teams-Messaging-Extensions-Search/clientsecret.png)\n\n1. Dans la **colonne Valeur** , **sélectionnez Copier dans le Presse-papiers**.\n\n     ![Valeur de la secret client](~/assets/images/Teams-Messaging-Extensions-Search/clientvalue.png)\n   \n   > [!TIP]\n   > Enregistrez la **valeur des secrets client** ou le mot de passe de l’application pour référence ultérieure.\n\n**Pour ajouter le Teams canal**\n\n1. Sélectionnez **Accueil**.\n\n    ![Page d’accueil](~/assets/images/Teams-Messaging-Extensions-Search/gotohome.png)\n\n1. Sélectionnez votre bot à partir **des ressources récentes**.\n\n1. **Sélectionnez Canaux** dans le volet gauche. \n\n1. **Sélectionnez Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. Cochez la case pour accepter les **conditions d’utilisation**.\n\n1. **Sélectionnez Accepter**.\n\n      ![Conditions d’utilisation](~/assets/images/meetings-side-panel/terms.png)\n\n1. Sélectionnez **Enregistrer**.\n\n      ![Sélectionnez Teams](~/assets/images/Teams-Messaging-Extensions-Search/config-teams.png)   \n\n**Pour créer un tunnel pour un serveur web local**\n\nUtilisez ngrok pour créer un tunnel vers les points de terminaison HTTPS disponibles publiquement de votre serveur web exécutant localement. Exécutez la commande suivante dans ngrok :\n\n ```bash\n ngrok http -host-header=localhost 3978\n ```\n\n> [!TIP]\n> Si vous rencontrez **ERR_NGROK_4018**, suivez les étapes fournies dans l’invite de commandes pour vous inscrire et authentifier ngrok. Exécutez ensuite la commande `ngrok http -host-header=localhost 3978`.\n\n**Pour ajouter un point de terminaison de messagerie**\n\n1. À partir de ngrok, copiez l’URL HTTPS (https vers io).\n\n    ![URL HTTPS ngrok](~/assets/images/Teams-Messaging-Extensions-Search/ngrok.png)\n\n    > [!NOTE]\n    > L’URL HTTPS dans votre ngrok est votre nom de domaine complet.\n    > Il `WebAppDomain` s’agit d’un nom de domaine complet qui ne l’inclut `https://` pas.\n\n1. Dans **Paramètres** pour le bot Azure que vous avez créé, sélectionnez **Configuration**.\n\n1. Dans **le point de terminaison de messagerie**, utilisez l’URL HTTPS disponible à partir de ngrok et à la fin de l’URL, **ajoutez /api/messages**.\n\n    ![Point de terminaison de messagerie](~/assets/images/Teams-Messaging-Extensions-Search/messaging-endpoint.png)\n\n1. Sélectionnez **Appliquer**.\n\n    Vous avez réussi à configurer un bot dans Azure Bot Service.\n"
- title: Mettre à jour l’Azure AD l’application
  durationInMinutes: 1
  content: "1. Go to the [Microsoft Azure portal](https://portal.azure.com/).\n\n1. Sélectionnez **Azure Active Directory**.\n\n1. Dans le panneau de navigation de gauche, sélectionnez **Inscriptions d’applications**.\n\n1. Sélectionnez votre bot.\n\n   ![Inscription d’application](~/assets/images/Teams-Messaging-Extensions-Search/appregister.png)\n\n1. Sélectionnez **Exposer une API** sous **Gérer**.\n\n1. Sélectionnez **Définir**.\n\n   ![Exposer une API](~/assets/images/Teams-Messaging-Extensions-Search/exposeanapi.png)\n\n1. Définissez **l’URI de l’ID d’application** sous la forme `api://{AppID}`.\n\n   ![Lien Définir](~/assets/images/Teams-Messaging-Extensions-Search/setlink.png)\n\n1. Insérez `WebAppDomain` la valeur entre `api://` et `/{AppID}`.</br>\n    `api://9179****.ngrok.io/{AppID}`</br>\n    \n   L’image suivante montre le nom de domaine :\n    \n    ![URI ID d'application](~/assets/images/Teams-Messaging-Extensions-Search/appIDuri.png)\n\n    > [!NOTE]\n    > Si vous utilisez un service de tunneling tel que ngrok, veillez à mettre à jour la valeur chaque fois que votre sous-domaine ngrok change.\n    > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`, où `f631****.ngrok.io` est le nouveau nom de sous-domaine ngrok.\n\n1. Sélectionnez **Ajouter une étendue**. \n\n   ![Sélectionner une étendue](~/assets/images/meetings-side-panel/selectscope.png)\n\n1. Dans le panneau qui s’affiche, entrez `access_as_user` le nom de **l’étendue**.\n\n1. **Définissez Qui pouvez consentir à** `Admins and users`.\n\n1. Pour configurer les invites de consentement de l’administrateur et de l’utilisateur avec les valeurs `access_as_user` appropriées pour l’étendue, fournissez les informations suivantes dans les champs :</br>\n\n     * Entrez le `Teams can access the user’s profile` **nom complet du consentement de l’administrateur**.\n\n     * Entrez la `Allows Teams to call the app’s web APIs as the current user` **description du consentement de l’administrateur**.\n\n     * Entrez le `Teams can access the user profile and make requests on the user’s behalf` **nom complet du consentement de l’utilisateur**.\n\n     * Entrez en `Enable Teams to call this app’s APIs with the same rights as the user` tant **que description du consentement de l’utilisateur**.\n\n1. Vérifiez que **State** est défini comme **Enabled**.\n\n1. **Sélectionnez Ajouter une étendue** à enregistrer.\n\n    ![Ajouter une étendue](~/assets/images/Teams-Messaging-Extensions-Search/addascope.png)\n\n    > [!NOTE]\n    > Le **nom de l’étendue** doit correspondre à l’URI **de l’ID** d’application avec `/access_as_user` ajouté à la fin.</br>\n       `api://9179****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n    ![Étendues](~/assets/images/Teams-Messaging-Extensions-Search/scopes.png) \n\n1. Dans la section **Applications clientes autorisées**, identifiez les applications que vous souhaitez autoriser pour l'application Web de votre application. \n\n1. Sélectionnez **Ajouter une application cliente**. \n\n    ![Sélectionner une application cliente](~/assets/images/meetings-side-panel/selectclientapp.png) \n\n1. Entrez **l’ID client** : `1fec8e78-bce4-4aaf-ab1b-5451cc387264` pour Teams application mobile ou de bureau. \n\n    ![Ajouter l’application cliente 1](~/assets/images/meetings-side-panel/addclientapplication1.png) \n\n   Vous pouvez entrer **l’ID client** : `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` pour Teams application web.\n\n    ![Ajouter l’application cliente 2](~/assets/images/meetings-side-panel/addclientapplication2.png) \n\n1. **Sélectionnez les étendues autorisées**.\n\n    ![Ajouter l’application cliente 2](~/assets/images/Teams-Messaging-Extensions-Search/authorizedscope.png) \n\n   L’image suivante affiche les ID clients :\n\n    ![Applications clientes](~/assets/images/meetings-side-panel/clientapps.png) \n\n1. Dans le panneau gauche, sélectionnez **Autorisations d’API**. \n\n   > [!NOTE]\n   > Les utilisateurs doivent consentir aux autorisations d’API uniquement si l’Azure AD’application est inscrite dans un autre client.\n\n1. Sélectionnez **Ajouter une autorisation**.\n\n    ![Ajouter une autorisation](~/assets/images/meetings-side-panel/addpermission.png)\n\n1. **Sélectionnez Microsoft Graph**.\n\n1. Sélectionnez **Autorisations déléguées**.\n\n1. Ajoutez les autorisations suivantes :</br>\n     * **email**\n     * **offline_access**\n     * **OpenId**\n     * **profil**\n     * **User.Read**\n\n1. Sélectionnez **Ajouter des autorisations**.\n\n     ![Autres autorisations](~/assets/images/meetings-side-panel/other-permissions.png)\n\n1. Dans le panneau gauche, sélectionnez **Authentification** pour définir un URI de redirection. \n\n   > [!NOTE]\n   > Si une application n’est pas accordée au consentement de l’administrateur informatique, les utilisateurs doivent donner leur consentement la première fois qu’ils utilisent une application.\n           \n     1. Sélectionnez **Ajouter une plateforme**.\n     1. Sélectionnez **Web**.\n\n        ![Web](~/assets/images/Teams-Messaging-Extensions-Search/webauth.png)\n\n     1. Entrez l’URI de redirection de votre application en l’aérant `auth-end` au nom de domaine complet :</br> \n       `https://9179****.ngrok.io/auth-end`. </br>\n\n     1. **Activez l’octroi implicite et les flux hybrides** en sélectionnant les case à cocher suivantes :\n         * **Jetons d’ID**\n         * **Jetons d’accès**\n\n     1. Sélectionnez **Configurer**.\n\n        ![Auth-end](~/assets/images/Teams-Messaging-Extensions-Search/authend.png)\n"
- title: Configurer les paramètres de l’application et les fichiers manifeste
  durationInMinutes: 1
  content: "1. Accédez **à appsettings.json dans** le référentiel cloné.\n\n    ![Emplacement des paramètres de l’application](~/assets/images/Teams-Messaging-Extensions-Search/appsettingslocation.png)\n\n1. **Ouvrez appsettings.json dans** la dernière version de Visual Studio et mettez à jour les informations suivantes :  \n\n     * Définir `\"MicrosoftAppType\"` sur **MultiTenant**.\n     * Définissez `\"MicrosoftAppId\"` ce dernier sur **l’ID d’application Microsoft de votre bot**.\n     * Définir `\"MicrosoftAppPassword\"` sur **Valeur de** **la secret client**.\n     * Définir `\"MicrosoftAppTenantId\"` comme vide.\n     * Définir `\"BaseUrl\"` sur le nom de domaine complet (https to io).\n\n    ![Paramètres de l’application](~/assets/images/Teams-Messaging-Extensions-Search/appsettings.png)\n\n1. Accédez **à manifest.json dans** le référentiel cloné.\n\n    ![Emplacement du fichier manifeste](~/assets/images/Teams-Messaging-Extensions-Search/manifestlocation.png)\n\n1. **Ouvrez manifest.json dans** la dernière version Visual Studio et a apporté les modifications suivantes :\n\n     * Remplacez `<<YOUR-BASE-URL-DOMAIN>>` par votre `WebAppDomain` nom.\n     * Remplacez toutes les occurrences par `<<YOUR-MICROSOFT-APP-ID>>` **l’ID d’application Microsoft de votre bot**.\n\n    ![Manifeste](~/assets/images/Teams-Messaging-Extensions-Search/manifest.png)\n"
- title: Créer et exécuter le service
  durationInMinutes: 1
  content: "**Pour créer et exécuter le service à l’aide de la dernière version Visual Studio ligne de commande**\n\n# <a name=\"latest-version-of-visual-studio\"></a>[Dernière version de Visual Studio](#tab/latestversionofvisualstudio)\n\n   1. Lancez la dernière version de Visual Studio.\n   1. Accédez **à** **FileOpen** >  >  **Project/Solution**.\n\n      ![Ouvrir un fichier](~/assets/images/meeting-token-generator/meeting-token-generator-VSopenfile.png)\n\n   1. **Sélectionnez le fichier TeamsMessagingExtensionsSearch.csproj** dans **le dossier 50.teams-messaging-extensions-search**.\n\n      ![Fichier proj CS](~/assets/images/Teams-Messaging-Extensions-Search/fileready.png)\n\n   1. Ouvrez **Explorateur de solutions** partir de **l’affichage**.\n\n      ![Explorateur de solutions](~/assets/images/Teams-Messaging-Extensions-Search/solutionexplorer.png)\n\n   1. Cliquez avec le bouton droit pour **sélectionner TeamsMessagingExtensionsSearch**.\n\n   1. **Sélectionnez Définir en tant que Project de démarrage**.\n\n      ![Explorateur de solutions](~/assets/images/Teams-Messaging-Extensions-Search/startup.png)\n\n   1. Appuyez sur **F5** pour exécuter le projet.\n\n   1. Sélectionnez **Oui** si la boîte de dialogue suivante s’affiche :\n\n      ![Certificat d’autorisation](~/assets/images/Teams-Messaging-Extensions-Search/certificate.png)\n\n      Une page web s’ouvre avec un message **Votre bot est prêt !**.\n\n      ![Application prête](~/assets/images/Teams-Messaging-Extensions-Search/appisready.png) \n\n    \n# <a name=\"command-line\"></a>[Ligne de commande](#tab/cli)\n\nAccédez à **BotBuilder-Samples > exemples > csharp_dotnetcore > 50.teams-messaging-extensions-search** dans la fenêtre d’invite de commandes et entrez la commande suivante :\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/Teams-Messaging-Extensions-Search/dotnetruncmd.png)\n"
- title: Ajouter une application d’extension de messagerie de recherche
  durationInMinutes: 1
  content: "1. Dans votre référentiel cloné, accédez à **csharp_dotnetcore > 50.teams-messaging-extensions-search > TeamsAppManifest**.\n\n1. Créez une .zip avec les fichiers suivants présents dans le **dossier TeamsAppManifest** : \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   ![Fichier zip](~/assets/images/Teams-Messaging-Extensions-Search/zipfile.png) \n\n1. Go to **Microsoft Teams**.\n\n1. Sélectionner **les applications**.\n\n   ![Fichier zip](~/assets/images/Teams-Messaging-Extensions-Search/AppStore.png)\n\n1. Dans le coin inférieur gauche, **sélectionnez Gérer vos applications**.\n\n   ![Gérer les applications](~/assets/images/Teams-Messaging-Extensions-Search/manageapps.png)\n\n1. **Sélectionnez Télécharger une application dans le catalogue d’applications de votre organisation**. \n\n   ![Télécharger application personnalisée](~/assets/images/Teams-Messaging-Extensions-Search/uploadapp.png)\n\n1. **Sélectionnez Ouvrir** pour télécharger le .zip que vous avez créé dans le **dossier TeamsAppManifest**.\n\n   ![Sélectionner un fichier zip](~/assets/images/Teams-Messaging-Extensions-Search/selectzipopen.png)\n\n1. Sélectionnez **Ajouter**.\n\n   ![Ajouter l’application](~/assets/images/Teams-Messaging-Extensions-Search/addapp.png)\n\n   Une fenêtre instantanée s’ouvre dans une conversation.\n\n   ![Conversation](~/assets/images/Teams-Messaging-Extensions-Search/popup.png)\n"
- title: Interagir avec l’application dans Teams
  durationInMinutes: 1
  content: >
    1. Sélectionnez n’importe quelle option dans la fenêtre pop-up.


    1. Entrez du texte et sélectionnez **Envoyer**.

       ![Option](~/assets/images/Teams-Messaging-Extensions-Search/option1.png)

       1. **Sélectionnez Package Nuget**.

          ![Nuget](~/assets/images/Teams-Messaging-Extensions-Search/nuget.png)

       1. **Sélectionnez Project**.

          ![Project](~/assets/images/Teams-Messaging-Extensions-Search/project.png)
- title: Défi complet
  durationInMinutes: 1
  content: >
    Avez-vous eu un projet comme celui-ci ?


    ![Final](~/assets/images/Teams-Messaging-Extensions-Search/final_output.png)
- content: Vous avez terminé le didacticiel pour commencer à rechercher Teams extensions de messagerie .
