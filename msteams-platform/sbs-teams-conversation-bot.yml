### YamlMime:Tutorial
title: Créer un bot de conversation Teams
metadata:
  title: Créer un bot de conversation Teams
  description: Avec ce module d’apprentissage, vous allez apprendre à créer un bot de conversation de base dans l’application Microsoft Teams.
  audience: Developer
  level: Beginner
  ms.date: 04/01/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/how-to/conversations/channel-and-group-conversations.md
  nextTutorialTitle: Conversations de canal et de groupe avec un bot
  ms.custom: mvc
  ms.localizationpriority: none
  ms.openlocfilehash: 0ffb1072424e60c5625ccd0d38f223c5e7643c9e
  ms.sourcegitcommit: 6926cf5eee55d5047c11ca13afc7f6f23e270396
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 10/27/2022
  ms.locfileid: "68740631"
items:
- durationInMinutes: 1
  content: >
    Les bots de conversation Teams permettent aux utilisateurs d’interagir avec votre service web via du texte, des cartes interactives et des modules de tâches. Les conversations de base sont gérées via le connecteur Bot Framework, une seule API REST. Cette API permet à votre bot de communiquer avec Teams et d’autres canaux. Le Kit de développement logiciel (SDK) Bot Builder fournit les fonctionnalités suivantes :


    * Accès facile au connecteur Bot Framework.

    * Fonctionnalités supplémentaires pour gérer l’état et le flux de conversation.

    * Moyens simples d’incorporer des services cognitifs, tels que le traitement du langage naturel (NLP).


    Lorsque votre bot est ajouté pour la première fois à un groupe ou à une équipe, un message de présentation est envoyé. Le message fournit une brève description des fonctionnalités du bot et de leur utilisation.


    Ce guide pas à pas vous aide à créer un bot de conversation de base dans l’application Teams. Vous verrez la sortie suivante :


    :::image type="content" source="./assets/images/conversation-bot/final-output.png" alt-text="Sortie finale."lightbox="assets/images/conversation-bot/final-output.png":::
- title: Configuration requise
  durationInMinutes: 1
  content: "Pour configurer votre environnement de développement, installez les outils suivants :\n\n| &nbsp; | Installer | Pour l’utilisation... |\n | --- | --- | --- |\n | **Obligatoire** | &nbsp; | &nbsp; |\n | &nbsp; | [Compte de développeur Microsoft 365](/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) | Accès au compte Teams avec les autorisations appropriées pour installer une application. |\n | &nbsp; | [Ngrok](https://ngrok.com/download) | Les fonctionnalités d’application Teams (bots conversationnels, extensions de message et webhooks entrants) nécessitent des connexions entrantes. Un tunnel connecte votre système de développement à Teams. Elle n’est pas obligatoire pour les applications qui incluent uniquement des onglets. Ce package est installé dans le répertoire du projet (à l’aide de npm `devDependencies`). |\n | &nbsp; | [Visual Studio 2022 version 17.3](https://visualstudio.microsoft.com)<br> Installez l’une des deux charges de travail suivantes :<br> • **développement ASP.NET et web** <br> • Développement **multiplateforme .NET Core** | Vous pouvez installer la version entreprise dans Visual Studio 2022 et installer les charges de travail. |   \n | &nbsp; | [SDK .NET Core version 3.1](https://dotnet.microsoft.com/en-us/download) | Liaisons personnalisées pour le débogage local et les déploiements d’applications Azure Functions. Si vous n’avez pas installé le SDK .NET 3.1 (ou version ultérieure) globalement, la version portable peut être installée. |\n | &nbsp; | [Microsoft Teams et un compte Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams pour collaborer avec toutes les personnes avec lesquelles vous travaillez via des applications pour la conversation, les réunions, les appels et le tout au même endroit. |\n"
- title: Configurer le bot de conversation
  durationInMinutes: 5
  content: "Inscrivez le bot auprès du service de bot Azure lorsque vous le développez et l’hébergez dans Azure. Effectuez les opérations suivantes :\n\n1. Utilisez ngrok pour créer un tunnel vers les points de terminaison de votre serveur web.\n1. Créez une inscription de canal de bot dans un compte Azure.\n1. Créez une clé secrète client qui active l’authentification unique du bot.\n1. Ajoutez des autorisations d’API pour les appels en aval.\n1. Ajoutez un point de terminaison de messagerie au tunnel ngrok que vous avez créé.\n1. Ajoutez un canal Microsoft Teams pour déployer le bot sur un canal Teams.\n\n**Créer un tunnel ngrok**\n\nUtilisez ngrok pour créer un tunnel vers les points de terminaison HTTPS de votre serveur web en cours d’exécution localement. Exécutez la commande suivante dans ngrok :\n\n```bash\nngrok http --host-header=rewrite 3978\n```\n\n**Créer une inscription de canal de bot dans un compte Azure**\n\n1. Accédez au [Portail Azure](https://portal.azure.com/).\n1. Sélectionnez **Créer une ressource**.\n1. Recherchez **Azure Bot** dans la zone de recherche.\n1. Sélectionnez **Azure Bot**.\n\n    :::image type=\"content\" source=\"./assets/images/azure-bot.png\" alt-text=\"Bot Azure.\":::\n\n1. Sélectionnez **Créer**.\n1. Entrez le nom du handle du bot dans le champ **Descripteur** de bot.\n1. Sélectionnez votre **abonnement** dans la liste déroulante.\n1. Sélectionnez votre **groupe de ressources** existant dans la liste déroulante ou créez un groupe de ressources, sélectionnez **Créer**, entrez le nom de la ressource, sélectionnez **OK**, puis sélectionnez l’emplacement requis dans la liste déroulante **Nouvel emplacement du groupe de ressources** .\n1. Sélectionnez **Résidence des données requise (préversion)** .\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/create-azure-bot.png\" alt-text=\"Créez un bot Azure.\":::\n\n1. Sélectionnez **Type d’application** en tant que **multilocataire** pour **l’ID d’application Microsoft**.\n\n    > [!NOTE]\n    > Dans **la section Type de création** de l’ID d’application **Microsoft, l’option Créer un ID d’application Microsoft** est déjà sélectionnée pour créer un bot. Vous pouvez également sélectionner **Utiliser l’inscription d’application existante**, si vous avez déjà inscrit un bot. Entrez ID d’application Microsoft dans le champ **ID d’application existant** , puis entrez la valeur dans le champ **Mot de passe d’application existant** . \n1. Sélectionnez **Examiner et créer**.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/review-create.png\" alt-text=\"Vérifier et créer.\":::\n\n1. Sélectionnez **Créer** si la validation réussit. L’approvisionnement de votre service de bot prend quelques instants.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/validation-passed.png\" alt-text=\"Validation du bot.\":::\n\n1. Sélectionnez **Accéder à la ressource**. Le bot et les ressources associées sont répertoriés dans le groupe de ressources.\n\n    Votre bot Azure a maintenant été créé.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/go-to-resource.png\" alt-text=\"Accédez à la carte de ressource.\":::\n\n**Pour créer une clé secrète client**\n\n1. Dans **Paramètres**, sélectionnez **Configuration**. Enregistrez **l’ID d’application Microsoft** (ID client) pour référence ultérieure.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/microsoft-app-id.png\" alt-text=\"ID d’application Microsoft.\":::\n\n1. Sélectionnez **Gérer** en regard de **l’ID d’application Microsoft**.\n\n   :::image type=\"content\" source=\"~/assets/images/manage-bot-label.png\" alt-text=\"gérer le bot\":::\n\n1. Dans la section **Clés secrètes client** , sélectionnez **Nouvelle clé secrète client**. La fenêtre **Ajouter une clé secrète client** s’affiche.  \n\n    :::image type=\"content\" source=\"./assets/images/meetings-side-panel/newclientsecret.png\" alt-text=\"Nouvelle clé secrète client.\":::\n\n1. Entrez **Description** , puis **sélectionnez Ajouter**.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/add-client-secret.png\" alt-text=\"Ajoutez une clé secrète client.\":::\n\n1. Sélectionnez Copier dans le **Presse-papiers** dans la colonne **Valeur** et enregistrez l’ID de clé secrète client pour référence ultérieure.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/value.png\" alt-text=\"Carte de valeur.\":::\n\n**Pour ajouter des autorisations d’API pour les appels en aval**\n\n1. Dans **le volet Gérer** de votre bot, sélectionnez **Autorisations d’API**.\n1. Sélectionnez **Ajouter une autorisation**. **La fenêtre Demander des autorisations d’API** s’affiche.\n1. Sélectionnez **API Microsoft** , puis **Microsoft Graph**.\n1. Sélectionnez **Autorisations d’application**, puis autorisations.\n1. Ajoutez toutes les autorisations utilisateur requises par votre application aux API en aval, par exemple . `User.Read`\n1. Sélectionnez **Ajouter des autorisations**.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/api-permissions.png\" alt-text=\"Ajouter des autorisations d’API.\"lightbox=\"assets/images/conversation-bot/api-permissions.png\":::\n\n**Pour ajouter un point de terminaison de messagerie**\n\n1. Accédez à la page **d’accueil** de votre bot et sélectionnez **Configuration** sous **Paramètres** dans le volet gauche.\n1. Allez à ngrok.\n1. Copiez l’URL HTTPS (https vers io) comme illustré dans l’image suivante :\n    \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/ngrok-url.png\" alt-text=\"URL HTTPS ngrok\":::\n   \n1. Dans **Point de terminaison de messagerie**, ajoutez l’URL HTTPS disponible à partir de ngrok et à la fin de l’URL, ajoutez **/api/messages**.\n    \n    :::image type=\"content\" source=\"./assets/images/conversation-bot/messaging-endpoint.png\" alt-text=\"Point de terminaison de messagerie.\":::\n\n1. Sélectionnez **Appliquer**.\n\n**Pour ajouter le canal Microsoft Teams**\n\n1. Accéder à **l’Accueil**\n1. Dans la section **Ressources récentes** , ouvrez votre bot.\n1. Sélectionnez **Canaux** dans le volet gauche, puis **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/> dans la liste des canaux disponibles.    \n    \n    :::image type=\"content\" source=\"~/assets/images/adaptive-cards/channel-teams.png\" alt-text=\"Sélectionner Teams dans les canaux\":::\n\n1. Cochez la case pour accepter les conditions d’utilisation, puis **sélectionnez Accepter**.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/terms-of-service.png\" alt-text=\"Conditions d’utilisation du service.\":::\n\n1. Sélectionnez **Enregistrer**.\n\n    Vous avez correctement configuré un bot dans Azure Bot Service et vous devez maintenant configurer la connexion au service de bot.\n"
- title: Configurer la connexion au service de bot
  durationInMinutes: 1
  content: "Configurez l’exemple de bot pour comprendre comment authentifier le bot de conversation dans Microsoft Teams et créer le package d’application Teams et le charger dans l’organisation.\n\n1. Mettez à jour appsettings.json dans Visual Studio.\n1. Mettez à jour manifest.json dans Visual Studio et compressez-le dans le fichier zip dans le Explorateur de fichiers.\n1. Exécutez votre solution dans Visual Studio.\n1. Chargez le bot dans Teams.\n\n**Mettre à jour les paramètres d’application pour le bot de conversation**\n\n1. Accédez au dépôt https://github.com/Microsoft/botbuilder-samples.git.\n1. Sélectionnez **Code** , puis sélectionnez la liste déroulante.\n1. Sélectionnez **Télécharger le fichier ZIP**.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/repo.png\" alt-text=\"Clonage de référentiel.\":::\n\n1. Veillez à noter le chemin du dépôt que vous avez téléchargé.\n1. Dans la **Explorateur de fichiers**, accédez à **botbuilder-samples** > **samples samples** > **csharp_dotnetcore** > **57.teams-conversation-bot**.\n1. Ouvrez le fichier **appsettings.json** dans Visual Studio et mettez à jour la configuration du bot.\n\n    * Ajoutez le nom de votre bot pour `MicrosoftAppType`.\n    * Vous pouvez obtenir le à `MicrosoftAppId` partir de la page de configuration du bot. est `MicrosoftAppPassword` la valeur de l’ID de clé secrète client que vous avez enregistrée précédemment.\n    * Vous pouvez obtenir le `MicrosoftAppTenantId` ou `UserId` à partir du lien du compte utilisé pour vous connecter à Teams. Suivez le chemin d’accès dans l’image pour obtenir le lien pour `tenant id`:\n    \n        :::image type=\"content\" source=\"./assets/images/conversation-bot/teams-link-new.png\" alt-text=\"Chemin d’accès de l’ID de locataire dans Teams.\":::\n\n        :::image type=\"content\" source=\"./assets/images/conversation-bot/tenant-id.png\" alt-text=\"Copier le lien Teams.\":::\n\n        Copiez l’ID de locataire à partir de l’URL.\n\n        :::image type=\"content\" source=\"./assets/images/conversation-bot/url-tenantid.png\" alt-text=\"TenantID.\":::\n\n1. Sélectionnez **Enregistrer**.    \n    \n    :::image type=\"content\" source=\"./assets/images/conversation-bot/appsettings.png\" alt-text=\"Appsettings Json.\":::\n\n**Pour mettre à jour le manifeste**\n\n1. Dans la **Explorateur de fichiers**, accédez à **botbuilder-samples** > **samples** > **samples csharp_dotnetcore** > **57.teams-conversation-bot** > **TeamsAppManifest**.\n1. Ouvrez le fichier **manifest.json** dans Visual Studio.\n1. Dans le fichier **manifest.json** , recherchez **{id}, {botId}** et ajoutez votre ID d’application Microsoft.\n1. Ajoutez votre URL ngrok dans **validDomains** except `https://` et enregistrez.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/manifest.png\" alt-text=\"Manifeste.\":::\n\n1. Compressez le contenu du dossier **TeamsAppManifest** pour créer **manifest.zip**.\n\n    > [!NOTE]\n    > le `manifest.zip` ne doit pas contenir de dossiers supplémentaires. Le fichier source, `color` l’icône et `outline` l’icône doivent être `manifest json` inclus dans le dossier zip.\n    > Exécutez votre solution dans Visual Studio et chargez votre manifeste dans votre locataire de démonstration pour l’organisation ou votre compte Teams.\n\n**Pour exécuter la solution dans Visual Studio**\n\n1. Ouvrez Visual Studio.\n1. Sélectionnez **Fichier** , puis **Ouvrir**.\n1. Sélectionnez **Projet/Solution** pour ouvrir le `.csproj` fichier à partir de la Explorateur de fichiers.\n1. Accédez à **botbuilder-samples** > **samples** > **csharp_dotnetcore** > **57.teams-conversation-bot**.\n1. Sélectionnez `TeamsConversationBot.csproj` fichier et sélectionnez votre bot dans la liste **Projets de démarrage** .\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/visual-studio.png\" alt-text=\"Déboguer Visual Studio.\":::\n\n1. Sélectionnez F5 pour déboguer. Vous recevrez un écran de confirmation lorsque votre bot sera prêt.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/bot.png\" alt-text=\"Écran prêt pour le bot.\":::\n\n**Pour charger l’application dans Teams**\n\n1. Accédez à Teams.\n1. Pour charger **manifest.zip**, sélectionnez **Store > Gérer vos applications > Charger une application personnalisée** et ouvrez **manifest.zip** à partir du référentiel dans Explorateur de fichiers.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/upload-manifest.png\" alt-text=\"Chargement de manifeste dans Teams.\":::\n\n1. Sélectionnez **Ajouter** pour installer le bot de conversation dans Teams.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/add-app-teams.png\" alt-text=\"Ajouter une application à Teams.\":::\n\n    Vous pouvez maintenant interagir avec ce bot.\n"
- title: Interaction avec le bot de conversation
  durationInMinutes: 2
  content: >
    Vous pouvez interagir avec le bot dans Teams en lui envoyant un message ou en sélectionnant une commande dans la liste des commandes. Le bot répond aux chaînes suivantes :


    Dans le volet gauche de Teams, sélectionnez les points de suspension ●●● puis sélectionnez votre application dans la liste. Le bot affiche **les suggestions** comme suit :


    :::image type="content" source="./assets/images/conversation-bot/suggestions.png" alt-text="Carte de suggestions.":::


    | MentionMe    | Afficher la bienvenue   | MessageAllMembers |

    | --- | --- | --- |

    | :::image type="content" source="./assets/images/conversation-bot/mentionme-new.png" alt-text="Mentionme card"lightbox="assets/images/conversation-bot/mentionme-new.png"::: | :::image type="content" source="./assets/images/conversation-bot/show-welcome-new.png" alt-text="Afficher la carte de bienvenue"lightbox="assets/images/conversation-bot/show-welcome-new.png"::: | :::image type="content" source="./assets/images/conversation-bot/message-all-members-new.png" alt-text="Carte MessageAllMembers"lightbox="assets/images/conversation-bot/message-all-members-new.png"::: |

    | **Résultat:** Le bot répond au message et mentionne l’utilisateur. | **Résultat:** Le bot envoie la carte de bienvenue avec laquelle vous pouvez interagir. |  **Résultat:** Le bot envoie un message un-à-un à chaque membre de la conversation actuelle. |

    | **Étendues valides :** personnel, conversation de groupe, conversation d’équipe. | **Étendues valides :** personnel, conversation de groupe, conversation d’équipe. |  **Étendues valides :** personnel, conversation de groupe, conversation d’équipe. |


    Vous pouvez sélectionner une option dans la liste de commandes en tapant **@TeamsConversationBot** dans la zone de rédaction de message et **Que puis-je faire ?** texte au-dessus de la zone de composition.
- title: Relever le défi
  durationInMinutes: 1
  content: >
    Tu as trouvé quelque chose comme ça ?


    :::image type="content" source="./assets/images/conversation-bot/final-output.png" alt-text="Sortie finale."lightbox="assets/images/conversation-bot/final-output.png":::
- content: Vous avez terminé le tutoriel pour bien démarrer avec le bot de conversation pour Microsoft Teams.
