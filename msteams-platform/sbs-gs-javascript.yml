### YamlMime:Tutorial
title: Créer votre première application d’onglet à l’aide de JavaScript
metadata:
  title: Hello World avec JavaScript
  description: Avec ce module d’apprentissage, vous allez apprendre à créer Hello World application avec JavaScript en configurant un nouveau projet avec teams Toolkit, en créant et en déployant une application onglet.
  audience: Developer
  level: Beginner
  ms.date: 05/26/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: Vue d’ensemble de Retour à la prise en main
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: e919f920a87ebdb3b46166abaafbc40612227c8e
  ms.sourcegitcommit: 1b20e2bee1c7e880a313cf1a357d6cb3b2d9b3ca
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 10/07/2022
  ms.locfileid: "68497104"
items:
- durationInMinutes: 1
  content: "Démarrez le développement d’applications Microsoft Teams avec votre première application Teams. Vous allez créer une application onglet avec Teams. \n\nVotre application dispose d’une fonctionnalité, qui est fournie avec sa propre interface utilisateur et son expérience utilisateur :\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png\" alt-text=\"Diagramme montrant que cette application comporte trois fonctionnalités.\":::\n\n> [!NOTE]\n> Dans ce didacticiel, vous allez créer une application onglet avec JavaScript.\n\nDans ce didacticiel, vous allez apprendre :\n\n- Comment configurer un nouveau projet avec le Kit de ressources Teams.\n- Guide pratique pour créer une application onglet.\n- Structure de l’application :\n    - Partie d’onglet avec JavaScript à l’aide de React.\n    - Le reste des fonctionnalités avec Node.js.\n- Comment déployer votre application.\n"
- title: Configuration requise
  durationInMinutes: 1
  content: "\nVoici la liste des outils dont vous aurez besoin pour créer et déployer vos applications.\n\n| &nbsp; | Installer | Pour l’utilisation... |\n| --- | --- | --- |\n| **Obligatoire** | &nbsp; | &nbsp; |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | Environnements de build JavaScript, TypeScript ou SharePoint Framework (SPFx). Utilisez la version 1.55 ou ultérieure. |\n| &nbsp; | [Toolkit Teams](#install-the-teams-toolkit) | Extension Microsoft Visual Studio Code qui crée une structure de projet pour votre application. Utilisez la version 4.0.0. |\n| &nbsp; | [Node.js](https://nodejs.org/en/download/) | Environnement runtime JavaScript principal. Utilisez la dernière version de LTS v16.|\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams pour collaborer avec toutes les personnes avec lesquelles vous travaillez via les applications pour les conversations, les réunions, les appels, le tout au même endroit.|\n| &nbsp; | [Microsoft&nbsp; Edge](https://www.microsoft.com/edge) (recommandé) ou [Google Chrome](https://www.google.com/chrome/) | Un navigateur avec des outils de développement. |\n| **Optional** | &nbsp; | &nbsp; |\n| &nbsp; | [Azure Tools pour Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) et [Azure CLI](/cli/azure/install-azure-cli) | Outils Azure pour accéder aux données stockées ou déployer un backend cloud pour votre application Teams dans Azure. |\n| &nbsp; | [outils de développement React pour Chrome](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi) OU [outils de développement React pour Microsoft&nbsp;Edge](https://microsoftedge.microsoft.com/addons/detail/react-developer-tools/gpphkfbcpidddadnkolkpfckpihlkkil) | Extension DevTools du navigateur pour la bibliothèque JavaScript React open source. |\n| &nbsp; | [Afficheur Microsoft Graph](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graph Explorer, un outil basé sur un navigateur qui vous permet d’exécuter une requête à partir de données Microsoft Graph. |\n| &nbsp; | [Documentation pour les développeurs](https://dev.teams.microsoft.com/) | Portail web pour configurer, gérer et distribuer votre application Teams, y compris à votre organisation ou au magasin Teams. |\n\n\n> [!TIP]\n> Si vous utilisez des données Microsoft Graph, vous devez en savoir plus sur l’Explorateur Microsoft Graph et créer un signet. Cet outil basé sur un navigateur vous permet d’interroger Microsoft Graph en dehors d’une application.\n\n\n## <a name=\"prepare-development-environment\"></a>Préparer l’environnement de développement\n\nUne fois que vous avez installé les outils requis, configurez l’environnement de développement.\n\n\n### <a name=\"install-the-teams-toolkit\"></a>Installer le Kit de ressources Teams\n\nLe Kit de ressources Teams simplifie le processus de développement avec des outils permettant de provisionner et de déployer des ressources cloud pour votre application, de publier sur le magasin Teams, etc. \n \nVous pouvez utiliser le kit de ressources avec Visual Studio Code, ou CLI (interface de ligne de commande), appelé `TeamsFx`.\n\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Ouvrez Visual Studio Code et sélectionnez la vue **Extensions** (**Ctrl+Maj+X** / **⌘⇧-X** ou **Afficher > extensions**).\n1. Dans la zone de recherche, entrez **le Kit de ressources Teams**.\n1. Sélectionnez **Installer** en regard du Kit de ressources Teams.\n\n :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/install-toolkit-vscodeversion.png\" alt-text=\"Illustration montrant l’installation de l’extension Teams Toolkit.\":::\n\n L’icône du Kit de ressources Teams apparaît dans la barre latérale de Visual Studio Code après son installation.\n\n :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/hw-teams-toolkit-sidebar-icon.png\" alt-text=\"L’illustration montre l’icône du Kit de ressources Teams dans la barre latérale de Visual Studio Code.\":::\n\nVous trouverez également le Kit de ressources Teams sur la [Place de marché Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=TeamsDevApp.ms-teams-vscode-extension).\n\n# <a name=\"command-line\"></a>[Ligne de commande](#tab/cli)\n\nPour installer l’interface CLI TeamsFx, utilisez le gestionnaire de `npm` package :\n\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\n\nSelon votre configuration, vous devrez peut-être l’utiliser `sudo` pour installer l’interface CLI :\n\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\n\nCette condition est plus courante sur les systèmes Linux et macOS.\n\nVeillez à ajouter le cache global npm à votre chemin d’accès. Cette étape est normalement effectuée dans le cadre du programme d’installation Node.js.  \n\nVous pouvez utiliser l’interface CLI avec la `teamsfx` commande. Vérifiez que la commande fonctionne en exécutant `teamsfx -h`.\n\n> [!CAUTION]\n> Avant de pouvoir exécuter TeamsFx dans les terminaux PowerShell, vous devez activer la stratégie d’exécution « signée à distance » pour PowerShell.\n\n---\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Configurer votre locataire de développement Teams\n\nUn **locataire** est comme un espace ou un conteneur pour votre organisation dans Teams, où vous discutez, partagez des fichiers et exécutez des réunions. Cet espace est également l’endroit où votre chargement indépendant et testez votre application. Vérifions si vous êtes prêt à développer avec le locataire.\n\n### <a name=\"check-for-sideloading-option\"></a>Rechercher l’option de chargement indépendant\n\nAprès avoir créé l’application, vous devez charger votre application dans Teams sans la distribuer. Ce processus est appelé chargement indépendant. Connectez-vous à votre compte Microsoft 365 pour afficher cette option.\n\n > [!NOTE]\n > Le chargement indépendant est nécessaire pour afficher un aperçu et tester des applications dans l’environnement local Teams. S’il n’est pas activé, vous ne pourrez pas afficher un aperçu et tester votre application dans Teams localement.\n\nAvez-vous déjà un locataire et disposez-vous de l’accès administrateur ? Vérifions si c’est vraiment le cas !\n\nVérifiez si vous pouvez charger des applications de version test dans Teams :\n\n 1. Dans le client Teams, sélectionnez l’icône **Du Store** .\n 1. Sélectionnez **Gérer vos applications**.\n 1. Sélectionnez **Publier une application**.\n 1. Recherchez l’option permettant de **charger une application personnalisée**. Si vous voyez l’option, le chargement indépendant des applications est activé.\n\n     :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/spfx-custom-new1.png\" alt-text=\"bot home\":::\n\n     > [!NOTE]\n     > Si vous n’avez pas la possibilité de charger une application personnalisée, contactez votre administrateur Teams.\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Créer un locataire de développeur Teams gratuit (facultatif)\n\nSi vous n’avez pas de compte de développeur Teams, vous pouvez l’obtenir gratuitement. Rejoignez le programme développeur Microsoft 365 !\n\n1. Accédez au[Programme pour les développeurs Microsoft 365](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Sélectionnez **Joindre maintenant** et suivez les instructions à l’écran.\n1. Dans l’écran d’accueil, **sélectionnez Configurer l’abonnement E5**.\n1. Configurez votre compte d’administrateur. Une fois que vous avez terminé, l’écran suivant s’affiche.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/microsoft-365.png\" alt-text=\"Microsoft\":::\n\n1. Connectez-vous à Teams à l’aide du compte d’administrateur que vous venez de configurer. Vérifiez que vous disposez de l’option **Charger une application personnalisée** dans Teams.\n\n## <a name=\"get-a-free-azure-account\"></a>Obtenir un compte Azure gratuit\n\nSi vous souhaitez héberger votre application ou accéder aux ressources dans Azure, vous devez disposer d’un abonnement Azure. [Créez un compte gratuit](https://azure.microsoft.com/free/) avant de commencer.\n\nVous disposez maintenant de tous les outils et configurez votre compte. Ensuite, nous allons configurer votre environnement de développement et commencer à créer ! Sélectionnez l’application que vous souhaitez faire en premier.\n"
- title: Créer un espace de travail de projet pour votre application onglet
  durationInMinutes: 1
  content: "\nDémarrez le développement d’applications Microsoft Teams en créant votre première application. Cette application utilise la fonctionnalité d’onglet.\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-tab/your-helloworld-app-tab.png\" alt-text=\"Diagramme montrant que cette application comporte trois fonctionnalités. L’onglet est mis en surbrillance.\":::\n\nDans cette page, vous allez apprendre :\n1. [Guide pratique pour configurer un nouveau projet d’onglet avec le Kit de ressources Teams](#create-your-tab-project-workspace)\n1. [À propos de la structure de répertoires de votre application](#take-a-tour-of-the-tab-app-source-code)\n\n## <a name=\"create-your-tab-project-workspace\"></a>Créer votre espace de travail de projet d’onglet\n\nSi les prérequis sont en place, commençons !\n\n> [!NOTE]\n> L’interface utilisateur de Visual Studio Code affichée est à partir de Mac. Il peut varier en fonction de votre système d’exploitation, de la version du Kit de ressources Teams et de votre environnement.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vsc)\n\n1. Ouvrez Visual Studio Code.\n1. Sélectionnez l’icône :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: du kit de ressources Teams dans la barre latérale Visual Studio Code.\n\n1. Sélectionnez **Créer une application Teams**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project.png\" alt-text=\"Emplacement du lien Création d’un projet dans la barre latérale du Kit de ressources Teams.\":::\n\n1. Sélectionnez **Créer une application Teams** pour créer une application à l’aide du Kit de ressources Teams.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-new-app1.png\" alt-text=\"L’Assistant démarre pour créer un projet\":::\n\n1. Vérifiez que **Tab** est sélectionné comme fonctionnalité que vous souhaitez créer dans votre application. Sélectionnez **OK**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/select-capabilities-tabapp.png\" alt-text=\"Sélectionner la fonctionnalité d’application\":::\n\n1. Sélectionnez **JavaScript** comme langage de programmation.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/select-language-tab.png\" alt-text=\"Capture d’écran présentant comment sélectionner le langage de programmation.\":::\n\n1. Sélectionnez **dossier par défaut** pour stocker le dossier racine de votre projet à l’emplacement par défaut.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/select-default-location.png\" alt-text=\"Sélectionner l’emplacement par défaut\":::\n\n   Vous pouvez également modifier l’emplacement par défaut en procédant comme suit :\n\n      1. Sélectionnez **Parcourir**.\n\n         :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/select-browse.png\" alt-text=\"Sélectionner rechercher le stockage\":::\n\n      1. Sélectionnez l’emplacement de l’espace de travail du projet.\n\n      1. Sélectionnez **le dossier Sélectionner**.\n\n          :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/select-folder.png\" alt-text=\"select-folder\":::\n\n1. Entrez `helloworld` le nom de l’application. Veillez à utiliser uniquement des caractères alphanumériques. Ensuite, sélectionnez **Entrée**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/enter-name-tab1.png\" alt-text=\"Capture d’écran montrant où entrer le nom de l’application.\":::\n\n1. Par défaut, le projet s’ouvre dans une nouvelle fenêtre dans les 10 secondes. Si vous souhaitez ouvrir dans la fenêtre active, sélectionnez **Ouvrir dans la fenêtre active**.    \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/new-window-notification.png\" alt-text=\"Nouvelle notification de fenêtre\":::\n\n    L’application onglet Teams est créée en quelques secondes.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/tap-app-created1.png\" alt-text=\"Capture d’écran montrant l’application créée.\":::\n\n    Une fois votre application créée, le Kit de ressources Teams affiche le message suivant :\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/preview-project.png\" alt-text=\"Projet en préversion.\":::\n    \n    Vous pouvez sélectionner **Le débogage local** pour afficher un aperçu de votre projet. \n    \n    <details>\n    <summary>Récapitulatif rapide de la création d’une application Teams.</summary>\n     Regardez ce bref récapitulatif pour la création d’une application Teams.\n\n    ![Créer une application Teams](~/assets/videos/javascript-tab-app1.gif) </details>\n\n# <a name=\"command-line\"></a>[Ligne de commande](#tab/cli)\n\nUtilisez le CLI `teamsfx` pou créer votre premier projet. Commencez à partir du dossier dans lequel vous souhaitez créer le dossier du projet.\n\n``` bash\nteamsfx new\n```\nVous pouvez utiliser l’interface CLI pour créer une application Teams. L’interface CLI vous guide tout au long d’une série de questions. Chaque question inclut une instruction pour y répondre.\n\nPar exemple, utilisez des touches de direction pour sélectionner une option. Une fois que vous avez fait le choix, **sélectionnez Entrée** pour le confirmer.\n\n1. Sélectionnez **Créer une application Teams**.\n1. Sélectionnez la fonctionnalité **Tab** .\n1. Sélectionnez l'hébergement frontal **Azure**.\n1. Ne sélectionnez aucune ressource cloud.\n1. Sélectionnez **JavaScript** comme langage de programmation.\n1. Appuyez sur **Entrée** pour sélectionner le dossier de l’espace de travail par défaut.\n1. Entrez `helloworld` le nom de votre application. Le nom de l’application doit contenir uniquement des caractères alphanumériques.\n\n  Une fois que vous avez répondu à toutes les questions, votre projet est créé.\n\n---\n\n## <a name=\"take-a-tour-of-the-tab-app-source-code\"></a>Visite guidée du code source de l’application onglet\n\nTeams Toolkit fournit tous les composants pour la création d’une application. Après avoir créé le projet, vous pouvez afficher les dossiers et fichiers du projet dans la zone **Explorateur** de Visual Studio Code.\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-tab/folder-structure-tab-app.png\" alt-text=\"onglet structure\":::\n\nBien que vous soyez libre de choisir n’importe quelle infrastructure d’interface utilisateur (ou de ne pas en utiliser), cet exemple de code de modèle fournit une structure avec React composants.\n\nParmi les autres éléments de cette structure d’annuaires, le Kit de ressources gère les éléments suivants :\n\n| Nom du dossier | Sommaire |\n| --- | --- |\n| `.fx/configs` | Fichiers de configuration que l’utilisateur peut personnaliser pour l’application Teams. |\n| - `.fx/configs/config.<envName>.json` | Fichier de configuration pour chaque environnement. |\n| - `.fx/configs/azure.parameters.<envName>.json` | Fichier de paramètres pour l’approvisionnement Azure BICEP pour chaque environnement. |\n| - `.fx/configs/projectSettings.json` | Paramètres de projet globaux qui s’appliquent à tous les environnements. |\n| - `.fx/states` | Provisionnez la sortie générée par le Kit de ressources Teams.  Le kit de ressources crée ce dossier après avoir approvisionné des ressources pour votre application. |\n| - `.fx/states/state.<envName>.json` | Provisionnez le fichier de sortie pour chaque environnement. |\n| - `.fx/states/<env>.userdata` | Données utilisateur sensibles pour la sortie de provisionnement pour chaque environnement. |\n| `tabs` | Code de la fonctionnalité Tab nécessaire au moment de l’exécution, comme l’avis de confidentialité, les conditions d’utilisation et les onglets de configuration. |\n| - `tabs/src/index.jsx` | Point d’entrée de l’application frontale, où le composant principal de l’application est affiché avec `ReactDOM.render()` |\n| - `tabs/src/components/App.jsx` | Code permettant de gérer le routage d’URL dans l’application. Il appelle le [Kit de développement logiciel (SDK) client JavaScript Microsoft Teams](../msteams-platform/tabs/how-to/using-teams-client-sdk.md) pour établir une communication entre votre application et Teams. |\n| - `tabs/src/components/Tab.jsx` | Code pour implémenter l’interface utilisateur de votre application. |\n| - `tabs/src/components/TabConfig.jsx` | Code pour implémenter l’interface utilisateur qui configure votre application. |\n| `templates/appPackage` | Fichiers de modèle de manifeste d’application et icônes d’application : color.png et outline.png. |\n| - `templates/appPackage/manifest.template.json` | Manifeste d’application pour l’exécution de l’application dans un environnement local ou distant.  |\n| `templates/azure` | Fichiers de modèle BICEP |\n\nLorsque vous ajoutez la fonctionnalité cloud, Teams Toolkit ajoute les dossiers nécessaires au projet. Le `api` dossier contient le code dans n’importe quel Azure Functions que vous écrivez.\n"
- title: Générer et exécuter votre première application onglet
  durationInMinutes: 1
  content: "\nAprès avoir configuré votre espace de travail de projet avec le Kit de ressources Teams, générez votre projet d’onglet. Vous devez vous connecter à votre compte Microsoft 365.\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>Connectez-vous à votre compte Microsoft 365\n\nUtilisez votre compte Microsoft 365 pour vous connecter à Teams. Si vous utilisez un locataire de programme pour développeurs Microsoft 365, le compte d’administrateur que vous avez configuré lors de l’inscription est votre compte Microsoft 365.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Ouvrez Visual Studio Code.\n1. Sélectionnez l’icône du Kit de ressources :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: Teams dans la barre latérale.\n1. Sélectionnez **Se connecter à M365**.\n\n    Votre navigateur web par défaut s’ouvre pour vous permettre de vous connecter au compte.\n\n1. Connectez-vous à votre compte Microsoft 365 à l’aide de vos informations d’identification.\n1. Fermez le navigateur lorsque vous y êtes invité et revenez à Visual Studio Code.\n1. Revenez au Kit de ressources Teams dans Visual Studio Code.\n\n    La section **COMPTES** de la barre latérale affiche le nom de votre compte Microsoft 365. Teams Toolkit affiche **le chargement indépendant activé** si le chargement indépendant est activé pour votre compte Microsoft 365.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/m365-sideloading-enabled.png\" alt-text=\"Capture d’écran montrant où se connecter à Microsoft 365 et Azure.\":::\n\n    Vous êtes maintenant prêt à générer l’application et à l’exécuter dans l’environnement local !\n\n# <a name=\"command-line\"></a>[Ligne de commande](#tab/cline)\n\n1. Connectez-vous à Microsoft 365 avec l’interface CLI TeamsFx :\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Votre navigateur web par défaut s’ouvre pour vous permettre de vous connecter au compte. Connectez-vous à votre compte Azure à l’aide de vos informations d’identification. Fermez le navigateur lorsque vous y êtes invité.\n\n2. Connectez-vous à Azure avec l’interface CLI TeamsFx :\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Votre navigateur web par défaut s’ouvre pour vous permettre de vous connecter au compte. Connectez-vous à votre compte Azure à l’aide de vos informations d’identification. Fermez le navigateur lorsque vous y êtes invité.\n\n    Les connexions de compte sont partagées entre Visual Studio Code et l’interface CLI TeamsFx.\n\n    Maintenant que l’environnement de développement est configuré, vous pouvez créer, générer et déployer votre première application Teams.\n\n---\n\n## <a name=\"build-and-run-your-app-locally-in-visual-studio-code\"></a>Générez et exécutez votre application localement dans Visual Studio Code\n\nPour créer et exécuter votre application localement :\n\n1. Dans Visual Studio Code, sélectionnez **F5** pour exécuter l’application en mode débogage.\n\n    <!-- markdownlint-disable MD033 -->\n\n    <details>\n    <summary>Découvrez ce qui se produit lorsque vous exécutez votre application localement dans le débogueur.</summary>\n\n    Si vous vous demandez, lorsque vous appuyez sur la touche **F5** , Teams Toolkit :\n\n    1. Vérifie les conditions préalables suivantes :\n      * Vous êtes connecté avec un compte Microsoft 365.\n      * Le chargement indépendant est activé pour votre compte Microsoft 365.\n      * La version Node.js prise en charge est installée.\n      * Les packages NPM pour l’application onglet sont installés.\n      * Le certificat de développement pour localhost est installé.           \n      * Le port est disponible pour l’application onglet.\n\n      > [!NOTE]\n      > Si teams Toolkit ne parvient pas à vérifier un prérequis particulier, il vous invite à le vérifier.\n\n    2. Inscrit l’application auprès d’Azure AD et configure l’application.\n    3. Inscrit l’application dans le portail des développeurs Teams et configure l’application.\n    4. Démarre l’application onglet.\n    5. Démarre Teams dans un navigateur web et charge l’application onglet.\n\n    </details>\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/f5-build-and-run.png\" alt-text=\"Capture d’écran montrant quand la touche F5 est enfoncée.\":::\n\n    > [!NOTE]\n    > Lorsque vous exécutez l’application pour la première fois, toutes les dépendances sont téléchargées et l’application est générée. Une fenêtre de navigateur s’ouvre une fois la génération terminée. Ce processus peut prendre 3 à 5 minutes.\n\n    Le kit de ressources vous invite à installer un certificat local, si nécessaire. Ce certificat permet à Teams de charger votre application à partir de `https://localhost`.\n\n1. Sélectionnez **Oui** si la boîte de dialogue suivante s’affiche :\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-tab/hw-warning.png\" alt-text=\"microsoft\":::\n\n    Ou **sélectionnez Continuer**, en fonction de votre système d’exploitation :\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/ssl-prompt-mac.png\" alt-text=\"Capture d’écran montrant l’invite à installer un certificat SSL pour permettre à Teams de charger votre application à partir de localhost sur Mac.\":::\n\n    Le client web Teams s’ouvre dans une fenêtre de navigateur.\n\n1. Connectez-vous avec votre compte Microsoft 365, si vous y êtes invité.\n\n1. Sélectionnez **Ajouter** lorsque vous êtes invité à charger l’application sur Teams sur votre ordinateur local.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/add-tab-app-local-debug.png\" alt-text=\"Ajouter l’application à Teams\":::\n\n1. Félicitations, votre première application s’exécute sur Teams !\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/tab-app-localdebug.png\" alt-text=\"Capture d’écran de l’application terminée\":::\n\n   Vous pouvez ajouter une fonctionnalité d’authentification unique pour récupérer les détails de l’utilisateur. Vous pouvez effectuer des activités de débogage normales, telles que la définition de points d’arrêt, comme s’il s’agissait d’une autre application web. L’application prend en charge le rechargement à chaud. Si vous modifiez un fichier dans le projet, la page est rechargée.\n\n  <!-- markdownlint-disable MD033 -->\n\n  <details>\n  <summary>Découvrez comment résoudre les problèmes si votre application ne s’exécute pas localement.</summary>\n\n  Pour exécuter correctement votre application dans Teams, vérifiez que vous avez activé le chargement indépendant dans votre compte Teams. Vous pouvez en savoir plus sur le chargement indépendant dans la section Prérequis.\n\n  </details>\n\n \n"
- title: Déployer votre première application Teams
  durationInMinutes: 1
  content: "\nVous avez appris à créer, générer et exécuter une application Teams avec l’application Tab. La dernière étape consiste à déployer votre application sur Azure.\n\nDéployons la première application avec la fonctionnalité Tab sur Azure à l’aide du Kit de ressources Teams.\n\n## <a name=\"sign-in-to-your-azure-account\"></a>Connectez-vous à votre compte Azure\n\nUtilisez ce compte pour accéder à Microsoft Portail Azure et provisionner de nouvelles ressources cloud pour prendre en charge votre application.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Ouvrez Visual Studio Code.\n1. Ouvrez le dossier du projet dans lequel vous avez créé l’application onglet.\n1. Sélectionnez l’icône du Kit de ressources  :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: Teams dans la barre latérale.\n1. Sélectionnez **Se connecter à Azure**.\n\n    > [!TIP]\n    > Si l’extension de compte Azure est installée et que vous utilisez le même compte, vous pouvez ignorer cette étape. Utilisez le même compte que celui que vous utilisez dans d’autres extensions.\n\n    Votre navigateur web par défaut s’ouvre pour vous permettre de vous connecter au compte.\n1. Connectez-vous à votre compte Azure à l’aide de vos informations d’identification.\n1. Fermez le navigateur lorsque vous y êtes invité et revenez à Visual Studio Code.\n\n    La section **COMPTES** de la barre latérale affiche les deux comptes séparément. Il répertorie également le nombre d’abonnements Azure utilisables disponibles. Vérifiez que vous disposez d’au moins un abonnement Azure utilisable. Si ce n’est pas le cas, déconnectez-vous et utilisez un autre compte.\n\n    Vous êtes maintenant prêt à déployer votre application sur Azure !\n\n    Félicitations, vous avez créé une application Teams ! \n    À présent, nous allons apprendre à déployer l’une des applications sur Azure à l’aide du Kit de ressources Teams.\n\n# <a name=\"command-line\"></a>[Ligne de commande](#tab/cline)\n\n1. Connectez-vous à Microsoft 365 avec l’interface CLI TeamsFx :\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Votre navigateur web par défaut s’ouvre pour vous permettre de vous connecter au compte. Connectez-vous à votre compte Azure à l’aide de vos informations d’identification. Fermez le navigateur lorsque vous y êtes invité.\n\n2. Connectez-vous à Azure avec l’interface CLI TeamsFx :\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Votre navigateur web par défaut s’ouvre pour vous permettre de vous connecter au compte. Connectez-vous à votre compte Azure à l’aide de vos informations d’identification. Fermez le navigateur lorsque vous y êtes invité.\n\n    Les connexions de compte sont partagées entre Visual Studio Code et l’interface CLI TeamsFx.\n\n    Félicitations, vous avez créé une application Teams ! \n    À présent, nous allons apprendre à déployer l’une des applications sur Azure à l’aide du Kit de ressources Teams.\n\n---\n\n  [!INCLUDE [Provision and Deploy your app on Azure](~/includes/get-started/azure-provisioning-instructions-tab.md)]\n\n  <!-- markdownlint-disable MD033 -->\n  <details>\n  <summary>Découvrir ce qui se produit lorsque vous avez déployé votre application vers Azure</summary>\n\n  Avant le déploiement, l’application s’est exécutée localement :\n\n  * Le serveur principal s’exécute en utilisant **Azure Functions Core Tools**.\n  * Le point de terminaison HTTP de l’application, dans lequel Microsoft Teams charge l’application, s’exécute localement.\n\n  Le déploiement est un processus en deux étapes. Vous provisionnez les ressources sur un abonnement Azure actif, puis vous déployez ou chargez le code principal et frontal de l’application dans Azure.\n\n  * Le serveur principal, s’il est configuré, utilise différents services Azure, notamment Azure App Service et Stockage Azure.\n  * L’application frontale sera déployée sur un compte de stockage Azure configuré pour l’hébergement web statique.\n\n  </details>\n"
- title: Félicitations !
  durationInMinutes: 1
  content: "\nTu l’as fait !\n\nVous avez créé une application onglet.\n\nMaintenant que vous avez appris à créer une application de base, vous pouvez passer à la création d’applications plus complexes. Pour commencer, essayez d’ajouter des fonctionnalités à vos applications existantes.\n\nPour ajouter des fonctionnalités à votre application existante :\n\n1. Sélectionnez **Ajouter des fonctionnalités** dans la section **Développement** de la barre latérale du Kit de ressources Teams.\n\n1. Sélectionnez la fonctionnalité que vous souhaitez ajouter à votre application.\n\nVoilà ! Teams Toolkit ajoute la structure automatique de la nouvelle fonctionnalité à la structure d’annuaires de votre application. Suivez les procédures pour générer et déployer l’application, et votre application aura plusieurs fonctionnalités. \n\nVous avez terminé le didacticiel pour créer une application onglet avec JavaScript.\n"
