### YamlMime:Tutorial
title: Créer votre première application à l’aide de Blazor
metadata:
  title: Hello World avec Blazor
  description: Dans ce didacticiel, vous allez apprendre à créer une application Hello World avec Blazor.
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: Vue d’ensemble de la mise en place
  ms.custom: mvc
  ms.localizationpriority: none
  ms.openlocfilehash: 6d5e41a3e56ec5bbca029126693d9bb3f04c3a0e
  ms.sourcegitcommit: 22c9e44437720d30c992a4a3626a2a9f745983c1
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 11/03/2021
  ms.locfileid: "60720972"
items:
- durationInMinutes: 1
  content: "\nBlazor vous permet de créer des UIS web interactives à l’C#, au lieu de JavaScript. \n\nVous pouvez commencer à Microsoft Teams développement d’applications en construisant votre première application avec une fonctionnalité onglet. Vous allez créer cette application avec Blazor et Visual Studio 2019.\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-tab/your-helloworld-app-tab.png\" alt-text=\"Le diagramme montrant cette application comporte trois fonctionnalités. L’onglet est mis en surbrillant.\" border=\"false\":::\n\n> [!NOTE]\n> Actuellement, Teams Shared Computer Toolkit offre un modèle uniquement pour une application Onglet avec Visual Studio 2019 et Blazor. Les fonctionnalités bot et extension de message ne sont pas disponibles.\n"
- title: Configuration requise
  durationInMinutes: 1
  content: "\nVoici la liste des outils dont vous aurez besoin pour créer et déployer vos applications.\n\n| &nbsp;    | Installer   | Pour utiliser... |\n| --- | --- | --- |\n| **Obligatoire** | &nbsp; | &nbsp; |\n| &nbsp; | [Microsoft Edge](https://www.microsoft.com/edge) (recommandé) ou [Google Chrome](https://www.google.com/chrome/) | Navigateur avec outils de développement. |\n| &nbsp; | [Visual Studio 2019,](https://visualstudio.com/download)ASP.NET développement **web** et web, ou charge de travail de **développement .NET Core sur plusieurs plateformes** | .NET |\n| **Optional** | &nbsp; | &nbsp; |\n| &nbsp; | [Outils Azure pour Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) [et Azure CLI](/cli/azure/install-azure-cli) | Outils Azure pour accéder aux données stockées ou pour déployer un système back-end basé sur le cloud pour Teams application dans Azure. |\n| &nbsp; | [Afficheur Microsoft Graph](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graph Explorer, un outil basé sur un navigateur qui vous permet d’exécuter une requête à partir de microsoft Graph données. |\n| &nbsp; | [Documentation pour les développeurs](https://dev.teams.microsoft.com/) | Portail web pour configurer, gérer et distribuer votre application Teams y compris à votre organisation ou au Teams store. |\n| &nbsp; | **Visual Studio Code Extensions** | &nbsp; |\n| &nbsp; | [Outils azure Functions Core](/azure/azure-functions/functions-run-local) | Composants principaux localement pendant une exécution de débogage local, y compris les services d’aide à l’authentification requis lors de l’exécution de vos services dans Azure. Il est installé dans le répertoire du projet (à l’aide de npm `devDependencies` ). |\n| &nbsp; | [Kit de développement logiciel .NET](/dotnet/core/install/) | Liaisons personnalisées pour le débogage local et les déploiements d’applications Azure Functions. Si vous n’avez pas installé le SDK .NET 3.1 (ou version ultérieure) globalement, la version portable peut être installée. |\n\n> [!TIP]\n> Si vous travaillez avec des données Graph Microsoft, vous devez en savoir plus sur l’Explorateur microsoft et lui Graph signet. Cet outil basé sur un navigateur vous permet d’interroger Microsoft Graph en dehors d’une application.\n</details>\n\n## <a name=\"prepare-development-environment\"></a>Préparer l’environnement de développement\n\nAprès avoir installé les outils requis, installez l’environnement de développement.\n\n### <a name=\"install-the-teams-toolkit\"></a>Installer le Teams Shared Computer Toolkit\n\nLe Teams Shared Computer Toolkit simplifie le processus de développement avec des outils pour mettre en service et déployer des ressources cloud pour votre application, publier sur le Teams store, etc. Vous pouvez utiliser le kit de ressources avec Visual Studio Code, Visual Studio ou en tant qu’CLI (appelé `teamsfx` ). \n\n# <a name=\"visual-studio-2019\"></a>[Visual Studio 2019](#tab/vs)\n\nVous pouvez utiliser Visual Studio 2019 pour développer des applications Teams avec Blazor Server dans .NET.\n\nPour installer l’extension Teams Shared Computer Toolkit :\n\n1. Ouvrez Visual Studio 2019.\n1. Select **Extensions**  >  **Manage Extensions**.\n1. Dans la zone de recherche, entrez **Teams Shared Computer Toolkit**.\n1. Sélectionnez l’extension Teams Shared Computer Toolkit et sélectionnez **Télécharger.** L’extension est téléchargée.\n1. Fermez Visual Studio 2019 pour installer l’extension.\n\n# <a name=\"command-line\"></a>[Ligne de commande](#tab/cli)\n\nPour installer l’CLI TeamsFx, utilisez le `npm` gestionnaire de package :\n\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\n\nEn fonction de votre configuration, vous devrez peut-être l’utiliser `sudo` pour installer l’CLI :\n\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\n\nCette condition est plus courante sur les systèmes Linux et macOS.\n\nVeillez à ajouter le cache global npm à votre chemin d’accès. Cette étape est normalement effectuée dans le cadre du programme d’installation Node.js'installation.  \n\nVous pouvez utiliser l’CLI avec la `teamsfx` commande. Vérifiez que la commande fonctionne en cours `teamsfx -h` d’exécution.\n\n> [!CAUTION]\n> Avant de pouvoir exécuter TeamsFx dans les terminaux PowerShell, vous devez activer la stratégie d’exécution « signé à distance » pour PowerShell.\n\n---\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Configurer votre client Teams développement\n\nUn **client** est comme un espace ou un conteneur pour votre organisation dans Teams, où vous discutez, partagez des fichiers et exécutez des réunions. Cet espace est également l’endroit où vous chargez et testez votre application. Nous allons vérifier si vous êtes prêt à développer avec le client.\n\n### <a name=\"enable-sideloading-option\"></a>Activer l’option de chargement de version secondaire\n\nAprès avoir créé l’application, vous devez charger votre application dans Teams sans la distribuer. Ce processus est appelé chargement de version d’évaluation. Connectez-vous à votre Microsoft 365 pour afficher cette option.\n  \nAvez-vous déjà un client et avez-vous l’accès administrateur ? Nous allons vérifier si vous le faites vraiment !\n\nVérifiez si vous pouvez télécharger une version de version Teams :\n\n1. Dans le Teams client, sélectionnez **l’icône Du Store.**\n1. Sélectionnez **Gérer vos applications.**\n1. Recherchez l’option pour **Télécharger une application personnalisée.** Si l’option s’offre à vous, le chargement de version latéral des applications est activé.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"Illustration shows the option to upload a custom app in Teams.\":::\n\n    > [!NOTE]\n    > Si Teams n’affiche pas l’option de téléchargement d’une application personnalisée, parlez-en à Teams administrateur.\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Créer un client Teams développeur gratuit (facultatif)\n\nSi vous n’avez pas de compte Teams développeur, vous pouvez l’obtenir gratuitement. Rejoignez le Microsoft 365 développeur !\n\n1. Go to the [Microsoft 365 developer program](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Sélectionnez **Rejoindre maintenant** et suivez les instructions à l’écran.\n1. Dans l’écran d’accueil, **sélectionnez Configurer l’abonnement E5.**\n1. Configurer votre compte d’administrateur. Une fois que vous avez terminé, l’écran suivant s’affiche.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"Exemple de ce que vous voyez après vous être inscrire au programme Microsoft 365 développeur.\":::\n\n1. Connectez-vous Teams à l’aide du compte d’administrateur que vous viennent de configurer. Vérifiez que vous avez la Télécharger une option **d’application** personnalisée dans Teams.\n\n## <a name=\"get-a-free-azure-account\"></a>Obtenir un compte Azure gratuit\n\nSi vous souhaitez héberger votre application ou accéder aux ressources dans Azure, vous devez avoir un abonnement Azure. [Créez un compte gratuit](https://azure.microsoft.com/free/) avant de commencer.\n\nVous avez maintenant tous les outils et configurer vos comptes. Ensuite, nous allons configurer votre environnement de développement et commencer à créer !\n"
- title: Créer un espace de travail de projet pour votre application Onglet
  durationInMinutes: 1
  content: "Ce didacticiel vous guide tout au long des étapes nécessaires pour créer, exécuter et déployer votre première application Teams à l’aide de .NET/Blazor.\n\nDans ce didacticiel, vous allez découvrir :\n1. [Comment configurer un nouveau projet d’onglet avec Teams Shared Computer Toolkit](#create-your-project)\n1. [À propos de la structure de répertoire de votre application](#take-a-tour-of-the-source-code)\n\n## <a name=\"create-your-project\"></a>Créer votre projet\n\nUtilisez le Kit de ressources Teams pou créer votre premier projet :\n\n1. Ouvrez Visual Studio 2019.\n1. Sélectionnez **Créer un projet.**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-select-project.png\" alt-text=\"Illustration shows the option to create a new project.\" border=\"false\":::\n\n1. Sélectionnez **Microsoft Teams** dans la liste de listes de **tous les types** de projets.  \n    \n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-select-teams-app.png\" alt-text=\"L’illustration montre l’option de sélection d’un modèle.\" border=\"false\":::\n\n1. Sélectionnez **Microsoft Teams App comme** modèle, puis sélectionnez **Suivant.**\n    **L’écran Configurer votre nouveau** projet s’affiche.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-configure-project.png\" alt-text=\"Illustration shows the options to configure new project.\" border=\"false\":::\n\n1. Entrez un nom approprié pour votre projet.\n\n1. Sélectionnez le chemin d’accès du dossier où vous souhaitez créer l’espace de travail de projet.\n\n1. Sélectionnez le nom de la solution que vous créez, puis sélectionnez **Suivant.**\n    **L’écran Informations** supplémentaires s’affiche.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-add-info-create.png\" alt-text=\"Illustration shows the option to provide additional information.\" border=\"false\":::\n\n1. Entrez le nom de l’application.\n\n1. Entrez le nom de la société.\n  Le nom de l’application et le nom de la société sont affichés pour vos utilisateurs finaux.\n\n1. Sélectionnez **Créer**. \n    \n    Votre Teams’application est créée en quelques secondes.\n    \n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-tab-app.png\" alt-text=\"Illustration shows the app project created in Visual Studio 2019.\" border=\"false\":::\n\n<details>\n<summary>Récapitulatif rapide de la création d’Teams application.</summary>\nRegardez ce résumé court pour créer une application Teams’application.\n\n![Créer une application Teams de messagerie](~/assets/videos/blazor-tab-app.gif)\n</details>\n\n## <a name=\"take-a-tour-of-the-source-code\"></a>Suivre une visite guidée du code source\n\nAprès la création du projet, vous avez les composants pour créer une application personnelle de base. Vous pouvez afficher la structure du répertoire du projet dans **la** zone Explorateur de solutions Visual Studio 2019.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-app-solution-explorer.png\" alt-text=\"Capture d’écran montrant les fichiers de projet d’application pour une application personnelle Visual Studio 2019.\" border=\"false\":::\n\nLe Teams Shared Computer Toolkit crée une création de la création de la forme pour votre projet en fonction des fonctionnalités que vous avez sélectionnées. Entre autres fichiers, le Teams Shared Computer Toolkit conserve :\n\n- Icônes d’application : les icônes d’application sont stockées sous forme de fichiers PNG `color.png` dans et `outline.png` .\n- `manifest.json`: le manifeste de l’application pour la publication via le portail de développement pour Teams est stocké dans `Properties/manifest.json` .\n- `BackendController.cs`: un contrôleur de serveur back-end est fourni pour `Controllers/BackendController.cs` faciliter l’authentification.\n\nLe Teams Shared Computer Toolkit modèles permet d’échafauder tout le code nécessaire pour un onglet de base en tant que serveur Blazor.\n\n- `Pages/Tab.razor`: est le point d’entrée de l’application frontale.\n- `TeamsFx.cs`et `JS/src/index.js` : est utilisé pour initialiser les communications avec l’Teams hôte.\n\nVous pouvez ajouter des fonctionnalités de back-end en ajoutant d’ASP.NET Core contrôleurs de données à votre application.\n"
- title: Créer et exécuter votre première application Teams localement
  durationInMinutes: 1
  content: "Après avoir installé votre espace de travail de projet avec Teams Shared Computer Toolkit, créez votre projet d’onglet. Vous devez vous inscrire à votre compte Microsoft 365 client.\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>Connectez-vous à votre compte Microsoft 365 client\n\nUne fois le projet créé, configurer l' sign-on unique avec Microsoft 365 :\n\n1. Sélectionnez **Project**  >  **TeamsFx**  >  **Configurer pour l' sso...**.\n1. Connectez-vous à votre compte Microsoft 365 administrateur lorsque vous y invitez.\n\n## <a name=\"build-and-run-your-app\"></a>Créer et exécuter votre application\n\nPour créer et exécuter votre application localement :\n\n1. Ouvrez Visual Studio 2019. \n1. Sélectionnez **Débogage**  >  **Démarrer le débogage** ou **sélectionnez F5** pour exécuter votre application en mode débogage.\n    <!-- markdownlint-disable MD033 -->\n    <details>\n    <summary>Découvrez ce qui se produit lorsque vous exécutez votre application localement dans le débogueur.</summary>\n\n    Lorsque vous **sélectionnez F5,** le Teams Shared Computer Toolkit :\n\n    1. Inscrit votre application avec Azure Active Directory.\n    1. Enregistre votre application pour « chargement de version de version » dans Microsoft Teams.\n    1. Démarre le back-end de votre application en cours d’exécution localement.\n    1. Démarre votre application frontale hébergée localement.\n    1. Démarre Microsoft Teams dans un navigateur web avec une commande pour demander Teams charger l’application de côté (l’URL est enregistrée dans le manifeste de l’application).\n\n    </details>\n1. Installez le certificat SSL auto-signé pour le débogage local, si nécessaire.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ssl-prompt.png\" alt-text=\"Screenshot showing how the prompt to install an SSL certificate to enable Teams to load your application from localhost.\":::\n\n    Teams est chargé dans un navigateur web.\n1. Sélectionnez **Annuler** pour rester dans le navigateur, si vous êtes invité à ouvrir Microsoft Teams client.\n1. Connectez-vous à l’aide de votre compte Microsoft 365.\n1. Sélectionnez **Ajouter,** lorsque vous y invitez l’application à Teams.\n\n    Votre application s’affiche désormais :\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-completed-app.png\" alt-text=\"Capture d’écran de l’application terminée\":::\n\n    Vous pouvez faire des activités de débogage normales, telles que la définition de points d’arrêt, comme s’il s’ait d’une autre application web. L’application prend en charge le rechargement à chaud.  Si vous modifiez un fichier dans le projet, la page est rechargée.\n\n<!-- markdownlint-disable MD033 -->\n<details>\n<summary>Découvrez comment résoudre les problèmes si votre application ne s’exécute pas localement.</summary>\n\nPour exécuter votre application dans Teams, vous avez besoin d’un compte Microsoft 365 de développement qui autorise le chargement de version de l’application. Pour plus d’informations à ce sujet, voir la section Conditions préalables.\n</details>\n"
- title: Déployer votre première application Teams de messagerie
  durationInMinutes: 1
  content: "\nVous avez appris à créer, créer et exécuter Teams application avec la fonctionnalité Onglet. La dernière étape consiste à déployer votre application sur Azure.\n\nDéployons la première application avec la fonctionnalité Onglet sur Azure à l’aide Teams Shared Computer Toolkit.\n\n## <a name=\"deploy-your-app-to-azure\"></a>Déployer votre application sur Azure\n\nLe déploiement se compose de deux étapes :\n\n1. Les ressources cloud nécessaires sont créées. Ce processus est également appelé approvisionnement.\n1. Commencez à coder et copiez votre application dans les ressources cloud créées.\n\n    > **APERÇU**\n    >\n    > La prise en charge des applications Blazor est une nouveauté de Teams Shared Computer Toolkit. L’approvisionnement et le déploiement sont effectués avec une combinaison de Visual Studio 2019 et du portail de développement pour Teams.\n\n## <a name=\"provision-and-deploy-your-app-to-azure-app-service\"></a>Mettre en service et déployer votre application dans Azure App Service\n\n1. Dans l’Explorateur de solutions, cliquez avec le bouton droit sur le nœud de projet et sélectionnez **Publier.** Vous pouvez également utiliser **l’élément**  >  **de** menu Publier la build.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-build-publish.png\" alt-text=\"Sélectionner l’opération Publier pour le projet\" border=\"false\":::\n\n1. Sélectionnez **Azure** et **sélectionnez Suivant** dans **la fenêtre** Publier.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-publish.png\" alt-text=\"Sélectionner Azure comme cible de publication\" border=\"false\":::\n\n1. Sélectionnez **Azure App Service (Windows)** et **sélectionnez Suivant**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-app-service.png\" alt-text=\"Sélectionner Azure App Service comme cible de publication\" border=\"false\":::\n\n1. Sélectionnez **+** pour créer une nouvelle instance de Service d’application.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-publish-app-subscription.png\" alt-text=\"Créez une instance.\" border=\"false\":::\n\n    Dans la boîte de dialogue Service d’application **(Windows),** les champs d’entrée **Nom,** Nom de l’abonnement, Groupe de ressources et **Plan** d’hébergement sont remplies.  Si un service d’application est déjà en cours d’exécution, les paramètres existants sont sélectionnés. Vous pouvez choisir de créer un groupe de ressources et un plan d’hébergement.\n\n1. Sélectionnez **Créer** lorsque vous êtes prêt.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-service-create-new.png\" alt-text=\"Sélectionner le plan d’hébergement et l’abonnement\" border=\"false\":::\n\n    Vous remarquerez que l’instance nouvellement créée a été automatiquement sélectionnée dans la boîte **de** dialogue Publier.\n\n1. Sélectionnez **Terminer** lorsque vous êtes prêt.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-publish-app-instance.png\" alt-text=\"Sélectionnez la nouvelle instance.\" border=\"false\":::\n\n1. Sélectionnez **l’icône** Modifier (crayon) en de côté **du mode déploiement.** \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-publish-deploy-mode.png\" alt-text=\"Sélectionnez le mode de déploiement.\" border=\"false\":::\n      \n      La boîte de dialogue Publier s’affiche.\n\n1. Sélectionnez **Self-contained** en tant que **mode de** déploiement, puis **sélectionnez Enregistrer**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-publish-setting.png\" alt-text=\"Sélectionnez le mode de déploiement autonome.\" border=\"false\":::\n\n1. Sélectionnez **Publier**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-publish.png\" alt-text=\"Publier votre application sur le service d’application\" border=\"false\":::\n\n      Visual Studio 2019 déploie l’application sur votre service d’application Azure et l’application web se charge dans votre navigateur.  \n\n1. `/tab`Ajoutez-la à la fin de l’URL pour afficher votre page.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-tab-app.png\" alt-text=\"Application d’onglet Blazor\" border=\"false\":::\n\n    Les **propriétés** Publier dans le **volet** d’hébergement Visual Studio l’URL du site et d’autres détails. \n  \n1. Sélectionnez **l’icône** Copier en face de l’URL du site et enregistrez-la dans un fichier texte.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-site-url.png\" alt-text=\"URL du site d’application Blazor\" border=\"false\":::\n"
- title: Prévisualiser et tester votre application dans Teams
  durationInMinutes: 1
  content: "\nVous pouvez utiliser le portail du développeur pour configurer votre application afin de la prévisualiser et de la publier dans l’Teams de développement.\n\n## <a name=\"create-an-environment-for-your-app\"></a>Créer un environnement pour votre application\n\nLe Portail des développeurs pour Teams l’endroit où les onglets de votre application sont chargés avec un **environnement.**  \n\n### <a name=\"to-create-an-environment\"></a>Pour créer un environnement\n\n1. Ouvrez le Portail des développeurs pour Teams. \n1. Connectez-vous avec votre Microsoft 365 d’administration.\n\n1. Recherchez **applications** sur la barre latérale et sélectionnez-la.\n\n1. Sélectionnez votre application dans la liste qui s’affiche.\n\n1. Sélectionnez **Environnements**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-blazor-create-env.png\" alt-text=\"Sélectionner des environnements\" border=\"false\":::\n\n1. Sélectionnez **Créer votre premier environnement.**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-blazor-add-env.png\" alt-text=\"Sélectionnez Ajouter de nouveaux environnements\" border=\"false\":::\n\n1. Entrez un nom pour votre environnement, puis sélectionnez **Ajouter.**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-blazor-env-name.png\" alt-text=\"Ajouter un nouveau nom d’environnement\" border=\"false\":::\n\n1. Sélectionnez **Créer votre première variable d’environnement.**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-blazor-create-env-var.png\" alt-text=\"Ajouter une nouvelle variable d’environnement\" border=\"false\":::\n\n1. Entrez `azure_app_url` le nom .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-blazor-add-variable.png\" alt-text=\"Créer une variable d’environnement\" border=\"false\":::\n\n1. Entrez l’URL de votre site Azure sans `https://` la valeur .  Utilisez l’URL que vous avez notée dans le volet d’hébergement de la boîte de dialogue Publier. \n\n1. Sélectionnez **Ajouter**.\n  \n    L’environnement est ajouté.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-blazor-azure-url-added.png\" alt-text=\"Créer une variable d’environnement\" border=\"false\":::\n\n## <a name=\"update-the-app-manifest\"></a>Mettre à jour le manifeste de l’application\n\nLe manifeste de l’application charge l’onglet à partir d’une `localhost` URL. Configurez le manifeste de l’application pour charger l’onglet à partir de l’URL répertoriée dans l’environnement que vous avez créé.\n\nPour mettre à jour le manifeste de l’application :\n- [Mettre à jour l’URL du site web](#update-website-url)\n- [Configurer la fonctionnalité d’onglet](#configure-the-tab-capability)\n- [Configurer l' sign-on unique pour votre application](#configure-single-sign-on-for-your-app)\n\n### <a name=\"update-website-url\"></a>Mettre à jour l’URL du site web\n\n1. Sélectionnez **Informations de base** dans la barre latérale.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devcenter-environments3.png\" alt-text=\"Sélectionner des informations de base\":::\n\n    Vous découvrirez qu’il est mentionné dans le cadre `localhost:XXXXX` de l’URL donnée dans le volet **d’informations** de base.\n\n1. Remplacez toutes les occurrences de , y compris les accolades, pour le site web (doit être une URL HTTPS valide) et les `localhost:XXXXX` `{{azure_app_url}}` URL **d’application**. \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devcenter-environments4.png\" alt-text=\"Ajuster les informations de base pour l’environnement\":::\n\n1. Sélectionnez **Enregistrer** lorsque vous avez terminé le remplacement.\n  \n    Votre application est maintenant configurée pour s’exécuter à partir de l’URL que vous avez enregistrée dans la variable d’environnement.\n\n### <a name=\"configure-the-tab-capability\"></a>Configurer la fonctionnalité d’onglet\n\n1. Sélectionnez **les fonctionnalités de** l’application dans la barre latérale.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devcenter-environments5.png\" alt-text=\"Sélectionner des fonctionnalités\":::\n\n1. Sélectionnez **Onglet personnel.**\n1. Sélectionnez les points triples en de côté de **l’onglet Personnel,** puis sélectionnez **Modifier**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devcenter-environments6.png\" alt-text=\"Modifier les paramètres d’onglet personnel\":::\n\n1. Remplacez l’URL par la variable d’environnement dans les champs **URL** de contenu et **URL du site** web.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devcenter-environments7.png\" alt-text=\"Modifier les URL d’onglet personnel\":::\n\n1. Sélectionnez **Mettre à jour**.\n\n1. Sélectionnez **Enregistrer**.\n  \n  Votre onglet est configuré pour s’exécuter à partir de l’URL Azure.\n\n### <a name=\"configure-single-sign-on-for-your-app\"></a>Configurer l' sign-on unique pour votre application\n\n1. Sélectionnez **Sign-On unique** dans la barre latérale.\n\n1. Remplacez `localhost` **l’URI de l’ID d’application** par `{{azure_app_url}}` .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-sso.png\" alt-text=\"Modifier l’URI de l’ID d’application d' sign-on unique\":::\n\n1. Sélectionnez **Enregistrer**.\n\n1. Dans la barre latérale, sélectionnez **Domaines.**\n\n1. Sélectionnez **Ajouter un domaine**.\n\n1. Vérifiez `{{azure_app_url}}` s’il s’agit d’un domaine valide. Si ce n’est pas le cas, ajoutez-le en tant que domaine valide. Ensuite, sélectionnez **Ajouter.**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/add-domain.png\" alt-text=\"Ajouter un domaine\":::\n\n  Vous avez maintenant mis à jour le fichier manifeste. Vous pouvez utiliser l’option **Aperçu Teams** en haut de la page pour lancer votre application dans Teams.\n"
