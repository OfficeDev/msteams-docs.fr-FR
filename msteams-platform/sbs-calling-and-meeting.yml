### YamlMime:Tutorial
title: Bot d’appel et de réunion Teams
metadata:
  title: Bot Teams avec appel et réunion
  description: Dans ce didacticiel, vous allez apprendre à configurer l’appel et la réunion dans un bot pour Teams.
  audience: Developer
  level: Beginner
  ms.date: 02/08/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/calls-and-meetings/registering-calling-bot.md
  nextTutorialTitle: Enregistrer un bot appelant
  ms.custom: mvc
  ms.localizationpriority: none
  ms.openlocfilehash: 2a94377f6f2ea7d8faa2366d97b1a2c65d244b96
  ms.sourcegitcommit: e16b51a49756e0fe4eaf239898e28d3021f552da
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 06/04/2022
  ms.locfileid: "65887785"
items:
- durationInMinutes: 1
  content: >
    Le bot d’appel et de réunion fournit des fonctionnalités de base telles que la création d’un appel, la participation à un appel, le transfert ou la redirection d’un appel, la participation à une réunion planifiée et l’invitation des participants en intégrant l’API Graph de l’API de communications cloud.


    Les bots peuvent interagir avec les appels et réunions Teams à l’aide de la voix, de la vidéo et du partage d’écran en temps réel. Avec Microsoft Graph API pour les appels et les réunions en ligne, les applications Teams peuvent désormais interagir avec les utilisateurs à l’aide de la voix et de la vidéo pour améliorer l’expérience. Ces API vous permettent d’ajouter les nouvelles fonctionnalités suivantes :


    * Réponse vocale interactive (IVR)

    * Contrôle d’appel

    * Accès aux flux audio et vidéo en temps réel, y compris le partage de bureau et d’application


    Créez un bot et spécifiez des informations et des autorisations supplémentaires pour utiliser ces API Graph dans une application Teams.


    Ce guide pas à pas vous aide à créer un bot avec des fonctionnalités d’appel et de réunion. À la fin de ce didacticiel, vous pouvez obtenir la sortie suivante :


    ![Sortie finale](~/assets/images/calls-and-meetings/final-output.png)
- title: Configuration requise
  durationInMinutes: 1
  content: "Veillez à installer les outils suivants et à configurer votre environnement de développement :  \n\n* [Client Office 365](https://developer.microsoft.com/microsoft-365/dev-program)\n* [Ngrok](https://ngrok.com/) ou solution de tunneling équivalente\n* [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)\n* [Kit de développement logiciel (SDK) .NET Core](https://dotnet.microsoft.com/download) version 3.1\n* Microsoft Teams avec un compte (pas un compte invité)\n* Installer [Windows PowerShell](/microsoftteams/teams-powershell-install) en exécutant toutes les commandes\n"
- title: Configurer l’appel et le bot de réunion
  durationInMinutes: 5
  content: "Inscrivez une application à l’aide de l’inscription d’application dans le portail Microsoft Azure pour que votre application s’intègre à la plateforme d’identités Microsoft et appelle Microsoft Graph. Effectuez les opérations suivantes :\n\n1. Utilisez ngrok pour créer un tunnel vers les points de terminaison de votre serveur web.\n1. Créez une ressource Azure Bot pour inscrire un bot auprès d’Azure Bot Service.\n1. Créez une clé secrète client qui active l’authentification unique du bot.\n1. Créez une stratégie pour un utilisateur de locataire de démonstration pour créer les réunions en ligne à l’aide de PowerShell.\n1. Ajoutez des autorisations d’API pour les appels en aval.\n1. Créez l’inscription de canal bot dans un compte Azure.\n1. Ajoutez un canal Microsoft Teams pour déployer le bot sur un canal Teams.\n1. Ajoutez un point de terminaison de messagerie au tunnel ngrok que vous avez créé.\n\n**Créer un tunnel ngrok :**\n\nUtilisez ngrok pour créer un tunnel vers les points de terminaison HTTPS disponibles publiquement de votre serveur web local. Exécutez la commande suivante dans ngrok :\n\n```bash\nngrok http -host-header=rewrite 3978\n```\n\n**Inscrire une application dans Azure :**\n\n1. Connectez-vous au [portail Azure](https://portal.azure.com/) à l’aide de votre compte Microsoft personnel.\n1. Sélectionnez le service **Azure Active Directory** , sélectionnez **Inscriptions d’applications** dans le volet gauche, puis **sélectionnez Nouvelle inscription**.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/azure-active-directory.png\" alt-text=\"Azure Active Directory.\":::\n\n1. **Une page d’inscription d’application s’ouvre** . Entrez les informations d’inscription de votre application.\n1. Entrez un **nom** d’application explicite qui s’affiche pour les utilisateurs de l’application.\n1. Dans **les types de comptes pris en charge**, sélectionnez les comptes que vous souhaitez que votre application prenne en charge.\n1. Dans le champ **URI de redirection** (facultatif), sélectionnez le type de **client web ou public d’application (bureau & mobile),** puis entrez l’URI de redirection de votre application.\n\n    > [!NOTE]\n    > Pour les applications web, fournissez l’URI de base en tant que `http://localhost:31544`. Pour les applications clientes publiques, fournissez l’URI utilisé par Azure AD pour retourner des réponses de jeton sous la forme `myapp://auth`.\n\n1. Sélectionnez **Inscrire**.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/reg-app.png\" alt-text=\"Inscrivez une application.\":::\n\n**Pour créer une clé secrète client :**\n\n1. Dans la page **Vue d’ensemble** de votre bot, sélectionnez **Essentials** et enregistrez l’ID **client d’application** (ID d’application Microsoft) pour référence ultérieure.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/microsoft-app-id-new.png\" alt-text=\"ID d’application Microsoft.\":::\n\n1. Dans **Gérer**, sélectionnez **Certificats & section Secrets** , puis sélectionnez **Secrets client** et **Nouvelle clé secrète client**. La fenêtre **Ajouter une clé secrète client** s’affiche.  \n\n1. Entrez **Description** , puis **sélectionnez Ajouter**.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/add-client.png\" alt-text=\"Ajouter une clé secrète client.\":::\n\n1. Dans la colonne **Valeur** , sélectionnez **Copier dans le Presse-papiers** et enregistrez l’ID de clé secrète client pour référence ultérieure.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/client-secret.png\" alt-text=\"Valeur.\":::\n\n**Exécutez un script PowerShell pour créer une stratégie :**\n\n1. Créez une stratégie pour un utilisateur de locataire de démonstration pour créer les réunions en ligne à l’aide du script PowerShell suivant :\n\n    > [!NOTE]\n    > Exécutez Windows PowerShell PSI en tant qu’administrateur et exécutez le script.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/powershell-script.png\" alt-text=\"Script PowerShell.\":::\n\n1. Remplacez `azure-client-id` par votre **ID d’application Microsoft** de votre bot et `object-id` par l’ID de **locataire** de votre compte utilisé pour vous connecter à Teams (copiez le lien comme indiqué dans l’image suivante et vous pouvez trouver l’ID de locataire de votre compte Teams dans le lien obtenu).\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/teams-link-new.png\" alt-text=\"Lien Teams.\":::\n\n1. Ajoutez `PolicyName`, `azure-client-id`, `policy-description`et `object-id` dans le script PowerShell. Connectez-vous avec votre compte Teams lorsque PowerShell vous invite.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/powershell.png\" alt-text=\"Powershell.\":::\n\n1. Exécutez la commande suivante dans PowerShell pour vérifier si la stratégie a été créée correctement ou non. Remplacez le nom de la stratégie par votre nom de stratégie défini.\n\n    ```powershell\n    Get-CsApplicationAccessPolicy -Identity “<<policy-identity/policy-name>>”\n    ```\n\n**Pour ajouter des autorisations d’API pour les appels en aval :**\n\n> [!NOTE]\n> Assurez-vous que votre compte peut accorder le consentement de l’administrateur pour Microsoft. Après avoir ajouté des autorisations, sélectionnez cette option `Grant admin consent for Microsoft` pour connaître l’état du consentement.\n\n1. Dans **le volet Gérer** de votre bot, sélectionnez **autorisations d’API**.\n1. Sélectionnez **Ajouter une autorisation**. **La fenêtre Demander des autorisations d’API** s’affiche.\n1. Sélectionnez **LES API Microsoft** , puis **Microsoft Graph**.\n1. Sélectionnez **Autorisations d’application** , puis sélectionnez autorisations.\n1. Ajoutez les autorisations d’applications API Graph suivantes à votre application Azure et accordez le consentement de l’administrateur.\n    * `Calls.AccessMedia.All`\n    * `Calls.Initiate.All`\n    * `Calls.InitiateGroupCall.All`\n    * `Calls.JoinGroupCall.All`\n    * `Calls.JoinGroupCallAsGuest.All`\n    * `OnlineMeetings.ReadWrite.All`\n1. Sélectionnez **Ajouter des autorisations**.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/add-api-permissions.png\" alt-text=\"Ajoutez des autorisations d’API.\":::\n\n**Créer une inscription de canal bot dans un compte Azure :**\n\n1. Ouvrez [le portail Azure](https://portal.azure.com/).\n1. Sélectionnez **Créer une ressource**.\n1. Recherchez **Azure Bot** dans la zone de recherche.\n1. Sélectionnez **Azure Bot**.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/azure-bot-homepage.png\" alt-text=\"Carte de bot Azure.\":::\n\n1. Sélectionnez **Créer**.\n1. Entrez le nom du handle du bot dans le champ **Descripteur** de bot.\n1. Sélectionnez votre **abonnement** dans la liste déroulante.\n1. Sélectionnez votre **groupe de ressources** dans la liste déroulante.\n\n    Pour créer un groupe de ressources, sélectionnez **Créer**, entrez le nom de la ressource, sélectionnez **OK**, puis sélectionnez l’emplacement requis dans la liste déroulante **Nouvel emplacement du groupe de ressources** .\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/create-azure-bot.png\" alt-text=\"Créez Azure Bot.\":::\n\n1. Sélectionnez **Type d’application** en tant que **multilocataire** pour **l’ID d’application Microsoft**.\n\n    > [!NOTE]\n    > Dans `Creation type` la section ID d’application Microsoft, `Create new Microsoft App ID` est déjà sélectionné pour créer un bot. Vous pouvez également sélectionner `Use existing app registration`, si vous avez déjà inscrit un bot. Entrez l’ID d’application Microsoft dans le `Existing app id` champ, puis entrez la valeur dans le `Existing app password` champ.\n\n1. Sélectionnez **Utiliser l’inscription d’application existante** et entrez **l’ID** d’application et **le secret** d’application de votre application Azure inscrite dans le locataire de démonstration.\n1. Sélectionnez **Examiner et créer**.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/review-create.png\" alt-text=\"Multilocataire.\":::\n\n1. Si la validation réussit, sélectionnez **Créer**.\n\n   L’approvisionnement de votre service de bot prend quelques instants.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/validation.png\" alt-text=\"Validation.\":::\n\n1. Sélectionnez **Accéder à la ressource**. Le bot et les ressources associées sont répertoriés dans le groupe de ressources.\n\n    Votre bot Azure a maintenant été créé.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/go-to-resource.png\" alt-text=\"Accéder à la ressource.\":::\n\n**Pour ajouter le canal Microsoft Teams :**\n\n1. Accéder à **l’Accueil**\n1. Ouvrez votre bot, qui est répertorié dans la section **Ressources récentes** .\n1. Sélectionnez **Canaux** dans le volet gauche, puis **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/> dans la liste des canaux disponibles.    \n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/channels-teams.png\" alt-text=\"Canaux Teams.\":::\n\n1. Cochez la case pour accepter les conditions d’utilisation, puis **sélectionnez Accepter**.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/terms-of-service.png\" alt-text=\"Conditions d’utilisation.\":::\n\n1. Sélectionnez **Enregistrer**.\n1. Sélectionnez **Microsoft Teams** , puis l’onglet **Appel** sur la page du canal Teams.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/configure-teams.png\" alt-text=\"Configurez Teams.\":::\n\n1. Sélectionnez **Activer l’appel**, puis mettez à jour **webhook** avec votre URL ngrok HTTPS (https://yourNgrok/api/callback) et ajoutez-le `/api/callback` à la fin.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/enable-calling.png\" alt-text=\"Activez l’appel.\":::\n\n1. Sélectionnez **Enregistrer**.\n\n**Pour ajouter un point de terminaison de messagerie :**\n\n1. Accédez à la page **d’accueil** de votre bot et sélectionnez **Configuration** sous **Paramètres** dans le volet gauche.\n1. Accédez à ngrok.\n1. Copiez l’URL HTTPS (https vers io) comme illustré dans l’image suivante :\n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/ngrok.png\" alt-text=\"Ngrok.\":::\n\n1. Dans **le point de terminaison de messagerie**, ajoutez l’URL HTTPS disponible à partir de ngrok et, à la fin de l’URL, ajoutez **/api/messages**.\n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/messaging-endpoint.png\" alt-text=\"Point de terminaison de messagerie.\":::\n\n1. Sélectionnez **Appliquer**.\n\n    Vous avez correctement configuré un bot dans Azure Bot Service et vous devez maintenant configurer la connexion au service bot.\n"
- title: Mettre à jour et créer un package d’application Teams
  durationInMinutes: 1
  content: "Configurez l’exemple de bot pour comprendre comment authentifier le bot conversationnel dans Microsoft Teams et créer le package d’application Teams et le charger dans l’organisation.\n\n1. Mettez à jour appsettings.json dans Visual Studio.\n1. Mettez à jour manifest.json dans Visual Studio et compressez-le dans le fichier zip de l’Explorateur de fichiers.\n\n**Mettre à jour appsettings pour appeler le bot :**\n\n1. Accédez au référentiel https://github.com/OfficeDev/Microsoft-Teams-Samples.git.\n1. Sélectionnez **Code** , puis sélectionnez la liste déroulante.\n1. Sélectionnez **Télécharger zip**.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/repo-download.png\" alt-text=\"Téléchargement du dépôt.\":::\n\n1. Veillez à noter le chemin d’accès du référentiel téléchargé.\n1. Dans **l’Explorateur de** fichiers, accédez au dossier **csharp** **d’exemples principaux de Microsoft-Teams-Samples-main** >  > **bot-calling-meeting** > .\n1. Ouvrez le fichier **appsettings.json** dans Visual Studio et mettez à jour la configuration du bot.\n\n    * Vous pouvez obtenir l’élément `MicrosoftAppId` à partir de la page de configuration du bot. Il `MicrosoftAppPassword` s’agit de la valeur de l’ID de secret client que vous avez enregistré précédemment.\n    * Vous pouvez obtenir le `Tenant ID` lien `UserId` ou à partir du compte utilisé pour vous connecter à Teams. Suivez le chemin d’accès dans l’image pour obtenir le lien pour `tenant id`.\n    \n        :::image type=\"content\" source=\"./assets/images/calls-and-meetings/teams-link-new.png\" alt-text=\"Lien Teams.\":::\n    \n    * Vous pouvez obtenir le `DisplayName` site et `UserId` à partir de [l’Explorateur Microsoft Graph](https://developer.microsoft.com/graph/graph-explorer) .\n        * Connectez-vous à la page à l’aide de votre compte Teams, ajoutez-le `Users` à la fin de l’URL dans la zone de recherche, puis **sélectionnez Exécuter la requête**.\n        * Les noms d’affichage et les ID d’utilisateur liés à votre compte sont générés.\n        * Choisissez les trois comptes et ajoutez-les à appsettings.json `DisplayName` `UserId` .\n\n        :::image type=\"content\" source=\"./assets/images/calls-and-meetings/graph-explorer.png\" alt-text=\"Explorateur graphe.\":::\n\n    > [!NOTE]\n    > `Tenant ID` ou `UserId` du compte Teams indique à partir de l’endroit où vous souhaitez lancer l’appel, et `DisplayName` `UserId` des utilisateurs indiquent à qui vous souhaitez rediriger ou transférer l’appel.\n\n1. Remplacez `MicrosoftAppId`, `ClientId`, `AppId` par votre **ID d’application (client)** et `MicrosoftAppPassword`, `ClientSecret`et `AppSecret` par votre **valeur**.\n1. Mettez à jour `BotBaseUrl` avec votre `ngrok` URL.\n1. Mise à jour `Tenant ID` et `UserId`.\n1. Mise à jour `DisplayName` et `UserId`.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/appsettings.png\" alt-text=\"Appsettings Json.\":::\n\n1. Sélectionnez **Enregistrer**.\n\n**Pour mettre à jour le manifeste :**\n\n1. Dans **l’Explorateur de fichiers**, accédez au dossier **manifeste** **csharp** >  **de Microsoft-Teams-Samples-main** > **samples** > **bot-calling-meeting** > .\n1. Ouvrez le fichier `manifest.json` dans Visual Studio.\n1. Dans le `manifest.json` fichier, recherchez **{id}, {BotId}** et ajoutez votre ID d’application Microsoft.\n1. Ajoutez votre URL ngrok dans **validDomains** à l’exclusion de https:// et enregistrez.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/manifest.png\" alt-text=\"Manifeste.\":::\n\n1. Compressez le contenu du dossier **Manifeste** à créer `manifest.zip`.\n\n    > [!NOTE]\n    > Ne `manifest.zip` doit pas contenir de dossiers supplémentaires. Il doit contenir un `manifest json` fichier source, `color` une icône et `outline` une icône dans le dossier zip.\n    > Chargez votre manifeste dans votre locataire de démonstration pour l’organisation ou votre compte Teams et exécutez votre solution dans Visual Studio.\n\n1. Accédez à Teams.\n1. Pour charger `manifest.zip`, sélectionnez **Store > Manage your apps > Upload a custom app** and open `manifest.zip` from the repo folder in File Explorer.\n1. Sélectionnez **Ajouter** pour installer le bot appelant dans Teams.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/output.png\" alt-text=\"Ajouter une sortie.\":::\n\n    Vous pouvez interagir avec ce bot après le débogage dans Visual Studio.\n"
- title: Interaction avec le bot d’appel et de réunion
  durationInMinutes: 2
  content: >
    Bot vous permet d’accéder aux services et au contenu dans un espace dédié au sein d’un canal ou dans une conversation.


    Suivez les étapes pour utiliser le bot :


    1. Dans le volet gauche de Teams, sélectionnez les points de suspension ●●● et choisissez votre application dans la liste.

    1. Le bot envoie le texte de bienvenue avec la carte adaptative, comme indiqué ci-dessous.

        :::image type="content" source="./assets/images/calls-and-meetings/bot-with-adaptive-card.png" alt-text="Carte adaptative dans le bot.":::

    1. Vous pouvez demander au bot de créer un appel.

        :::image type="content" source="./assets/images/calls-and-meetings/placed-call.png" alt-text="Appel placé.":::

    1. Vous pouvez demander au bot de transférer l’appel.

        :::image type="content" source="./assets/images/calls-and-meetings/transfer-call.png" alt-text="Appel de transfert.":::

    1. Vous pouvez demander au bot de planifier une réunion et d’inviter les participants.

        :::image type="content" source="./assets/images/calls-and-meetings/meeting.png" alt-text="Bot de réunion.":::
- title: Relever le défi
  durationInMinutes: 1
  content: >
    Tu as trouvé quelque chose comme ça ?


    ![Sortie finale](~/assets/images/calls-and-meetings/final-output.png)
- content: Vous avez terminé le didacticiel pour bien démarrer avec l’application d’appel et de réunion de bot pour Microsoft Teams.
