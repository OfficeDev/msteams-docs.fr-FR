### YamlMime:Tutorial
title: Teams bot d’appel et de réunion
metadata:
  title: Teams bot avec appel et réunion
  description: Dans ce didacticiel, vous allez apprendre à configurer les appels et les réunions dans un bot pour Teams.
  audience: Developer
  level: Beginner
  ms.date: 02/08/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/calls-and-meetings/registering-calling-bot.md
  nextTutorialTitle: Enregistrer un bot appelant
  ms.custom: mvc
  ms.localizationpriority: none
  ms.openlocfilehash: 0ec7138181ae84cb66950a0d7d8c32a33b8aef12
  ms.sourcegitcommit: b9af51e24c9befcf46945400789e750c34723e56
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 02/15/2022
  ms.locfileid: "62821394"
items:
- durationInMinutes: 1
  content: >
    Le bot d’appel et de réunion fournit des fonctionnalités de base telles que la création d’un appel, la participation à un appel, le transfert ou la redirection d’un appel, la participation à une réunion programmée et l’invitation des participants en intégrant l’API de communications cloud Graph API.


    Les bots peuvent interagir avec Teams appels et réunions à l’aide de la voix, de la vidéo et du partage d’écran en temps réel. Avec les API Microsoft Graph pour les appels et les réunions en ligne, les applications Teams peuvent désormais interagir avec les utilisateurs à l’aide de la voix et de la vidéo pour améliorer l’expérience. Ces API vous permettent d’ajouter les nouvelles fonctionnalités suivantes :


    * Réponse vocale interactive (IVR)

    * Contrôle d’appel

    * Accès aux flux audio et vidéo en temps réel, y compris au partage de bureau et d’application


    Créez un bot et spécifiez des informations et des autorisations supplémentaires pour utiliser ces API Graph dans une application Teams web.


    Ce guide pas à pas vous aide à créer un bot avec les fonctionnalités d’appel et de réunion. À la fin de ce didacticiel, vous pouvez obtenir les résultats suivants :


    ![Sortie finale](~/assets/images/calls-and-meetings/final-output.png)
- title: Prerequisites
  durationInMinutes: 1
  content: "Veillez à installer les outils suivants et à configurer votre environnement de développement :  \n\n* [Office 365 client](https://developer.microsoft.com/en-us/microsoft-365/dev-program)\n* [Solution de tunnel ngrok](https://ngrok.com/) ou équivalente\n* [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)\n* [.NET Core SDK](https://dotnet.microsoft.com/en-us/download) version 3.1\n* Microsoft Teams avec un compte (et non un compte invité)\n* Installer [Windows PowerShell](https://docs.microsoft.com/en-us/microsoftteams/teams-powershell-install) en exécutant toutes les commandes\n"
- title: Configurer le bot d’appel et de réunion
  durationInMinutes: 5
  content: "Inscrivez une application à l’aide de l’inscription d’application dans le portail Microsoft Azure pour que votre application s’intègre au Plateforme d'identités Microsoft et appelez Microsoft Graph. Effectuez les choses suivantes :\n\n1. Utilisez ngrok pour créer un tunnel vers les points de terminaison de votre serveur web.\n1. Créez une ressource Azure Bot pour inscrire le bot auprès d’Azure Bot Service.\n1. Créez une secret client qui permet l’authentification sso du bot.\n1. Créez une stratégie pour un utilisateur du client de démonstration pour créer les réunions en ligne à l’aide de PowerShell.\n1. Ajouter des autorisations d’API pour les appels en aval.\n1. Créez une inscription de canal bot dans un compte Azure.\n1. Ajoutez Microsoft Teams canal pour déployer le bot sur un canal Teams’accès.\n1. Ajoutez le point de terminaison de messagerie au tunnel ngrok que vous avez créé.\n\n**Créez un tunnel ngrok :**\n\nUtilisez ngrok pour créer un tunnel vers les points de terminaison HTTPS disponibles publiquement de votre serveur web exécutant localement. Exécutez la commande suivante dans ngrok :\n\n```bash\nngrok http -host-header=rewrite 3978\n```\n\n**Inscrivez une application dans Azure :**\n\n1. Connectez-vous au [portail Azure à l’aide](https://portal.azure.com/) de votre compte Microsoft personnel.\n1. Sélectionnez **le service Azure Active Directory**, sélectionnez Inscriptions d’applications dans le volet gauche, puis **sélectionnez Nouvelle inscription**.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/azure-active-directory.png\" alt-text=\"Azure Active Directory.\":::\n\n1. **L’inscription d’une** page d’application s’ouvre. Entrez les informations d’inscription de votre application.\n1. Entrez un nom **d’application** significatif qui s’affiche pour les utilisateurs de l’application.\n1. Dans **les types de comptes pris** en charge, sélectionnez les comptes que votre application doit prendre en charge.\n1. Dans **le champ URI** de redirection (facultatif), sélectionnez le type de client web ou public d’application **(mobile & desktop),** puis entrez l’URI de redirection pour votre application.\n\n    > [!NOTE]\n    > Pour les applications web, fournissez l’URI de base en tant que `http://localhost:31544`. Pour les applications clientes publiques, fournissez l’URI utilisé par Azure AD pour renvoyer des réponses de jeton en tant que `myapp://auth`.\n\n1. Sélectionnez **Inscrire**.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/reg-app.png\" alt-text=\"Inscrivez une application.\":::\n\n**Pour créer une secret client :**\n\n1. Dans **la** page Vue d’ensemble de votre bot, sélectionnez **Essentials** et enregistrez **l’ID client de l’application** (ID d’application Microsoft) pour référence ultérieure.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/microsoft-app-id-new.png\" alt-text=\"ID de l’application Microsoft.\":::\n\n1. Dans **Gérer**, **sélectionnez Certificats & secrets** , puis sélectionnez **Secrets** client et **Nouvelle secret client**. La **fenêtre Ajouter une secret client** s’affiche.  \n\n1. Entrez **description,** puis sélectionnez **Ajouter**.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/add-client.png\" alt-text=\"Ajoutez une secret client.\":::\n\n1. Dans la **colonne Valeur** , **sélectionnez Copier dans le Presse-papiers** et enregistrez l’ID de la question secrète client pour référence ultérieure.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/client-secret.png\" alt-text=\"Valeur.\":::\n\n**Exécutez le script PowerShell pour créer une stratégie :**\n\n1. Créez une stratégie pour un utilisateur du client de démonstration pour créer les réunions en ligne à l’aide du script PowerShell suivant :\n\n    > [!NOTE]\n    > Exécutez Windows PowerShell PSI en tant qu’administrateur et exécutez le script.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/powershell-script.png\" alt-text=\"Script PowerShell.\":::\n\n1. `azure-client-id` Remplacez par votre **ID** d’application Microsoft de votre bot `object-id` et par **l’ID** de locataire de votre compte utilisé pour vous connecter au Teams (copiez le lien comme illustré dans l’image suivante et vous pouvez trouver l’ID de locataire de votre compte Teams dans le lien obtenu).\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/teams-link-new.png\" alt-text=\"Teams lien.\":::\n\n1. Ajoutez `azure-client-id``PolicyName`, `policy-description`et dans `object-id` le script PowerShell. Connectez-vous à Teams compte d’utilisateur lorsque PowerShell vous invite à le faire.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/powershell.png\" alt-text=\"PowerShell.\":::\n\n1. Exécutez la commande suivante dans PowerShell pour vérifier si la stratégie est créée correctement ou non. Remplacez le nom de la stratégie par votre nom de stratégie défini.\n\n    ```powershell\n    Get-CsApplicationAccessPolicy -Identity “<<policy-identity/policy-name>>”\n    ```\n\n**Pour ajouter des autorisations d’API pour les appels en aval :**\n\n> [!NOTE]\n> Assurez-vous que votre compte peut accorder le consentement administrateur à Microsoft. Après avoir ajouté des autorisations, sélectionnez `Grant admin consent for Microsoft` pour connaître l’état du consentement.\n\n1. Dans **le volet** Gérer de votre bot, sélectionnez les **autorisations d’API**.\n1. Sélectionnez **Ajouter une autorisation**. **La fenêtre Demander des autorisations d’API** s’affiche.\n1. **Sélectionnez LES API Microsoft** et **sélectionnez Microsoft Graph**.\n1. Sélectionnez **les autorisations d’application** , puis les autorisations.\n1. Ajoutez les autorisations Graph api suivantes à votre application Azure et accordez le consentement de l’administrateur.\n    * `Calls.AccessMedia.All`\n    * `Calls.Initiate.All`\n    * `Calls.InitiateGroupCall.All`\n    * `Calls.JoinGroupCall.All`\n    * `Calls.JoinGroupCallAsGuest.All`\n    * `OnlineMeetings.ReadWrite.All`\n1. Sélectionnez **Ajouter des autorisations**.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/add-api-permissions.png\" alt-text=\"Ajouter des autorisations d’API.\":::\n\n**Créez une inscription de canal bot dans un compte Azure :**\n\n1. [Ouvrez le portail Azure](https://portal.azure.com/).\n1. Sélectionnez **Créer une ressource**.\n1. Recherchez **Azure Bot dans** la zone de recherche.\n1. **Sélectionnez Azure Bot**.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/azure-bot-homepage.png\" alt-text=\"Carte de bot Azure.\":::\n\n1. Sélectionnez **Créer**.\n1. Entrez le nom de handle du bot dans **le champ De handle bot** .\n1. Sélectionnez **votre abonnement dans** la liste liste.\n1. Sélectionnez votre **groupe de ressources** dans la liste liste.\n\n    Pour créer un nouveau groupe de ressources, sélectionnez Créer un nouveau **groupe de ressources**, entrez le nom de la ressource, **sélectionnez OK** et sélectionnez l’emplacement requis dans la liste de listes de listes des emplacements du nouveau groupe de ressources.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/create-azure-bot.png\" alt-text=\"Créez un bot Azure.\":::\n\n1. **Sélectionnez Type d’application en** **tant qu’ID** **d’application Multi-Client pour Microsoft**.\n\n    > [!NOTE]\n    > Dans `Creation type` la section ID de l’application Microsoft, `Create new Microsoft App ID` est déjà sélectionné pour créer un bot. Vous pouvez également sélectionner `Use existing app registration`, si vous avez déjà inscrit un bot. Entrez l’ID de l’application `Existing app id` Microsoft dans le champ, puis entrez la valeur dans le `Existing app password` champ.\n\n1. **Sélectionnez Utiliser l’inscription d’application existante** et entrez **l’ID** d’application et la **secret** de votre application Azure inscrite dans le client de démonstration.\n1. Sélectionnez **Examiner et créer**.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/review-create.png\" alt-text=\"Client multiple.\":::\n\n1. Si la validation réussit, sélectionnez **Créer**.\n\n   La mise en service de votre service de bot prend quelques instants.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/validation.png\" alt-text=\"Validation.\":::\n\n1. Sélectionnez **Accéder à la ressource**. Le bot et les ressources associées sont répertoriés dans le groupe de ressources.\n\n    Votre bot Azure a maintenant été créé.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/go-to-resource.png\" alt-text=\"Accéder à la ressource.\":::\n\n**Pour ajouter le canal Microsoft Teams:**\n\n1. Go to **Home**.\n1. Ouvrez votre bot, qui est répertorié dans la section **Ressources récentes** .\n1. **Sélectionnez Canaux** dans le volet gauche et **sélectionnez Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/> dans la liste des canaux disponibles.    \n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/channels-teams.png\" alt-text=\"Canaux Teams.\":::\n\n1. Cochez la case pour accepter les conditions d’utilisation et sélectionnez **Accepter**.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/terms-of-service.png\" alt-text=\"Conditions d’utilisation.\":::\n\n1. Sélectionnez **Enregistrer**.\n1. **Sélectionnez Microsoft Teams** et sélectionnez **l’onglet** Appel sur Teams page du canal.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/configure-teams.png\" alt-text=\"Configurez Teams.\":::\n\n1. **Sélectionnez Activer l’appel**, puis mettez **à jour le webhook** avec votre URL HTTPS ngrok (https://yourNgrok/api/callback)et ajoutez-la `/api/callback` à la fin.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/enable-calling.png\" alt-text=\"Activer l’appel.\":::\n\n1. Sélectionnez **Enregistrer**.\n\n**Pour ajouter un point de terminaison de messagerie :**\n\n1. Go to **Home** page of your bot and select **Configuration** under **Paramètres** from the left pane.\n1. Go to ngrok.\n1. Copiez l’URL HTTPS (https to io) comme illustré dans l’image suivante :\n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/ngrok.png\" alt-text=\"Ngrok.\":::\n\n1. Dans **le point de terminaison de messagerie**, ajoutez l’URL HTTPS disponible à partir de ngrok et à la fin de l’URL, **ajoutez /api/messages**.\n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/messaging-endpoint.png\" alt-text=\"Point de terminaison de messagerie.\":::\n\n1. Sélectionnez **Appliquer**.\n\n    Vous avez correctement installé un bot dans Azure Bot Service et vous devez maintenant configurer la connexion au service de bot.\n"
- title: Mettre à jour et créer Teams package d’application
  durationInMinutes: 1
  content: "Configurez l’exemple de bot pour comprendre comment authentifier le bot de conversation dans Microsoft Teams et créer le package d’application Teams et le télécharger dans l’organisation.\n\n1. Mettez à jour appsettings.json dans Visual Studio.\n1. Mettez à jour manifest.json dans Visual Studio compressez-le dans le fichier zip dans l’Explorateur de fichiers.\n\n**Mettez à jour les appsettings pour appeler le bot :**\n\n1. Go to the repo https://github.com/OfficeDev/Microsoft-Teams-Samples.git.\n1. **Sélectionnez Code** et sélectionnez la dropdown.\n1. **Sélectionnez Télécharger le fichier ZIP**.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/repo-download.png\" alt-text=\"Repo download.\":::\n\n1. Veillez à noter le chemin d’accès du référentiel qui est téléchargé.\n1. Dans **l’Explorateur de** fichiers, allez dans le **dossier Microsoft-Teams-Samples-mainsamplesbot-calling-meetingcsharp** >  >  > .\n1. Ouvrez **le fichier appsettings.json** dans Visual Studio et mettez à jour la configuration du bot.\n\n    * Vous pouvez obtenir l’aide `MicrosoftAppId` de la page de configuration du bot. Il s’agit `MicrosoftAppPassword` de la valeur de l’ID de secret client que vous avez enregistré précédemment.\n    * Vous pouvez obtenir le ou `Tenant ID` à partir `UserId` du lien du compte utilisé pour vous connecter au Teams. Suivez le chemin d’accès dans l’image pour obtenir le lien pour `tenant id`.\n    \n        :::image type=\"content\" source=\"./assets/images/calls-and-meetings/teams-link-new.png\" alt-text=\"Teams lien.\":::\n    \n    * Vous pouvez obtenir le site `UserId` Microsoft `DisplayName` [Graph Explorer](https://developer.microsoft.com/en-us/graph/graph-explorer).\n        * Connectez-vous à la page à l’Teams de `Users` votre compte, puis ajoutez-la à la fin de l’URl dans la zone de recherche, puis **sélectionnez Exécuter la requête**.\n        * Les noms d’affichage et les ID d’utilisateur liés à votre compte sont générés.\n        * Sélectionnez trois comptes et ajoutez-les à `DisplayName` `UserId` appsettings.json.\n\n        :::image type=\"content\" source=\"./assets/images/calls-and-meetings/graph-explorer.png\" alt-text=\"Graph Explorer.\":::\n\n    > [!NOTE]\n    > `Tenant ID`ou `UserId` du compte Teams indique à partir de l’endroit où vous souhaitez lancer l’appel, `DisplayName` `UserId` et des utilisateurs indiquent à qui vous souhaitez rediriger ou transférer l’appel.\n\n1. Remplacez `MicrosoftAppId``ClientId`, , `AppId` par votre **ID d’application (client)** et `MicrosoftAppPassword`, `ClientSecret`et `AppSecret` par votre **valeur**.\n1. Mettez à `BotBaseUrl` jour avec votre `ngrok` URL.\n1. Mettre à `Tenant ID` jour et `UserId`.\n1. Mettre à `DisplayName` jour et `UserId`.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/appsettings.png\" alt-text=\"Appsettings Json.\":::\n\n1. Sélectionnez **Enregistrer**.\n\n**Pour mettre à jour le manifeste :**\n\n1. Dans **l’Explorateur de** fichiers, allez dans le dossier Microsoft-Teams-Samples-mainsamplesbot-calling-meetingcsharpManifest > . >  >  > \n1. Ouvrez **le fichier manifest.json** dans Visual Studio.\n1. Dans le **fichier manifest.json** , recherchez **{id}, {BotId}** et ajoutez votre ID d’application Microsoft.\n1. Ajoutez votre URL ngrok dans **validDomains** https:// et enregistrez.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/manifest.png\" alt-text=\"Manifeste.\":::\n\n1. Zip the contents of the **Manifest** folder to create **manifest.zip**.\n\n    > [!NOTE]\n    > Il ne `manifest.zip` doit contenir aucun dossier supplémentaire. Il doit y avoir un `manifest json` fichier source, `color` une icône et une `outline` icône à l’intérieur du dossier zip.\n    > Télécharger manifeste dans votre client de démonstration pour l’organisation ou votre compte Teams et exécutez votre solution dans Visual Studio.\n\n1. Go to Teams.\n1. Pour télécharger **manifest.zip**, sélectionnez **Windows Store >** Gérer vos applications > Télécharger une application personnalisée et ouvrirmanifest.zipà partir du dossier de **** dépôt dans l’Explorateur de fichiers.\n1. **Sélectionnez Ajouter** pour installer le bot d’appel Teams.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/output.png\" alt-text=\"Ajouter une sortie.\":::\n\n    Vous pouvez interagir avec ce bot après le débogage dans Visual Studio.\n"
- title: Interaction avec le bot d’appel et de réunion
  durationInMinutes: 2
  content: >
    Le bot vous permet d’accéder aux services et au contenu dans un espace dédié au sein d’un canal ou d’une conversation.


    Suivez les étapes pour utiliser le bot :


    1. Dans le volet gauche du Teams, sélectionnez les ellipses « ... » et choisissez votre application dans la liste.

    1. Le bot enverra le texte de bienvenue avec carte adaptative, comme illustré ci-dessous.

        :::image type="content" source="./assets/images/calls-and-meetings/bot-with-adaptive-card.png" alt-text="Carte adaptative dans le bot.":::

    1. Vous pouvez demander au bot de créer un appel.

        :::image type="content" source="./assets/images/calls-and-meetings/placed-call.png" alt-text="Appel passé.":::

    1. Vous pouvez demander au bot de transférer l’appel.

        :::image type="content" source="./assets/images/calls-and-meetings/transfer-call.png" alt-text="Transfert d’appel.":::

    1. Vous pouvez demander au bot de planifier une réunion et d’inviter les participants.

        :::image type="content" source="./assets/images/calls-and-meetings/meeting.png" alt-text="Bot de réunion.":::
- title: Défi complet
  durationInMinutes: 1
  content: >
    Avez-vous eu un projet comme celui-ci ?


    ![Sortie finale](~/assets/images/calls-and-meetings/final-output.png)
- content: Vous avez terminé le didacticiel pour commencer à appeler un bot et à l’application de réunion pour Microsoft Teams.
