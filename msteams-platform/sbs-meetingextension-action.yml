### YamlMime:Tutorial
title: Générer une extension de message basée sur une action
metadata:
  title: Générer une extension de message basée sur une action
  description: Avec ce module d’apprentissage, découvrez comment configurer l’extension de message d’action pour Teams afin de lancer des actions à partir de la zone de composition des messages et des messages.
  audience: Developer
  level: Beginner
  ms.date: 24/02/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: messaging-extensions/how-to/action-commands/define-action-command.md
  nextTutorialTitle: En savoir plus pour activer les commandes d’action d’extension de message
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 8b0b4ea1780d1157db9f496933619fccecd20552
  ms.sourcegitcommit: edfe85e312c73e34aa795922c4b7eb0647528d48
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 09/30/2022
  ms.locfileid: "68243310"
items:
- durationInMinutes: 1
  content: "Les extensions de message permettent aux utilisateurs d’interagir avec les services web dans le client Microsoft Teams. Ils permettent de lancer des actions dans un système externe à partir de la zone de message de composition, de la zone de commande ou directement à partir d’un message.\n\n**Principales fonctionnalités de l’extension de message basée sur l’action**\n\n* Présente à l’utilisateur une fenêtre contextuelle modale pour collecter ou afficher des informations.\n* Déclenche les commandes d’action à partir de la zone de composition du message, de la zone de commande ou d’un message. \n\nCe guide pas à pas vous aide à créer une extension de message basée sur des actions Teams pour lancer des actions à partir de la zone de composition des messages et des messages. La sortie suivante s’affiche :\n   \n  ![Sortie](~/assets/images/sbs-messagingextension-action/sharemessageoutput1.png)\n"
- title: Configuration requise
  durationInMinutes: 1
  content: "Veillez à installer les outils suivants et à configurer votre environnement de développement :  \n\n* [Microsoft Teams](https://teams.microsoft.com/) avec un compte valide\n* [Kit de développement logiciel (SDK) .NET Core](https://dotnet.microsoft.com/download) version 3.1\n* [Dernière version de Visual Studio](https://visualstudio.microsoft.com/downloads/)\n* [ngrok](https://ngrok.com/download) version la plus récente (uniquement pour le test de devbox) ou toute solution de tunneling équivalente\n\n  > [!NOTE]\n  > Après avoir téléchargé ngrok, inscrivez-vous et installez [authtoken](https://ngrok.com/download).\n"
- title: Configurer un environnement local
  durationInMinutes: 1
  content: "Clonez `BotBuilder-Samples` le référentiel sur votre GitHub local :  \n\n 1. Ouvrez [BotBuilder-Samples](https://github.com/Microsoft/BotBuilder-Samples).\n 1. Sélectionnez **Code**.\n 1. Dans le menu déroulant, sélectionnez **Ouvrir avec GitHub Desktop**.\n\n    ![Cloner le référentiel](~/assets/images/sbs-messagingextension-action/botbuilder-sample.png)\n\n 1. Sélectionnez **Cloner**. \n"
- title: Créer et inscrire votre bot dans le portail Azure AD
  durationInMinutes: 5
  content: "Pour créer et inscrire votre bot dans Microsoft Azure Active Directory (Azure AD), créez un tunnel à l’aide de ngrok, ajoutez un point de terminaison de messagerie, puis effectuez les étapes suivantes :\n\n* Créez une ressource Azure Bot pour inscrire un bot auprès d’Azure Bot Service.\n* Créez une clé secrète client pour activer l’authentification unique du bot.\n* Ajoutez un canal Teams pour déployer le bot sur un canal Teams.\n* Utilisez ngrok pour créer un tunnel vers les points de terminaison de votre serveur web.\n* Ajoutez un point de terminaison de messagerie au tunnel ngrok que vous avez créé.\n\n**Pour créer une ressource Azure Bot**\n\n1. Accédez au [Portail Azure Microsoft](https://portal.azure.com/).\n1. Sélectionnez **Créer une ressource**.\n1. Dans la zone de recherche, entrez **Azure Bot**.\n1. Ensuite, sélectionnez **Entrée**.\n1. Sélectionnez **Azure Bot**.\n\n     :::image type=\"content\" source=\"./assets/images/azure-bot.png\" alt-text=\"Bot Azure.\":::\n\n1. Sélectionnez **Créer**.\n1. Entrez le nom de handle de bot requis dans le **handle bot**.\n1. Sélectionnez votre **abonnement** dans la liste déroulante.\n1. Sélectionnez votre **groupe de ressources** dans la liste déroulante. \n\n    ![Sélectionner un bot Azure de ressource](~/assets/images/sbs-messagingextension-action/create-azurebot.png) \n\n   Pour créer un groupe de ressources (sélectionnez **Créer** un nouveau > entrez le nom de la ressource > sélectionnez **OK**). Sélectionnez l’emplacement requis dans la liste déroulante **Nouvel emplacement de groupe de ressources** .\n   Pour plus d’informations, consultez [Créer un groupe de ressources](/azure/azure-resource-manager/management/manage-resource-groups-portal#create-resource-groups).\n   \n1. Dans la section **ID d’application Microsoft** , par défaut, **créer un ID d’application Microsoft** est sélectionné. \n \n   Vous pouvez sélectionner **Utiliser l’inscription d’application existante** et entrer l’ID **d’application existant** et le **mot de passe d’application existant**, ou sélectionner **Créer un nouvel ID d’application Microsoft**.\n\n   > [!NOTE]\n   > Vous ne pouvez pas créer plusieurs bots avec le même **ID d’application Microsoft**.\n\n1. Sélectionnez **MultiTenant** sous **Type de bot**.\n\n    ![Type de bot](~/assets/images/Teams-Messaging-Extensions-Search/bot-type.png) \n\n1. Sélectionnez **Examiner et créer**.\n\n    ![Créer un ID d’application Microsoft](~/assets/images/sbs-messagingextension-action/review-create.png)\n\n1. Si la validation réussit, sélectionnez **Créer**. \n\n    L’approvisionnement de votre service de bot prend quelques instants. \n\n1. Sélectionnez **Accéder à la ressource**. \n\n    ![Déployer l’application](~/assets/images/sbs-messagingextension-action/resource-file.png)\n\n    Votre bot Azure est créé.\n\n    ![Ressource de bot Azure créée](assets/images/sbs-messagingextension-action/created-azure-bot.png)\n\n**Pour créer une clé secrète client**\n\n  Effectuez les étapes suivantes si vous avez créé un **nouvel ID d’application Microsoft** :\n\n1. Dans le volet gauche, sélectionnez **Configuration**. \n\n   > [!TIP]\n   > Enregistrez **l’ID d’application Microsoft** ou **l’ID client** pour référence ultérieure.\n\n1. En regard de **l’ID d’application Microsoft**, **sélectionnez Gérer**.\n\n   :::image type=\"content\" source=\"~/assets/images/manage-bot-label.png\" alt-text=\"Gérer\":::\n\n1. Dans la section **Secrets client** , sélectionnez **Nouvelle clé secrète client**. \n\n    ![Nouvelle clé secrète client](~/assets/images/sbs-messagingextension-action/adding-client-secret.png)\n\n   La fenêtre **Ajouter une clé secrète client** s’affiche.  \n\n1. Entrez **la description**.\n\n1. Sélectionnez **Ajouter**.\n\n    ![Ajouter une clé secrète client à l’application](~/assets/images/sbs-messagingextension-action/add-a-clientsecret.png)\n\n1. Dans la colonne **Valeur** , sélectionnez **Copier dans le Presse-papiers**.\n\n     ![Valeur de la clé secrète client](~/assets/images/sbs-messagingextension-action/client-secret.png)\n   \n   > [!TIP]\n   > Enregistrez la valeur **des secrets client** ou le mot de passe d’application pour référence ultérieure.\n\n**Pour ajouter le canal Teams**\n\n1. Sélectionnez **Accueil**.\n\n    ![Page d’accueil](~/assets/images/sbs-messagingextension-action/select-home.png)\n\n1. Sélectionnez votre bot dans **les ressources récentes**.\n\n1. Sélectionnez **Canaux** dans le volet gauche, puis **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n   :::image type=\"content\" source=\"./assets/images/adaptive-cards/channel-teams.png\" alt-text=\"Sélectionnez Teams.\":::\n\n1. Cochez la case pour accepter les **conditions d’utilisation**.\n\n1. Sélectionnez **Accepter**.\n\n      ![Conditions d’utilisation](~/assets/images/sbs-messagingextension-action/agree.png)\n\n1. Sélectionnez **Enregistrer**.\n\n      ![Sélectionner Teams](~/assets/images/sbs-messagingextension-action/configure-msteams.png)   \n\n**Pour créer un tunnel pour un serveur web local**\n\nUtilisez ngrok pour créer un tunnel vers les points de terminaison HTTPS disponibles publiquement de votre serveur web local. Exécutez la commande suivante dans ngrok :\n\n ```bash\n ngrok http --host-header=localhost 3978\n ```\n\n> [!TIP]\n> Si vous rencontrez **ERR_NGROK_4018**, suivez les étapes fournies dans l’invite de commandes pour vous inscrire et authentifier ngrok. Exécutez ensuite la commande `ngrok http --host-header=localhost 3978`.\n\n**Pour ajouter un point de terminaison de messagerie**\n\n1. À partir de ngrok, copiez l’URL HTTPS (https vers io).\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/ngrok-url.png\" alt-text=\"URL HTTPS ngrok\":::\n\n    > [!NOTE]\n    > L’URL HTTPS dans votre ngrok est votre nom de domaine complet.\n    > Il `WebAppDomain` s’agit d’un nom de domaine complet qui ne l’inclut `https://` pas.\n\n1. Dans **Paramètres** du bot Azure que vous avez créé, sélectionnez **Configuration**.\n\n1. Dans **le point de terminaison de messagerie**, utilisez l’URL HTTPS disponible à partir de ngrok et, à la fin de l’URL, ajoutez **/api/messages**.\n\n    ![URI de l’application](~/assets/images/sbs-messagingextension-action/appuri.png)\n\n1. Sélectionnez **Appliquer**.\n\n    Vous avez correctement configuré un bot dans Azure Bot Service.\n"
- title: Mettre à jour l’inscription d’application Azure AD
  durationInMinutes: 1
  content: "1. Accédez au [Portail Azure](https://portal.azure.com/).\n\n1. Sélectionnez **Azure Active Directory**.\n\n1. Dans le volet de navigation gauche, sélectionnez **Inscriptions d’applications**.\n\n1. Sélectionnez votre bot.\n\n   ![Inscription d’application](~/assets/images/sbs-messagingextension-action/app.-registerations.png)\n\n1. Sélectionnez **Exposer une API** sous **Gérer**.\n\n1. Sélectionnez **Définir**.\n\n   ![Exposer une API](~/assets/images/sbs-messagingextension-action/set-exposeanapi.png)\n\n1. Définissez **l’URI d’ID d’application** sous la forme de `api://{AppID}`.\n\n   ![Définir le lien](~/assets/images/sbs-messagingextension-action/set-link.png)\n\n1. Insérer la `WebAppDomain` valeur entre `api://` et `/{AppID}`.</br>\n    `api://2bb1****.ngrok.io/{AppID}`</br>\n    \n   L’image suivante montre le nom de domaine :\n    \n    ![Exposer](~/assets/images/sbs-messagingextension-action/exposeanapi.png)\n\n    > [!NOTE]\n    > Si vous utilisez un service de tunneling tel que ngrok, veillez à mettre à jour la valeur chaque fois que votre sous-domaine ngrok change.\n    > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`, où `f631****.ngrok.io` se trouve le nouveau nom du sous-domaine ngrok.\n\n1. Sélectionnez **Ajouter une étendue**. \n\n   ![Sélectionnez l’étendue](~/assets/images/sbs-messagingextension-action/addascope.png)\n\n1. Dans le panneau qui s’affiche, entrez `access_as_user` le **nom de l’étendue**.\n\n1. Définir **qui peut donner son consentement ?** sur `Admins and users`.\n\n1. Pour configurer les invites de consentement de l’administrateur et de l’utilisateur avec les valeurs appropriées pour `access_as_user` l’étendue, fournissez les informations suivantes dans les champs :</br>\n\n     * Entrez `Teams can access the user’s profile` le **nom complet du consentement de l’administrateur**.\n\n     * Entrez `Allows Teams to call the app’s web APIs as the current user` en tant que **description du consentement administrateur**.\n\n     * Entrez `Teams can access the user profile and make requests on the user’s behalf` en tant que **nom d’affichage du consentement de l’utilisateur**.\n\n     * Entrez `Enable Teams to call this app’s APIs with the same rights as the user` comme **description du consentement de l’utilisateur**.\n\n1. Vérifiez que **State** est défini comme **Enabled**.\n\n1. Sélectionnez **Ajouter une étendue** à enregistrer.\n\n    ![Ajouter une étendue](~/assets/images/sbs-messagingextension-action/addascopeuser.png)\n\n    > [!NOTE]\n    > Le **nom de l’étendue** doit correspondre à l’URI **d’ID d’application** avec `/access_as_user` ajouté à la fin.</br>\n       `api://2bb1****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n    ![Étendues](~/assets/images/sbs-messagingextension-action/scopes.png) \n\n1. Dans la section **Applications clientes autorisées**, identifiez les applications que vous souhaitez autoriser pour l'application Web de votre application. \n\n1. Sélectionnez **Ajouter une application cliente**. \n\n    ![Sélectionner une application cliente](~/assets/images/sbs-messagingextension-action/clientapps.png) \n\n1. Entrez **l’ID client** : `1fec8e78-bce4-4aaf-ab1b-5451cc387264` pour l’application mobile ou de bureau Teams. \n\n    ![Ajouter une application cliente 1](~/assets/images/sbs-messagingextension-action/addclientapplication1.png) \n\n   Vous pouvez entrer **l’ID client** : `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` pour l’application web Teams.\n\n    ![Ajouter une application cliente 2](~/assets/images/sbs-messagingextension-action/addclientapplication2.png) \n\n1. Sélectionnez **Étendues autorisées**.\n\n    ![Ajouter une application cliente 2](~/assets/images/sbs-messagingextension-action/authorizedscope.png) \n\n   L’image suivante affiche les ID clients :\n\n    ![Applications clientes](~/assets/images/sbs-messagingextension-action/clientapp.png) \n\n1. Dans le volet gauche, sélectionnez **Autorisations d’API**. \n\n   > [!NOTE]\n   > Les utilisateurs doivent donner leur consentement à ces autorisations uniquement si l’application Azure AD est inscrite dans un autre locataire.\n\n1. Sélectionnez **Ajouter une autorisation**.\n\n    ![Ajouter une autorisation](~/assets/images/meetings-side-panel/addpermission.png)\n\n\n1. Sélectionnez **Microsoft Graph**.\n\n1. Sélectionnez **Autorisations déléguées**.\n\n1. Ajoutez les autorisations suivantes :</br>\n     * **email**\n     * **offline_access**\n     * **Openid**\n     * **profil**\n     * **User.Read**\n\n1. Sélectionnez **Ajouter des autorisations**.\n\n     ![Autres autorisations](~/assets/images/sbs-messagingextension-action/other-permissions.png)\n\n1. Dans le volet gauche, sélectionnez **Authentification** pour définir un URI de redirection. \n\n   > [!NOTE]\n   > Si aucune application n’a reçu le consentement de l’administrateur informatique, les utilisateurs doivent donner leur consentement la première fois qu’ils utilisent une application.\n           \n     1. Sélectionnez **Ajouter une plateforme**.\n     1. Sélectionnez **Web**.\n\n        ![Web](~/assets/images/sbs-messagingextension-action/web.png)\n\n     1. Entrez l’URI de redirection de votre application en ajoutant `auth-end` le nom de domaine complet :</br> \n       `https://2bb1****.ngrok.io/auth-end`. </br>\n\n     1. Activez **l’octroi implicite et les flux hybrides** en cochant les cases suivantes :\n         * **Jetons d’ID**\n         * **Jetons d’accès**\n\n     1. Sélectionnez **Configurer**.\n\n        ![Fin de l’authentification](~/assets/images/sbs-messagingextension-action/authend.png)\n"
- title: Configurer les paramètres d’application et les fichiers manifeste
  durationInMinutes: 1
  content: "1. Accédez à **appsettings.json** dans le référentiel cloné.\n\n    ![Emplacement des paramètres de l’application](~/assets/images/sbs-messagingextension-action/appsettingslocation.png)\n\n1. Ouvrez **appsettings.json** dans la dernière version de Visual Studio et mettez à jour les informations suivantes :  \n\n     * Défini sur `\"MicrosoftAppType\"` **MultiTenant**.\n     * Définissez l’ID `\"MicrosoftAppId\"` **d’application Microsoft** de votre bot.\n     * Définissez la `\"MicrosoftAppPassword\"` **valeur** de votre bot sur **l’ID de clé secrète client**.\n     * Laissez `\"MicrosoftAppTenantId\"` vide pour le bot multilocataire.\n     * Définissez `\"BaseUrl\"` le nom de domaine complet.\n\n    ![Paramètres de l’application](~/assets/images/sbs-messagingextension-action/json-file.png)\n\n1. Accédez au `manifest.json` référentiel cloné.\n\n    ![Emplacement du fichier manifeste](~/assets/images/sbs-messagingextension-action/manifestlocation.png)\n\n1. Ouvrez `manifest.json` dans la dernière version de Visual Studio et apportez les modifications suivantes :\n\n     * Remplacez-le `<<validDomains>>` par votre nom de domaine complet.\n     * Remplacez toutes les occurrences par **l’ID d’application**`<<Microsoft-App-ID>>` Microsoft de votre bot.\n\n    ![Image de manifeste2](~/assets/images/sbs-messagingextension-action/botid1.png)\n"
- title: Générer et exécuter le service
  durationInMinutes: 1
  content: "**Pour générer et exécuter le service à l’aide de la dernière version de Visual Studio ou de la ligne de commande**\n\n# <a name=\"latest-version-of-visual-studio\"></a>[Dernière version de Visual Studio](#tab/latestversionofvisualstudio)\n\n   1. Lancez la dernière version de Visual Studio.\n   1. Accédez au **projet/solution** **d’ouverture** >  de **fichier** > .\n\n      ![Ouvrir le fichier](~/assets/images/sbs-messagingextension-action/VSopenfile.png)\n\n   1. Sélectionnez le fichier **TeamsMessagingExtensionsAction.csproj** dans **csharp_dotnet** dossier.\n\n      ![Fichier de solution](~/assets/images/sbs-messagingextension-action/openproject.png)\n\n   1. Appuyez sur **F5** pour exécuter le projet.\n\n   1. Sélectionnez **Oui** si la boîte de dialogue suivante s’affiche :\n\n      ![Certificat d’approbation](~/assets/images/sbs-messagingextension-action/certificate.png)\n\n      Une page web s’ouvre avec un message **indiquant que votre bot est prêt!**.\n\n      ![Application prête](~/assets/images/sbs-messagingextension-action/appisready.png) \n\n    \n# <a name=\"command-line\"></a>[Ligne de commande](#tab/cli)\n\nAccédez à **des exemples > csharp_dotnetcore > 51.teams-messaging-extensions-action** dans la fenêtre d’invite de commandes et entrez la commande suivante :\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/sbs-messagingextension-action/dotnetruncmd.png)\n  \n"
- title: Ajouter l’application Extension de message d’action à Teams
  durationInMinutes: 1
  content: "1. Dans votre référentiel cloné, accédez à **csharp_dotnetcore > 51.teams-messaging-extensions-action > TeamsAppManifest**.\n\n1. Créez une .zip avec les fichiers suivants présents dans le dossier **Manifeste** : \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   ![Fichier zip](~/assets/images/sbs-messagingextension-action/zipfile.png) \n\n1. Accédez à **Microsoft Teams**.\n\n1. Sélectionner **les applications**.\n\n1. Sélectionnez **Gérer vos applications**.\n\n1. Sélectionnez **Charger une application personnalisée**.\n\n   ![Charger](~/assets/images/sbs-messagingextension-action/uploadacustomapp1.png)\n\n1. Sélectionnez **Ouvrir** pour charger le fichier .zip que vous avez créé dans le dossier **Manifeste** .\n\n   ![Sélectionner un fichier zip](~/assets/images/sbs-messagingextension-action/openzipfile.png)\n\n1. Sélectionnez **Ajouter**.\n\n   ![Ajouter l’application](~/assets/images/sbs-messagingextension-action/add.png)\n\n                \n"
- title: Interagir avec l’application dans Teams
  durationInMinutes: 1
  content: "1. Sélectionnez **la commande Créer une carte** dans la liste de commandes de la zone de composition.\n\n   ![Carte](~/assets/images/sbs-messagingextension-action/create-card.png)\n\n1. Entrez vos informations dans la fenêtre contextuelle modale.\n\n   ![Informations](~/assets/images/sbs-messagingextension-action/output-card.png)\n\n1. Sélectionnez **Envoyer**.\n\n   ![submit](~/assets/images/sbs-messagingextension-action/submit.png)\n\n1. Sélectionnez (...) dans le menu de dépassement de capacité.\n   \n1. Accédez à **Autres actions**.\n\n1. Sélectionnez **Partager le message**.\n\n   ![Carte de partage](~/assets/images/sbs-messagingextension-action/sharemessage.png)\n\n1. Cochez la case si vous devez inclure l’image et l’envoyer.\n\n   ![Sortie](~/assets/images/sbs-messagingextension-action/sharemessageoutput.png)\n"
- title: Relever le défi
  durationInMinutes: 1
  content: >
    Tu as trouvé quelque chose comme ça ?

       ![Sortie](~/assets/images/sbs-messagingextension-action/sharemessageoutput1.png)
- content: Vous avez terminé le didacticiel pour commencer à utiliser une application **d’extension de message d’action** !
