### YamlMime:Tutorial
title: Générer une extension de message basée sur une action
metadata:
  title: Générer une extension de message basée sur une action
  description: Avec ce module d’apprentissage, découvrez comment configurer l’extension de message d’action pour Teams afin de lancer des actions à partir de la zone de rédaction de message et de message.
  audience: Developer
  level: Beginner
  ms.date: 24/02/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: messaging-extensions/how-to/action-commands/define-action-command.md
  nextTutorialTitle: En savoir plus pour activer les commandes d’action d’extension de message
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 33fb68574eb2a3f199fdbeef056b3d84dc95fd42
  ms.sourcegitcommit: 88fb2e9a18de3bd84e3c604ff235fc753c8de8f5
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 11/02/2022
  ms.locfileid: "68818319"
items:
- durationInMinutes: 1
  content: "Les extensions de message basées sur l’action Teams permettent aux utilisateurs d’interagir avec les services web dans le client Microsoft Teams. Cette extension de message permet de lancer des actions dans un système externe à partir de la zone de rédaction du message, de la zone de commande ou directement à partir d’un message.\n\n**Principales fonctionnalités de l’extension de message basé sur l’action :**\n\n* Présente à l’utilisateur une fenêtre contextuelle modale pour collecter ou afficher des informations.\n* Déclenche les commandes d’action à partir de la zone de rédaction du message, de la zone de commande ou d’un message. \n\nCe guide pas à pas vous aide à créer une extension de message basée sur des actions Teams pour lancer des actions à partir de la composition du message et de la zone de message. À la fin de ce didacticiel, vous pouvez obtenir la sortie suivante :\n   \n:::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/sharemessageoutput1.png\" alt-text=\"Sortie.\":::\n"
- title: Configuration requise
  durationInMinutes: 1
  content: >
    Veillez à installer les outils suivants et à configurer votre environnement de développement :

     | &nbsp; | Installer | Pour l’utilisation... |
     | --- | --- | --- |
     | **Obligatoire** | &nbsp; | &nbsp; |
     | &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams pour collaborer avec toutes les personnes avec lesquelles vous travaillez via des applications pour la conversation, les réunions, les appels et le tout au même endroit.|
     | &nbsp; | [Visual Studio 2022 version 17.3](https://visualstudio.microsoft.com)<br> Installez l’une des deux charges de travail suivantes :<br> • développement ASP.NET et web <br> • Développement multiplateforme .NET Core | Vous pouvez installer la version entreprise dans Visual Studio 2022 et installer les charges de travail. |
     | &nbsp; | [SDK .NET Core version 3.1](https://dotnet.microsoft.com/en-us/download) | Liaisons personnalisées pour le débogage local et les déploiements d’applications Azure Functions. Si vous n’avez pas installé le SDK .NET 3.1 (ou version ultérieure) globalement, la version portable peut être installée. |
     | &nbsp; | [ngrok](https://ngrok.com/download) | Les fonctionnalités d’application Teams (bots conversationnels, extensions de message et webhooks entrants) nécessitent des connexions entrantes. Un tunnel connecte votre système de développement à Teams. Elle n’est pas obligatoire pour les applications qui incluent uniquement des onglets. Ce package est installé dans le répertoire du projet (à l’aide de npm `devDependencies`). |

      > [!NOTE]
      > Après avoir téléchargé ngrok, inscrivez-vous et installez [authtoken](https://ngrok.com/download).
- title: Configurer l’environnement local
  durationInMinutes: 1
  content: "Cloner `BotBuilder-Samples` le dépôt sur votre GitHub local :  \n\n 1. Ouvrez [BotBuilder-Samples](https://github.com/Microsoft/BotBuilder-Samples).\n 1. Sélectionnez **Code**.\n 1. Dans le menu déroulant, sélectionnez **Ouvrir avec GitHub Desktop**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-messagingextension-action/clonerepository_1.png\" alt-text=\"Cloner le référentiel\":::\n\n\n 1. Sélectionnez **Cloner**. \n"
- title: Créer et inscrire votre bot dans le portail Azure AD
  durationInMinutes: 5
  content: "Pour créer et inscrire votre bot dans Microsoft Azure Active Directory (Azure AD), procédez comme suit :\n\n* Créez une ressource Azure Bot pour inscrire le bot auprès d’Azure Bot Service.\n* Créez une clé secrète client pour activer l’authentification unique (SSO) du bot.\n* Créez une inscription de canal de bot dans un compte Azure.\n* Ajoutez un canal Teams pour déployer le bot sur un canal Teams.\n* Utilisez ngrok pour créer un tunnel vers les points de terminaison de votre serveur web.\n* Ajoutez un point de terminaison de messagerie au tunnel ngrok que vous avez créé.\n\n**Pour créer une ressource Azure Bot**\n\n1. Accédez au [Portail Azure Microsoft](https://portal.azure.com/).\n1. Sélectionnez **Créer une ressource**.\n1. Dans la zone de recherche, entrez **Azure Bot**.\n1. Ensuite, sélectionnez **Entrée**.\n1. Sélectionnez **Azure Bot**.\n1. Sélectionnez **Créer**.\n\n     :::image type=\"content\" source=\"./assets/images/azure-bot_1.png\" alt-text=\"Bot Azure.\":::\n\n**La fenêtre Créer un bot Azure s’affiche** .\n\n1. Entrez le nom de handle de bot requis dans **Handle de bot**.\n1. Sélectionnez votre **abonnement** et votre **groupe de ressources** dans la liste déroulante respective.\n    \n     :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/create-azurebot_1.png\" alt-text=\"Sélectionnez bot Azure de ressource.\":::\n\n   Vous pouvez créer un groupe de ressources. Sélectionnez **Créer >** entrez le nom de la ressource > sélectionnez **OK**. Sélectionnez l’emplacement requis dans la liste déroulante **Nouvel emplacement du groupe de ressources** .\n    \n    :::image type=\"content\" source=\"~/assets/images/bots/newresource.png\" alt-text=\"Capture d’écran montrant le nouvel emplacement du groupe de ressources.\":::\n   \n1. Sélectionnez **Type d’application** **multilocataire**.\n\n1. Dans la section **ID d’application Microsoft** , par défaut **, l’option Créer un ID d’application Microsoft** est sélectionnée. \n\n   Vous pouvez sélectionner **Utiliser l’inscription d’application existante** et entrer **ID d’application**, **ID de locataire de l’application** et **ID de ressource MSI**.\n\n   > [!NOTE]\n   > Vous ne pouvez pas créer plusieurs bots avec le même **ID d’application Microsoft**.\n\n1. Sélectionnez **Examiner et créer**.\n\n   :::image type=\"content\" source=\"~/assets/images/sbs-messagingextension-action/register-bot-2_1.png\" alt-text=\"Capture d’écran montrant la création de l’ID d’application Microsoft.\":::\n\n1. Si la validation est réussie, sélectionnez **Créer**.\n\n    L’approvisionnement de votre service de bot prend quelques instants. \n\n1. Sélectionnez **Accéder à la ressource**. \n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/created-azure-bot_1.png\" alt-text=\"Ressource de bot Azure créée.\":::\n\n   Votre bot Azure est créé et vous pouvez voir le **groupe de ressources** et **l’ID d’abonnement** dans le bot Azure.\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/created-azure-bot_2.png\" alt-text=\"Ressource de bot Azure créée2.\":::\n\n**Pour créer une clé secrète client**\n\n  Si vous avez créé un **ID d’application Microsoft**, procédez comme suit :\n\n1. Dans le volet gauche, sélectionnez **Configuration**. \n\n   > [!TIP]\n   > Enregistrez **l’ID d’application Microsoft ou l’ID** **client** pour référence ultérieure.\n\n1. En regard de **Id d’application Microsoft**, sélectionnez **Gérer**.\n\n   :::image type=\"content\" source=\"~/assets/images/sbs-messagingextension-action/manage-bot-label.png\" alt-text=\"Gérer\":::\n\n1. Dans la section **Clés secrètes client** , sélectionnez **Nouvelle clé secrète client**. \n\n   :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/newclientsecret_1.png\" alt-text=\"Capture d’écran montrant la sélection d’une nouvelle clé secrète client.\":::\n\n   **La fenêtre Ajouter une clé secrète client** s’affiche.  \n\n1. Entrez **Description** dans la clé secrète client.\n\n1. Sélectionnez **Ajouter**.\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/add-a-clientsecret_1.png\" alt-text=\"Ajouter une clé secrète client à l’application.\":::\n\n1. Sélectionnez **Copier dans le Presse-papiers** pour copier les détails **de la valeur** .\n\n     :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/client-secret_1.png\" alt-text=\"Valeur de la clé secrète client.\":::\n\n   \n   > [!TIP]\n   > Enregistrez la **valeur** de la clé secrète client ou le mot de passe de l’application pour référence ultérieure.\n\n**Pour ajouter le canal Teams**\n\n1. Sélectionnez **Accueil**.\n\n    :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/select-home_1.png\" alt-text=\"Page d’accueil\":::\n\n1. Sélectionnez votre bot dans **Ressources récentes**.\n\n1. Sélectionnez **Canaux** dans le volet gauche, puis **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/teams 1.png\" alt-text=\"Sélectionnez Teams.\":::\n\n1. Cochez la case pour accepter les **conditions d’utilisation du service**.\n\n1. Sélectionnez **Accepter**.\n\n   :::image type=\"content\" source=\"~/assets/images/sbs-messagingextension-action/terms.png\" alt-text=\"Conditions d’utilisation du service\":::\n\n1. Sélectionnez **Appliquer**.\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/apply.png\" alt-text=\"Capture d’écran montrant la sélection de Teams.\":::\n\n\n**Pour créer un tunnel pour le serveur web local**\n\nUtilisez ngrok pour créer un tunnel vers les points de terminaison HTTPS de votre serveur web en cours d’exécution localement. Exécutez la commande suivante dans ngrok :\n\n ```bash\n ngrok http --host-header=localhost 3978\n ```\n\n> [!TIP]\n> Si vous rencontrez **ERR_NGROK_4018**, suivez les étapes fournies dans l’invite de commandes pour vous inscrire et authentifier ngrok. Exécutez ensuite la commande `ngrok http --host-header=localhost 3978`.\n\n**Pour ajouter un point de terminaison de messagerie**\n\n1. À partir de ngrok, copiez l’URL HTTPS (https vers io).\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-messagingextension-action/ngrok-url.png\" alt-text=\"URL HTTPS ngrok\":::\n\n    > [!NOTE]\n    > L’URL HTTPS dans votre ngrok est un nom de domaine qui n’inclut `https://`pas .\n\n1. Dans **Paramètres**, sélectionnez **Configuration**.\n\n1. Dans **Point de terminaison de messagerie**, ajoutez l’URL HTTPS à partir de ngrok et à la fin de l’URL, ajoutez **/api/messages**.\n\n    :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/appuri_1.png\" alt-text=\"URI de l’application.\":::\n\n1. Sélectionnez **Appliquer**.\n\n    Vous avez correctement configuré un bot dans Azure Bot Service.\n"
- title: Mettre à jour l’inscription de l’application Azure AD
  durationInMinutes: 1
  content: "1. Accédez au [Portail Azure](https://portal.azure.com/).\n\n1. Sélectionnez **Azure Active Directory**.\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/AAD_1.png\" alt-text=\"Azure Directory.\":::\n\n1. Dans le volet de navigation gauche, sélectionnez **inscriptions d'applications**.\n\n1. Sélectionnez votre bot.\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/app-registerations_2.png\" alt-text=\"Inscription de l’application.\":::\n\n1. Sélectionnez **Exposer une API** sous **Gérer**.\n\n1. Sélectionnez **Définir**.\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/set-exposeanapi_2.png\" alt-text=\"Exposer une API.\":::\n\n1. Définissez **l’URI de l’ID d’application** sous la forme .`api://*******.ngrok.io/{AppID}`\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/set-link_1.png\" alt-text=\"définir le lien.\":::\n\n   L’image suivante montre le nom de domaine :\n    \n    :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/exposeanapi_1.png\" alt-text=\"Exposer.\":::\n\n    > [!NOTE]\n    > Si vous utilisez un service de tunneling tel que ngrok, veillez à mettre à jour la valeur chaque fois que votre sous-domaine ngrok change.\n    > Par exemple : `api://*******.ngrok.io/00000000-000-0000-0000-000000000`, où `********.ngrok.io` est le nouveau nom de sous-domaine ngrok.\n\n1. Sélectionnez **Ajouter une étendue**. \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/selectscope_1.png\" alt-text=\"Sélectionnez l’étendue\":::\n\n   **La fenêtre Ajouter une étendue** s’affiche.\n\n1. Entrez les informations suivantes pour configurer l’étendue :\n\n     * Entrez `access_as_user` comme **nom de l’étendue**.\n\n     * Définissez **Qui peut donner votre consentement ?** sur `Admins and users`.\n\n1. Pour configurer les invites de consentement de l’administrateur et de l’utilisateur avec les valeurs appropriées pour `access_as_user` l’étendue, fournissez les informations suivantes dans les champs :</br>\n\n     * Entrez `Teams can access the user’s profile` **comme nom d’affichage Administration consentement**.\n\n     * Entrez `Allows Teams to call the app’s web APIs as the current user` **comme Administration description du consentement**.\n\n     * Entrez `Teams can access the user profile and make requests on the user’s behalf` en tant que **Nom d’affichage du consentement de l’utilisateur**.\n\n     * Entrez `Enable Teams to call this app’s APIs with the same rights as the user` la **description du consentement de l’utilisateur**.\n\n1. Définissez **État** sur **Activé**.\n\n1. Sélectionnez **Ajouter une étendue** à enregistrer.\n\n    :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/addascopeuser_1.png\" alt-text=\"Ajoutez une étendue.\":::\n\n    > [!NOTE]\n    > Le **nom de l’étendue** doit correspondre à l’URI **d’ID d’application** avec `/access_as_user` ajouté à la fin.</br>\n       `api://*******.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/scopes_1.png\" alt-text=\"Étendues.\"::: \n\n1. Dans la section **Applications clientes autorisées**, identifiez les applications que vous souhaitez autoriser pour l'application Web de votre application. \n\n1. Sélectionnez **Ajouter une application cliente**. \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/selectclientapp_1.png\" alt-text=\"Capture d’écran montrant la sélection de l’application cliente.\":::\n\n1. Entrez **l’ID client** : `1fec8e78-bce4-4aaf-ab1b-5451cc387264` pour l’application mobile ou de bureau Teams. \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/addclientapplication1.png\" alt-text=\"Capture d’écran montrant l’ajout d’une application cliente\":::\n\n   Vous pouvez entrer **l’ID client** : `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` pour l’application web Teams.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/addclientapplication2.png\" alt-text=\"Capture d’écran de l’ajout de l’ID client.\":::\n\n1. Sélectionnez **Étendues autorisées**.\n\n    :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/authorizedscope_1.png\" alt-text=\"Ajoutez l’application cliente 2.\":::\n\n   L’image suivante affiche les ID du client :\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/clientapps.png\" alt-text=\"Capture d’écran montrant l’application cliente.\"::: \n\n1. Dans le volet gauche, sélectionnez **Autorisations d’API**. \n\n   > [!NOTE]\n   > Les utilisateurs doivent donner leur consentement à ces autorisations uniquement si l’application Azure AD est inscrite dans un autre locataire.\n\n1. Sélectionnez **Ajouter une autorisation**.\n\n1. Sélectionnez **Microsoft Graph**. \n\n    :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/add-permission_2.png\" alt-text=\"Ajouter une autorisation.\" lightbox= \"./assets/images/sbs-messagingextension-action/add-permission_2.png\":::\n\n1. Sélectionnez **Autorisations déléguées**. \n\n1. Ajoutez les autorisations d’API suivantes :</br>\n     * **email**\n     * **offline_access**\n     * **Openid**\n     * **profil**\n     * **User.Read**\n\n1. Sélectionnez **Ajouter des autorisations**.\n\n     :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/other-permissions.png\" alt-text=\"autres autorisations.\":::\n\n1. Dans le volet gauche, sélectionnez **Authentification** pour définir un URI de redirection. \n\n   > [!NOTE]\n   > Si une application ne reçoit pas le consentement de l’administrateur informatique, les utilisateurs doivent fournir le consentement pour la première fois qu’ils utilisent l’application.\n           \n     1. Sélectionnez **Ajouter une plateforme**.\n     1. Sélectionnez **Web**.\n\n        :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/web_1.png\" alt-text=\"Web.\" lightbox=\"./assets/images/sbs-messagingextension-action/web_1.png\":::\n\n     1. Entrez les **URI de redirection** de votre application en ajoutant au nom de `auth-end` domaine :</br> \n       `https://*******.ngrok.io/auth-end`. </br>\n\n     1. Activez **l’octroi implicite et les flux hybrides** en cochant les cases suivantes :\n         * **Jetons d’accès (utilisés pour les flux implicites)**\n         * **Jetons d’ID (utilisés pour les flux implicites et hybrides).**\n\n     1. Sélectionnez **Configurer**.\n\n        :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/authend_1.png\" alt-text=\"fin de l’authentification.\":::\n"
- title: Configurer les paramètres d’application et les fichiers manifestes
  durationInMinutes: 1
  content: "1. Accédez à **appsettings.json** dans le dépôt cloné.\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/appsettingslocation_1.png\" alt-text=\"Emplacement.\":::\n\n1. Ouvrez **appsettings.json** dans la dernière version de Visual Studio et mettez à jour les informations suivantes :  \n\n     * Remplacez par `\"MicrosoftAppType\"` multilocataire.\n     * Remplacez par `\"MicrosoftAppId\"` l’ID d’application Microsoft de votre bot.\n     * Remplacez par `\"MicrosoftAppPassword\"` la valeur de votre bot de l’ID de clé secrète client.\n     * Remplacez `\"MicrosoftAppTenantId\"` par vide pour le bot multilocataire.\n     * Remplacez par `\"BaseUrl\"` le nom de domaine ngrok.\n\n     :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/json-file_1.png\" alt-text=\"Fichier Json.\":::\n\n1. Accédez à **manifest.json** dans le dépôt cloné.\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/manifest location.png\" alt-text=\"emplacement du manifeste.\":::\n\n1. Ouvrez **manifest.json** dans la dernière version de Visual Studio et apportez les modifications suivantes :\n\n     * Remplacez par le nom de `<<validDomains>>` domaine ngrok.\n     * Remplacez toutes les occurrences de `<<Microsoft-App-ID>>` par **l’ID d’application Microsoft** de votre bot.\n\n     :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/manifest_1.png\" alt-text=\"fichier manifeste.\" lightbox=\"./assets/images/sbs-messagingextension-action/manifest_1.png\" :::\n"
- title: Générer et exécuter le service
  durationInMinutes: 1
  content: "**Pour générer et exécuter le service à l’aide de la dernière version de Visual Studio ou de la ligne de commande**\n\n# <a name=\"latest-version-of-visual-studio\"></a>[Dernière version de Visual Studio](#tab/latestversionofvisualstudio)\n\n   1. Lancez la dernière version de Visual Studio.\n   1. Sélectionnez **Fichier** > **Ouvrir le** > **projet/la solution**.\n\n      :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/VSopenfile_1.png\" alt-text=\"ouvrez le fichier.\":::\n\n   1. Sélectionnez **TeamsMessagingExtensionsAction.csproj** fichier **dans csharp_dotnet** dossier.\n\n      :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/openproject_1.png\" alt-text=\"ouvrez le projet.\":::\n\n   1. Appuyez sur **F5** pour exécuter le projet.\n\n   1. Sélectionnez **Oui** si la boîte de dialogue suivante s’affiche :\n\n      :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/certificate_1.png\" alt-text=\"Certificat.\":::\n\n      Une page web s’affiche avec un message **Votre bot est prêt!**.\n\n      :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/appisready.png\" alt-text=\"Application prête.\"::: \n\n    \n# <a name=\"command-line\"></a>[Ligne de commande](#tab/cli)\n\nAccédez aux **exemples > csharp_dotnetcore > 51.teams-messaging-extensions-action** dans la fenêtre d’invite de commandes et entrez la commande suivante :\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/sbs-messagingextension-action/dotnetruncmd.png)\n  \n"
- title: Ajouter une application d’extension de message d’action à Teams
  durationInMinutes: 1
  content: "1. Dans votre dépôt cloné, accédez à **csharp_dotnetcore > 51.teams-messaging-extensions-action > TeamsAppManifest**.\n\n1. Créez un .zip avec les fichiers suivants dans le dossier **Manifeste** :\n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n1. Accédez à **Microsoft Teams**.\n\n1. Sélectionnez **Applications** > **Gérer vos applications** > **Charger une application****Charger une application** >  Charger une application personnalisée.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-messagingextension-action/uploadapp_1.png\" alt-text=\"Fichier zip\":::\n\n1. Sélectionnez **Ouvrir** pour charger le fichier .zip que vous avez créé dans le dossier **Manifeste** .\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/openzipfile_1.png\" alt-text=\"sélectionnez zip.\":::\n\n1. Sélectionnez **Ajouter**.\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/add_1.png\" alt-text=\"Ajoutez l’application.\":::\n\n                \n"
- title: Interagir avec l’application dans Teams
  durationInMinutes: 1
  content: "1. Sélectionnez **Créer une commande de carte** dans la liste des commandes de la zone de composition.\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/create-card_1.png\" alt-text=\"créer une carte.\":::\n\n1. Entrez les informations de la carte dans la fenêtre contextuelle modale.\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/output-card.png\" alt-text=\"Informations.\":::\n\n1. Sélectionnez **Envoyer**.\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/submit.png\" alt-text=\"carte d’information.\":::\n\n1. Cliquez avec le bouton droit sur la carte.\n   \n1. Sélectionnez **Autres actions** > **Partager le message**.\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/sharemessage.png\" alt-text=\"Carte de partage.\":::\n\n1. Cochez la case pour inclure l’image, puis sélectionnez **Envoyer**.\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/sharemessageoutput.png\" alt-text=\"Envoyer la sortie.\":::\n"
- title: Relever le défi
  durationInMinutes: 1
  content: >
    Avez-vous trouvé une sortie comme celle-ci ?

       :::image type="content" source="./assets/images/sbs-messagingextension-action/sharemessageoutput1.png" alt-text="Sortie.":::
- content: Vous avez terminé le tutoriel pour bien démarrer avec une application **Extension de message d’action** !
