### YamlMime:Tutorial
title: Générer des notifications en réunion
metadata:
  title: Générer des notifications en réunion
  description: Avec ce module d’apprentissage, découvrez comment envoyer une réponse aux notifications en réunion à l’aide d’un bot dans Teams avec des participants.
  audience: Developer
  level: Beginner
  ms.date: 12/03/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: apps-in-teams-meetings/build-tabs-for-meeting.md
  nextTutorialTitle: En savoir plus sur l’activation et la configuration des applications pour les réunions
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 5af5c91b30f6af922ae0880d723f2310adedb75b
  ms.sourcegitcommit: 10debe0f01574a21aab54bfac692a4c8373263a8
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 10/31/2022
  ms.locfileid: "68790009"
items:
- durationInMinutes: 1
  content: "Microsoft Teams vous permet de générer et d’interagir avec des notifications en réunion à l’aide d’un bot.\n\n**Principales fonctionnalités des notifications en réunion** :\n\n* Afficher les éléments de l’ordre du jour répertoriés dans une carte adaptative.\n* Sélectionnez n’importe quelle option dans l’ordre du jour donné.\n* Envoyez vos commentaires sur les notifications en réunion ou la carte adaptative envoyées dans la conversation.\n\n> [!NOTE]\n> Les notifications en réunion sont disponibles uniquement pour les utilisateurs Azure AD et non pour les utilisateurs anonymes.\n\nCe guide pas à pas vous aide à générer des notifications en réunion à l’aide d’un bot dans une réunion Teams avec des participants. Vous verrez la sortie suivante :\n\n  :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/desktop-and-mobile-image-final.png\" alt-text=\"Présentation des notifications en réunion\":::\n\n \n"
- title: Configuration requise
  durationInMinutes: 1
  content: "Veillez à installer les outils suivants et à configurer votre environnement de développement :  \n\n | &nbsp; | Installer | Pour l’utilisation... |\n | --- | --- | --- |\n | **Obligatoire** | &nbsp; | &nbsp; |\n | &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams pour collaborer avec toutes les personnes avec lesquelles vous travaillez via des applications pour la conversation, les réunions, les appels et le tout au même endroit.|\n | &nbsp; | [Visual Studio 2022 version 17.3](https://visualstudio.microsoft.com)<br> Installez l’une des deux charges de travail suivantes :<br> • **développement ASP.NET et web** <br> • Développement **multiplateforme .NET Core** | Vous pouvez installer la version entreprise dans Visual Studio 2022 et installer les charges de travail. |\n | &nbsp; | [SDK .NET Core version 3.1](https://dotnet.microsoft.com/en-us/download) | Liaisons personnalisées pour le débogage local et les déploiements d’applications Azure Functions. Si vous n’avez pas installé le SDK .NET 3.1 (ou version ultérieure) globalement, la version portable peut être installée. |\n | &nbsp; | [ngrok](https://ngrok.com/download) | Les fonctionnalités d’application Teams (bots conversationnels, extensions de message et webhooks entrants) nécessitent des connexions entrantes. Un tunnel connecte votre système de développement à Teams. Elle n’est pas obligatoire pour les applications qui incluent uniquement des onglets. Ce package est installé dans le répertoire du projet (à l’aide de npm `devDependencies`). |\n\n  > [!NOTE]\n  > Après avoir téléchargé ngrok, inscrivez-vous et installez [authtoken](https://ngrok.com/download).\n\nVérifiez que vous avez une connaissance pratique de [C#](/dotnet/csharp/fundamentals/tutorials/how-to-display-command-line-arguments).\n"
- title: Configurer l’environnement local
  durationInMinutes: 1
  content: "\n1. Ouvrez [Exemples Microsoft Teams](https://github.com/OfficeDev/Microsoft-Teams-Samples).\n1. Sélectionnez **Code**.\n1. Dans le menu déroulant, sélectionnez **Ouvrir avec GitHub Desktop**.\n\n   :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/meeting-token-generator-clonerepository_1.png\" alt-text=\"Cloner le référentiel\":::\n\n1. Sélectionnez **Cloner**. \n\n   > [!NOTE]\n   > Si vous rencontrez l’erreur **Nom de fichier trop longtemps** , appliquez la commande `git config --system core.longpaths true` git dans le terminal administrateur de votre choix.\n"
- title: Créer et inscrire votre bot
  durationInMinutes: 5
  content: "Les étapes suivantes vous aident à créer et à inscrire votre bot dans Portail Azure.\n\n* Créez une ressource Azure Bot pour inscrire le bot auprès d’Azure Bot Service.\n* Créez une clé secrète client pour activer l’authentification unique du bot.\n* Ajoutez un canal Teams pour déployer le bot.\n* Utilisez ngrok pour créer un tunnel vers les points de terminaison de votre serveur web.\n* Ajoutez un point de terminaison de messagerie au tunnel ngrok que vous avez créé.\n\n**Pour créer une ressource Azure Bot**\n\n1. Accédez au [Portail Azure](https://portal.azure.com/).\n1. Sélectionnez **Créer une ressource**.\n1. Dans la zone de recherche, entrez **Azure Bot**.\n1. Ensuite, sélectionnez **Entrée**.\n1. Sélectionnez **Azure Bot**.\n\n    :::image type=\"content\" source=\"./assets/images/azure-bot_1.png\" alt-text=\"Bot Azure.\":::\n\n1. Sélectionnez **Créer**.\n1. Entrez le nom de handle de bot requis dans **Handle de bot**.\n1. Sélectionnez votre **abonnement** dans la liste déroulante.\n1. Sélectionnez votre **groupe de ressources** dans la liste déroulante.\n \n    :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/meeting-token-generator-review-plus-create_1.png\" alt-text=\"Créer un bot Azure de ressource\":::\n\n   Pour créer un groupe de ressources, sélectionnez **Créer** un nouveau > entrez le nom de la ressource > sélectionnez **OK**. Sélectionnez l’emplacement requis dans la liste déroulante **Nouvel emplacement du groupe de ressources** .\n   \n     :::image type=\"content\" source=\"~/assets/images/bots/newresource.png\" alt-text=\"Créer un bot Azure de ressource\":::\n\n1. Dans la section **ID d’application Microsoft** , par défaut **, l’option Créer un ID d’application Microsoft** est sélectionnée. \n\n   Vous pouvez également sélectionner **Utiliser l’inscription d’application existante** et entrer **l’ID d’application**, **l’ID de locataire de l’application** et **l’ID de ressource MSI** existants.\n\n   > [!NOTE]\n   > Vous ne pouvez pas créer plusieurs bots avec le même **ID d’application Microsoft**.\n\n1. Sélectionnez **Type d’application** **multilocataire**.\n\n1. Sélectionnez **Examiner et créer**.\n\n    :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/Review-create_1.png\" alt-text=\"Vérifier la création\":::\n\n1. Si la validation réussit, sélectionnez **Créer**.\n\n    L’approvisionnement de votre service de bot prend quelques instants.\n\n1. Sélectionnez **Accéder à la ressource**. \n\n     :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/meeting-token-generator-botdeployment_1.png\" alt-text=\"Déployer une application\":::\n    \n    Votre bot Azure est créé.\n\n     :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/meeting-content-bubble-creating-resource-group_1.png\" alt-text=\"Ressource de bot Azure créée\":::\n\n**Pour créer une clé secrète client**\n\n  Si vous avez créé un **ID d’application Microsoft**, procédez comme suit :\n\n1. Dans le volet gauche, sélectionnez **Configuration**. \n\n   > [!TIP]\n   > Enregistrez **l’ID d’application Microsoft ou l’ID** **client** pour référence ultérieure.      \n\n1. En regard de **Id d’application Microsoft**, sélectionnez **Gérer**.\n\n   :::image type=\"content\" source=\"~/assets/images/manage-bot-label_1.png\" alt-text=\"Gérer\":::\n\n1. Dans la section **Clés secrètes client** , sélectionnez **Nouvelle clé secrète client**. \n\n     :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/meeting-token-generator-newclientsecret_1.png\" alt-text=\"Nouvelle clé secrète client\":::\n    \n   La fenêtre **Ajouter une clé secrète client** s’affiche.  \n\n1. Entrez **Description**.\n\n1. Sélectionnez **Ajouter**.\n\n    :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/meeting-token-generator-clientsecret_1.png\" alt-text=\"Ajouter une clé secrète client à l’application\":::\n\n1. Dans la colonne **Valeur** , sélectionnez **Copier dans le Presse-papiers**.\n\n    :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/meeting-content-bubble-client-secret_1.png\" alt-text=\"Valeur de la clé secrète client\":::\n   \n   > [!TIP]\n   > Enregistrez la valeur **Des secrets client** ou le mot de passe de l’application pour référence ultérieure.\n\n**Pour ajouter le canal Teams**\n\n1. Sélectionnez **Accueil**.\n\n1. Sélectionnez votre bot dans **Ressources récentes**.\n\n1. Sélectionnez **Canaux** dans le volet gauche, puis **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n    :::image type=\"content\" source=\"~/assets/images/adaptive-cards/channel-teams.png\" alt-text=\"Sélectionner Teams dans les canaux\":::\n\n1. Sélectionner **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. Cochez la case pour accepter les **conditions d’utilisation du service**.\n\n1. Sélectionnez **Accepter**.\n\n    :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/meeting-token-generator-terms_1.png\" alt-text=\"Conditions d’utilisation du service\":::\n\n1. Sélectionnez **Appliquer**.\n\n**Pour créer un tunnel pour le serveur web local**\n\nUtilisez ngrok ou l’invite de commandes pour créer un tunnel vers les points de terminaison HTTPS de votre serveur web en cours d’exécution localement. Exécutez la commande suivante dans ngrok :\n\n ```bash\n ngrok http --host-header=localhost 3978\n ```\n\n > [!NOTE]\n > Lors de la création d’un tunnel ngrok, utilisez `localhost 5000` au lieu de si vous choisissez **Ligne** de `3978` commande pour exécuter votre application.\n \n > [!TIP]\n > Si vous rencontrez **ERR_NGROK_4018**, suivez les étapes fournies dans l’invite de commandes pour vous inscrire et authentifier ngrok. Exécutez ensuite la commande `ngrok http --host-header=localhost 3978`.\n\n\n**Pour ajouter un point de terminaison de messagerie**\n\n1. À partir de ngrok, copiez l’URL HTTPS.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/ngrok-url_2.png\" alt-text=\"URL HTTPS ngrok\":::\n\n    > [!NOTE]\n    > L’URL HTTPS dans votre ngrok est votre nom de domaine complet.\n    > est `WebAppDomain` un nom de domaine complet qui n’est pas inclus `https://` dans celui-ci.\n\n1. Dans **Paramètres** du bot Azure que vous avez créé, sélectionnez **Configuration**.\n\n1. Dans **Point de terminaison de messagerie**, utilisez l’URL HTTPS disponible à partir de ngrok et à la fin de l’URL, ajoutez **/api/messages**.\n\n     :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/meeting-content-bubble-config-messaging-end-point_1.png\" alt-text=\"Point de terminaison de messagerie\":::\n\n1. Sélectionnez **Appliquer**.\n\n    Vous avez correctement configuré un bot dans Azure Bot Service.\n"
- title: Mettre à jour l’inscription de l’application Azure AD
  durationInMinutes: 1
  content: "\n1. Accédez au [Portail Azure](https://portal.azure.com/).\n\n1. Sélectionnez **Azure Active Directory**.\n\n1. Dans le volet gauche, sélectionnez **Inscriptions d’applications**.\n\n1. Sélectionnez votre bot.\n\n1. Sélectionnez **Exposer une API** sous **Gérer**.\n\n1. Sélectionnez **Définir**.\n\n1. Définissez **l’URI de l’ID d’application** sous la forme .`api://your ngrok/botid-{AppID}`\n\n    :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/meeting-content-bubble-set-api_1.png\" alt-text=\"Définir le lien\":::\n\n   L’image suivante montre le nom de domaine :\n    \n     :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/meeting-content-bubble-exposeapi_1.png\" alt-text=\"URI ID d'application\":::\n\n    > [!NOTE]\n    > Si vous utilisez un service de tunneling tel que ngrok, veillez à mettre à jour la valeur chaque fois que votre sous-domaine ngrok change.\n    > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`, où `f631****.ngrok.io` est le nouveau nom de sous-domaine ngrok.\n\n1. Sélectionnez **Ajouter une étendue**. \n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/selectscope_1.png\" alt-text=\"Ajouter une étendue\":::\n        \n1. Dans le panneau qui s’affiche, entrez `access_as_user` comme **nom de l’étendue**.\n\n1. Définissez **Qui peut donner votre consentement ?** sur `Admins and users`.\n\n1. Pour configurer les invites de consentement de l’administrateur et de l’utilisateur avec les valeurs appropriées pour `access_as_user` l’étendue, fournissez les informations suivantes dans les champs :\n\n     * Entrez `Teams can access the user’s profile` **comme nom d’affichage Administration consentement**.\n\n     * Entrez `Allows Teams to call the app’s web APIs as the current user` **comme Administration description du consentement**.\n\n     * Entrez `Teams can access the user profile and make requests on the user’s behalf` en tant que **Nom d’affichage du consentement de l’utilisateur**.\n\n     * Entrez `Enable Teams to call this app’s APIs with the same rights as the user` la **description du consentement de l’utilisateur**.\n\n   L’image suivante montre les champs et les valeurs :\n\n      :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/meeting-content-bubble-access-as-user_1.png\" alt-text=\"Ajouter une étendue\":::\n\n1. Vérifiez que **State** est défini comme **Enabled**.\n\n1. Sélectionnez **Ajouter une étendue** à enregistrer.\n\n\n   > [!NOTE]\n   > Le **nom de l’étendue** doit correspondre à l’URI **d’ID d’application** avec `/access_as_user` ajouté à la fin.\n       `api://****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n    :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/meeting-content-bubble-add-scope_1.png\" alt-text=\"Scope\":::\n\n1. Dans la section **Applications clientes autorisées**, identifiez les applications que vous souhaitez autoriser pour l'application Web de votre application. \n\n1. Sélectionnez **Ajouter une application cliente**. \n\n    :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/meeting-token-generator-selectclientapp_1.png\" alt-text=\"Ajouter une application cliente\":::\n\n1. Entrez **l’ID client** : `1fec8e78-bce4-4aaf-ab1b-5451cc387264` pour l’application mobile ou de bureau Teams. \n\n    :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/meeting-token-generator-addclientapp1.png\" alt-text=\"Ajouter une application cliente 1\":::\n\n   Vous pouvez entrer **l’ID client** : `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` pour l’application web Teams.\n\n    :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/meeting-token-generator-addclientapp2.png\" alt-text=\"Ajouter une application cliente 2\":::\n\n1. Sélectionnez **Étendues autorisées**.\n\n    :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/meeting-content-bubble-add-client-app_1.png\" alt-text=\"Ajouter une application cliente\":::\n\n   L’image suivante affiche l’ID client :\n\n    :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/meeting-content-bubble-client-applications.png\" alt-text=\"Applications clientes\":::\n\n1. Dans le volet gauche, sélectionnez **Autorisations d’API**. \n\n   > [!NOTE]\n   > Les utilisateurs doivent donner leur consentement à ces autorisations uniquement si l’application Azure AD est inscrite dans un autre locataire.\n\n1. Sélectionnez **Ajouter une autorisation**.\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/add-permission_1.png\" alt-text=\"Ajouter une autorisation\":::\n\n1. Sélectionnez **Microsoft Graph**.\n\n1. Sélectionnez **Autorisations déléguées**.\n\n1. Ajoutez les autorisations suivantes :\n     * **email**\n     * **offline_access**\n     * **Openid**\n     * **profil**\n     * **User.Read**\n\n1. Sélectionnez **Ajouter des autorisations**.\n\n    :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/meeting-token-generator-otherpermissions.png\" alt-text=\"Autres autorisations\":::\n\n1. Dans le volet gauche, sélectionnez **Authentification** pour définir un URI de redirection. \n\n   > [!NOTE]\n   > Si une application ne reçoit pas le consentement de l’administrateur informatique, les utilisateurs doivent fournir le consentement la première fois qu’ils utilisent une application.\n           \n     1. Sélectionnez **Ajouter une plateforme**.\n     1. Sélectionnez **Web**.\n\n         :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/meeting-content-bubble-platform-web_1.png\" alt-text=\"Web\":::\n\n     1. Entrez l’URI de redirection de votre application en ajoutant `auth-end` au nom de domaine complet : `https://your ngrok/auth-end`.\n\n     1. Activez **l’octroi implicite et les flux hybrides** en cochant les cases suivantes :\n         * **Jetons d’ID**\n         * **Jetons d’accès**\n\n     1. Sélectionnez **Configurer**.\n\n         :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/meeting-content-bubble-config-web_1.png\" alt-text=\"Auth-end\":::\n"
- title: Configurer les paramètres de l’application
  durationInMinutes: 1
  content: "1. Accédez à **appsettings.json** dans le référentiel cloné.\n\n    :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/navigate-to-meeting-content-bubble-repo_1.png\" alt-text=\"Emplacement des paramètres de l’application\":::\n\n1. Ouvrez **appsettings.json** dans Visual Studio et mettez à jour les informations suivantes :  \n\n     * Définissez sur `\"MicrosoftAppId\"` **l’ID d’application Microsoft** de votre bot.\n     * Définissez sur `\"MicrosoftAppPassword\"` la valeur de l’ID de clé secrète client de votre bot.\n     * Définissez sur `\"BaseURL\"` votre `webAppDomain`.\n\n      :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/appsettings-json1_1.png\" alt-text=\"Paramètres de l’application\":::\n"
- title: Configurer le fichier manifeste
  durationInMinutes: 1
  content: >
    1. Accédez à **manifest.json** dans le référentiel cloné.


    1. Ouvrez **manifest.json** dans Visual Studio et apportez les modifications suivantes :

         * Définissez sur `ID` **ID d’application Microsoft**.
         * Définissez sur `botId` **ID d’application Microsoft**.
         * Définissez sur `validDomains` **Nom de domaine de l’application web**.

          > [!NOTE]
          > `WebAppDomain` est votre domaine ngrok.

         :::image type="content" source="~/assets/images/meeting-content-bubble/manifest-set_1.png" alt-text="Image du manifeste1":::
- title: Générer et exécuter le service
  durationInMinutes: 1
  content: "**Pour générer et exécuter le service à l’aide de Visual Studio**\n\n   1. Ouvrez **Visual Studio**.\n   1. Accédez à **Fichier** > **Ouvrir le** > **projet/la solution**.\n\n       :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/meeting-token-generator-VSopenfile_1.png\" alt-text=\"Ouvrir un fichier\":::\n\n   1. Ouvrez **le fichier ContentBubbleBot.sln** .\n\n       :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/proj-sln_1.png\" alt-text=\"Ouvrir un fichier\":::\n\n   1. Appuyez sur **F5** pour exécuter le projet.\n\n      Une page web **s’ouvre avec un message Votre bot est prêt!**.\n\n       :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/your-bot-is-ready.png\" alt-text=\"Application prête\"::: \n"
- title: Ajouter une application de notifications en réunion à Teams
  durationInMinutes: 1
  content: "\n1. Dans votre dépôt cloné, accédez à **csharp > Ressources > Manifeste**.\n\n1. Créez un .zip avec les fichiers suivants présents dans le dossier **Manifeste** : \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n    :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/create-manifest-zip_1.png\" alt-text=\"Fichier zip\"::: \n\n1. Créez une réunion avec quelques présentateurs et participants.\n\n1. Une fois la réunion créée, sélectionnez **+** **Ajouter une application**.\n\n    :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/add-an-app.png\" alt-text=\"Ajouter une application\"::: \n\n1. Dans la fenêtre contextuelle, sélectionnez **Gérer les applications**.\n\n    :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/manage-apps_1.png\" alt-text=\"Gérer les applications\"::: \n\n1. Sélectionnez **Charger une application personnalisée**. \n\n    :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/upload-custom-app_1.png\" alt-text=\"Charger une application personnalisée\"::: \n\n1. Sélectionnez **Ouvrir** pour charger le fichier .zip que vous avez créé dans le dossier **Manifeste** .\n\n    :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/Zip-file_1.png\" alt-text=\"Charger l’application zip\":::\n\n1. Sélectionnez **Ajouter**.\n\n    :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/content-bubble-demo_1.png\" alt-text=\"Ajouter l’application\"::: \n\n1. La section **Gérer les applications** affiche la liste des applications.\n\n    :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/Manage.png\" alt-text=\"Gérer les applications\"::: \n\n1. Accédez à la conversation de réunion Teams.\n\n1. **Notifications en réunion L’application de démonstration** envoie une réponse automatique à la conversation de réunion.\n\n     :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/content-bubble-demo-first-reply.png\" alt-text=\"Notifications de réunion Réponse de démonstration\"::: \n\n1. Envoyez un message **hello** au bot.\n\n     :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/content-bubble-demo-second-reply.png\" alt-text=\"Mentionner le bot\"::: \n\n1. Le bot vous envoie les éléments de l’ordre du jour répertoriés dans une carte adaptative.\n\n1. Sélectionnez n’importe quelle option, puis **sélectionnez Push Agenda** pour envoyer une réponse.\n\n    :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/push-agenda.png\" alt-text=\"Le bot vous envoie une carte adaptative\"::: \n\n1. Le bot envoie une carte adaptative **de commentaires** .\n\n1. Sélectionnez **Oui** ou **Non**.\n\n1. Sélectionnez **Envoyer**.\n\n    :::image type=\"content\" source=\"~/assets/images/meeting-content-bubble/content-bubble-feedback.png\" alt-text=\"Le bot vous envoie une carte de commentaires\"::: \n\n    Le bot envoie le message de commentaires.\n  \n"
- title: Relever le défi
  durationInMinutes: 1
  content: >
    Tu as trouvé quelque chose comme ça ?

     :::image type="content" source="~/assets/images/meeting-content-bubble/desktop-and-mobile-image-final.png" alt-text="Notifications en réunion Démonstration du bureau et des appareils mobiles":::
- content: Vous avez terminé le tutoriel pour commencer à générer l’application de notifications en réunion.
