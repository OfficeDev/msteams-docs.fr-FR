### YamlMime:Tutorial
title: Créer un bot de notification avec JavaScript
metadata:
  title: Créer un bot de notification avec JavaScript
  description: Dans ce tutoriel, vous allez apprendre à envoyer des notifications avec JavaScript en créant un bot de notification avec Teams Toolkit.
  audience: Developer
  level: Beginner
  ms.date: 05/04/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: toolkit/add-capability.md
  nextTutorialTitle: Revenir à Ajouter une fonctionnalité
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: dc4d10468dee480e3ef231fe999ec5012f51a7b6
  ms.sourcegitcommit: 10debe0f01574a21aab54bfac692a4c8373263a8
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 10/31/2022
  ms.locfileid: "68789998"
items:
- durationInMinutes: 1
  content: >
    Le bot de notification envoie de manière proactive des messages dans un canal Teams, une conversation de groupe ou une conversation personnelle. Vous pouvez déclencher le bot de notification avec une requête HTTP, telle que des cartes ou des sms.


    Dans ce tutoriel, vous allez apprendre à :


    - Comment créer un bot de notification avec Teams Toolkit.

    - À propos de la structure de répertoires de votre application.

    - Comment envoyer plusieurs notifications.


    Ce guide pas à pas vous aide à créer un bot de notification avec Teams Toolkit. Vous verrez la sortie suivante :

      :::image type="content" source="../msteams-platform/assets/images/sbs-notification-bot/trigger-output.png" alt-text="Sortie du déclencheur"border="true":::
- title: Configuration requise
  durationInMinutes: 1
  content: "\nVoici une liste des outils dont vous avez besoin pour créer et déployer vos applications.\n\n| &nbsp; | Installer | Pour utiliser |\n| --- | --- | --- |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | Environnements de build JavaScript ou TypeScript. Utilisez la dernière version. |\n| &nbsp; | [Toolkit Teams](#install-the-teams-toolkit) | Extension Microsoft Visual Studio Code qui crée une structure de projet pour votre application. Utilisez la version 4.0.0. |\n| &nbsp; | [Node.js](https://nodejs.org/en/download/) | Environnement runtime JavaScript principal. Utilisez la version 14 ou 16.|\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams pour collaborer avec toutes les personnes avec lesquelles vous travaillez via des applications pour la conversation, la réunion, l’appel et le tout au même endroit.|\n| &nbsp; | [Microsoft&nbsp; Edge](https://www.microsoft.com/edge) (recommandé) ou [Google Chrome](https://www.google.com/chrome/) | Un navigateur avec des outils de développement. |\n| &nbsp; | [Microsoft 365](https://developer.microsoft.com/en-us/microsoft-365/dev-program) | Accès au compte Teams avec les autorisations appropriées pour installer une application. |\n\n> [!NOTE]\n> Le guide est testé sur Teams Toolkit version 4.0.0 et Nodejs version 14 et 16. Les étapes décrites dans ce guide peuvent fonctionner avec d’autres versions, mais elles n’ont pas été testées.\n\n## <a name=\"prepare-development-environment\"></a>Préparer l’environnement de développement\n\nUne fois que vous avez installé les outils requis, configurez l’environnement de développement.\n\n### <a name=\"install-the-teams-toolkit\"></a>Installer le kit de ressources Teams\n\nLe Kit de ressources Teams permet de simplifier le processus de développement avec des outils permettant de provisionner et de déployer des ressources cloud pour votre application, de publier dans le magasin Teams, etc. \n \nVous pouvez utiliser le kit de ressources avec Visual Studio Code ou l’interface CLI (interface de ligne de commande), appelée `TeamsFx`.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Ouvrez Visual Studio Code et sélectionnez **Extensions** (**Ctrl+Maj+X** / **⌘⇧-X** ou **Afficher les extensions >**).\n1. Dans la zone de recherche, entrez **Teams Toolkit**.\n1. Sélectionnez **Installer** en regard du Kit de ressources Teams.\n\n :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/teams-toolkit.png\" alt-text=\"Illustration montrant l’installation de l’extension Teams Toolkit.\":::\n\n L’icône du Kit de ressources Teams apparaît dans la barre latérale de Visual Studio Code après son installation.\n\n :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/hw-teams-toolkit-sidebar-icon.png\" alt-text=\"Illustration montrant l’icône Teams Toolkit dans la barre latérale de Visual Studio Code.\":::\n\nVous trouverez également le Kit de ressources Teams sur la [Place de marché Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=TeamsDevApp.ms-teams-vscode-extension).\n\n# <a name=\"command-line\"></a>[Ligne de commande](#tab/cli)\n\nPour installer l’interface CLI TeamsFx, utilisez le gestionnaire de `npm` package :\n\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\n\nSelon votre configuration, vous devrez peut-être utiliser `sudo` pour installer l’interface CLI :\n\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\n\nIl est plus courant sur les systèmes Linux et macOS.\n\nVeillez à ajouter le cache global npm à votre chemin d’accès. Cette étape est normalement effectuée dans le cadre du programme d’installation Node.js.  \n\nVous pouvez utiliser l’interface CLI avec la `teamsfx` commande . Testez que la commande fonctionne en exécutant `teamsfx -h`.\n\n> [!NOTE]\n> Avant d’exécuter TeamsFx dans les terminaux PowerShell, veillez à activer la stratégie d’exécution **signée à distance** pour PowerShell.\n\n---\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Configurer votre locataire de développement Teams\n\nUn **locataire** est comme un espace ou un conteneur dans lequel vous discutez, partagez des fichiers et exécutez des réunions pour votre organisation dans Teams. Vous pouvez également charger et tester l’application.\n\n### <a name=\"check-for-sideloading-option\"></a>Rechercher l’option de chargement indépendant\n\nAprès avoir créé l’application, vous devez charger votre application dans Teams sans la distribuer. C’est ce que l’on appelle le chargement indépendant. Connectez-vous à votre compte Microsoft 365 pour afficher cette option.\n\n > [!NOTE]\n > Le chargement indépendant est nécessaire pour l’aperçu et le test des applications dans l’environnement local Teams. Activez le chargement indépendant pour afficher un aperçu et tester votre application dans Teams localement.\n\nAvez-vous déjà un locataire et disposez-vous de l’accès administrateur ? Vérifions si vous le faites vraiment !\n\nPour vérifier le chargement indépendant des applications dans Teams :\n\n 1. Dans le client Teams, sélectionnez **Stocker**.\n 1. Sélectionnez **Gérer vos applications**.\n 1. Sélectionnez **Charger une application**.\n 1. Recherchez l’option **Charger une application personnalisée**. Si vous voyez l’option , le chargement indépendant des applications est activé.\n\n     :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"Illustration montrant l’option permettant de charger une application personnalisée dans Teams.\":::\n\n     > [!NOTE]\n     > Si vous ne voyez pas l’option de chargement d’une application personnalisée, contactez l’administrateur Teams.\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Créer un locataire développeur Teams gratuit (facultatif)\n\nSi vous n’avez pas de compte de développeur Teams, vous pouvez l’obtenir gratuitement. Rejoignez le programme des développeurs Microsoft 365 !\n\n1. Accédez au[Programme pour les développeurs Microsoft 365](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Sélectionnez **Rejoindre maintenant** et suivez les instructions à l’écran.\n1. Sélectionnez **Configurer l’abonnement E5** dans l’écran d’accueil.\n1. Configurer un compte d’administrateur. Une fois que vous avez terminé, l’écran suivant s’affiche.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/microsoft-365.png\" alt-text=\"Microsoft\":::\n\n1. Connectez-vous à Teams à l’aide du nouveau compte d’administrateur. Vous devez maintenant disposer de l’option **Charger une application personnalisée** .\n"
- title: Générer un bot de notification
  durationInMinutes: 1
  content: "**Pour générer un bot de notification à l’aide de Visual Studio Code**\n\n 1. Ouvrez Visual Studio Code.\n \n 1. Sélectionnez l’icône :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: du kit de ressources Teams dans la barre latérale Visual Studio Code.\n\n 1. Sélectionnez **Créer une application Teams**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/create-new-teams-app.png\" alt-text=\"Emplacement du lien Création d’un projet dans la barre latérale du Kit de ressources Teams.\":::\n\n 1. Sélectionnez **l’option Créer une application Teams** pour créer une application à l’aide du Kit de ressources Teams.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/create-new-app.png\" alt-text=\"Démarrage de l’Assistant pour la création d’un projet\":::\n\n 1. Vérifiez que **Notification Bot** est sélectionné comme fonctionnalité que vous souhaitez générer dans votre application. \n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/select-notification-bot.png\" alt-text=\"Sélectionner la fonctionnalité de l’application\":::\n\n 1. Sélectionnez **Déclencheur HTTP Restify Server** comme déclencheur. \n 1. Sélectionnez **OK**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/select-trigger.png\" alt-text=\"Capture d’écran présentant comment sélectionner le langage de programmation.\":::  \n\n 1. Sélectionnez **JavaScript** comme langage de programmation.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-command-bot/select-script.png\" alt-text=\"Capture d’écran présentant comment sélectionner le langage de programmation.\":::    \n\n 1. Sélectionnez **Dossier par défaut** pour stocker le dossier racine de votre projet à l’emplacement par défaut.\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/select-default-location.png\" alt-text=\"Sélectionner l’emplacement par défaut\":::\n \n    Vous pouvez également modifier l’emplacement par défaut en procédant comme suit :\n\n     1. Sélectionnez **Parcourir**.\n\n         :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/select-browse.png\" alt-text=\"Sélectionner l’emplacement de navigation\":::\n         \n     1. Sélectionnez l’emplacement de l’espace de travail du projet.\n\n     1. Sélectionnez **Sélectionner un dossier**.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/select-folder.png\" alt-text=\"Sélectionner un dossier\":::\n \n 1. Entrez un nom approprié pour votre application, par exemple mynotificationbot comme nom d’application. \n 1. Ensuite, sélectionnez **Entrée**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/type-notfication-name.png\" alt-text=\"Capture d’écran montrant où entrer le nom de l’application.\":::\n\n    > [!NOTE]\n    > Veillez à utiliser uniquement des caractères alphanumériques dans le nom de l’application.\n\n 1. Par défaut, le projet s’ouvre dans une nouvelle fenêtre dans un délai de 10 secondes. Si vous souhaitez ouvrir dans la fenêtre active, sélectionnez **Ouvrir dans la fenêtre active**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/new-window-notification.png\" alt-text=\"Nouvelle notification de fenêtre\":::\n\n     L’application bot de notification est créée en quelques secondes.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/my-notification-bot.png\" alt-text=\"Capture d’écran montrant l’application créée.\":::\n\n 1. Sélectionnez **l’icône Exécuter et déboguer** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/run-debug-icon.png\"::: dans la barre latérale de Visual Studio Code.\n\n 1. Sélectionnez **Déboguer(Edge)** ou **Déboguer(Chrome)** dans la liste déroulante.\n\n 1. Sélectionnez **le bouton Démarrer le débogage** .\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/debug-app.png\" alt-text=\"Débogage d’application\"border=\"true\"::: \n\n 1. Sélectionnez **Ajouter**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/my-notification-output.png\" alt-text=\"Ma sortie de notification1\"border=\"true\":::\n\n 1. Ouvrez **Windows PowerShell**.\n\n 1. Exécutez la commande `Invoke-Webrequest -Method POST -URI http://localhost:3978/api/notification`.\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/windows-powershell.png\" alt-text=\"Déclencheur PowerShell\"border=\"true\":::   \n\n     Vous obtiendrez la sortie suivante dans Teams :\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/trigger-output.png\" alt-text=\"Sortie du déclencheur\"border=\"true\":::\n\n ## <a name=\"take-tour-of-source-code\"></a>Découvrez le code source\n\n Teams Toolkit fournit des composants pour la création d’une application. Après avoir créé le projet, vous pouvez afficher les dossiers et fichiers du projet dans la zone **Explorateur** de Visual Studio Code.\n\n :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/folder-structure1.png\" alt-text=\"onglet structure\":::\n\n Si vous choisissez d’utiliser l’infrastructure d’interface utilisateur, l’exemple de code de modèle suivant fournit une structure avec React composants.\n\n Le nouveau dossier de projet contient le contenu suivant :\n\n | Nom du dossier | Sommaire |\n | --- | --- |\n | `.fx` | Informations sur les paramètres, la configuration et l’environnement au niveau du projet |\n | `.vscode` | Fichiers vs code pour le débogage local |\n | `bot` | Code source du bot |\n | `templates` | Modèles pour le manifeste de l’application Teams et les ressources Azure correspondantes |\n \n  Implémentation de notification principale dans le dossier **bot** et elle contient :\n\n | Nom de fichier | Sommaire |\n | --- | --- |\n | `src/adaptiveCards/` | Modèles de carte adaptative  |\n | `src/internal/` | Code d’initialisation généré pour la fonctionnalité de notification |\n | `src/index.*s` | Point d’entrée pour gérer les messages du bot et envoyer des notifications |\n | `.gitignore` | Fichier pour exclure les fichiers locaux du projet de bot |\n | `package.json` | Fichier de package npm pour le projet de bot |\n"
- title: Envoyer une notification au canal Teams
  durationInMinutes: 1
  content: "**Pour envoyer une notification au canal Teams**\n\n1. Dans Visual Studio Code, sous **EXPLORATEUR**, sélectionnez **MYNOTIFICATIONBOT> bot> src> index.js**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/file-path.png\" alt-text=\"Chemin d'accès du fichier\":::\n\n   La page suivante s’affiche :\n\n     :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/default-program.png\" alt-text=\"Programme par défaut\":::\n\n1. Utilisez le code suivant après `for (const target of await bot.notification.installations()) { ` dans Visual Studio Code.\n\n     ```bash\n     if (target.type === \"Channel\") {\n       const members = await target.members();\n       await target.sendMessage(\"This is a message to channel: \" + members.length + \" members.\");\n       for (const member of members) {\n         await member.sendMessage(\"This is a message to Member: \" + member.account.email);\n       }\n     }\n     /* \n     ```  \n\n      :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/code-add.png\" alt-text=\"Ajout de code\":::\n\n    **Pour personnaliser le stockage :**\n\n    1. Dans Visual Studio Code, sous **EXPLORATEUR**, sélectionnez **MYNOTIFICATIONBOT> bot> src>> initialize.jsinterne**.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/initialize-storage.png\" alt-text=\"Initialiser le stockage\":::\n    \n       La page suivante s’affiche :\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/storage-code.png\" alt-text=\"Code de stockage\":::\n\n    1. Mettez à jour le code suivant dans **initialize.js** fichier pour personnaliser le stockage.\n\n         ```bash\n         const myStorage = new MyStorage(...);\n\n         // initialize ConversationBot with notification enabled and customized storage\n         const bot = new ConversationBot({\n             // The bot id and password to create BotFrameworkAdapter.\n             // See https://aka.ms/about-bot-adapter to learn more about adapters.\n             adapterConfig: {\n                 appId: process.env.BOT_ID,\n                 appPassword: process.env.BOT_PASSWORD,\n             },\n             // Enable notification\n             notification: {\n                 enabled: true,\n                 storage: myStorage,\n             },\n          });\n         ```  \n    1. Utilisez votre propre emplacement de stockage au lieu de **MyStorage**.\n\n        > [!NOTE]\n        > Il est nécessaire d’utiliser votre propre stockage pour l’environnement de production. Si le stockage n’est pas fourni, le stockage de fichiers locaux par défaut est pris en compte.\n\n1. Sélectionnez **l’icône Exécuter et déboguer** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/run-debug-icon.png\"::: dans la barre latérale de Visual Studio Code.\n\n1. Sélectionnez **Déboguer(Edge)** ou **Déboguer(Chrome)** dans la liste déroulante.\n\n1. Sélectionnez **le bouton Démarrer le débogage** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/debug-app.png\" alt-text=\"Débogage d’application\":::\n\n    Vous obtiendrez la sortie suivante dans Teams.\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/app-installation.png\" alt-text=\"Installation de l’application\":::\n\n1. Sélectionnez **Ajouter à une équipe** dans la liste déroulante.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/app-installation1.png\" alt-text=\"Ma sortie de notification1\":::\n\n1. Dans **la zone de recherche**, ajoutez n’importe quel **canal**.\n1. Sélectionnez **Configurer un bot**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/setup-bot.png\" alt-text=\"Configurer le bot\":::\n\n   L’écran suivant s’affiche :\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/channel-notification.png\" alt-text=\"Channe1 Notification\":::\n\n1. Ouvrez **Windows PowerShell**.\n\n1. Exécutez la commande `Invoke-Webrequest -Method POST -URI http://localhost:3978/api/notification`.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/windows-powershell.png\" alt-text=\"Déclencheur PowerShell\"border=\"true\":::   \n\n   Vous recevrez la notification dans le canal Teams :\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/channel-output.png\" alt-text=\"Sortie du canal\":::\n\n   Vous recevrez la notification dans la conversation personnelle :         \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/member-output.png\" alt-text=\"sortie de membre\":::\n"
- title: Déployer votre première application Teams
  durationInMinutes: 1
  content: "\nVous avez appris à créer et à exécuter une application Teams avec la fonctionnalité bot de notification. La dernière étape consiste à déployer votre application sur Azure.\n\nDéployons la première application avec la fonctionnalité bot de notification sur Azure à l’aide du Kit de ressources Teams.\n\n## <a name=\"sign-in-to-your-azure-account\"></a>Connectez-vous à votre compte Azure\n\nUtilisez votre compte pour accéder à Microsoft Portail Azure et fournir de nouvelles ressources cloud pour prendre en charge votre application.\n\n1. Ouvrez Visual Studio Code.\n1. Ouvrez le dossier du projet dans lequel vous avez créé l’application bot de notification.\n1. Sélectionnez l’icône Teams Toolkit  :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: dans la barre latérale.\n1. Sélectionnez **Se connecter à Azure**.\n\n    > [!TIP]\n    > Si l’extension compte Azure est installée et que vous utilisez le même compte, vous pouvez ignorer cette étape.\n\n    Votre navigateur web par défaut s’ouvre pour vous permettre de vous connecter au compte.\n1. Connectez-vous à votre compte Azure à l’aide de vos informations d’identification.\n1. Fermez le navigateur lorsque vous y êtes invité et revenez à Visual Studio Code.\n\n    La section **COMPTES** de la barre latérale affiche les deux comptes séparément. Il répertorie également le nombre d’abonnements Azure utilisables disponibles. \n    \n    > [!NOTE]\n    > Vérifiez que vous disposez d’au moins un abonnement Azure utilisable.\n\n    Vous êtes maintenant prêt à déployer votre application sur Azure !\n\n## <a name=\"deploy-your-app-to-azure\"></a>Déployer votre application vers Azure\n\n  Sous **DÉPLOIEMENT**, vous pouvez provisionner les ressources cloud nécessaires et le code de votre application est copié dans les ressources cloud créées.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Sélectionnez l’icône :::image type=\"icon\" source=\"~/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: du kit de ressources Teams dans la barre latérale Visual Studio Code.\n\n1. Sélectionnez **Provisionner dans le cloud** sous **DÉPLOIEMENT**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/provision-cloud.png\" alt-text=\"Capture d’écran montrant les commandes d’approvisionnement\":::\n\n1. Sélectionnez un groupe de ressources existant ou créez-en un. Pour plus d’informations, consultez [Créer un groupe de ressources](/azure/azure-resource-manager/management/manage-resource-groups-portal#create-resource-groups).\n\n1. Sélectionnez n’importe qui de l’abonnement existant.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/select-subscription.png\" alt-text=\"Capture d’écran montrant la sélection d’un abonnement existant.\":::\n\n1. Sélectionnez un groupe de ressources existant ou créez-en un.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/subscription-cloud.png\" alt-text=\"Capture d’écran montrant les ressources pour l’approvisionnement.\":::\n\n   > [!NOTE]\n   > Une boîte de dialogue s’affiche, indiquant que des coûts peuvent être induits lors de l’exécution de ressources dans Azure.\n\n1. Sélectionnez **Provisionner**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/provision-confirm1.png\" alt-text=\"Capture d’écran de la boîte de dialogue d’approvisionnement.\":::\n\n   Le processus d’approvisionnement crée des ressources dans le cloud Azure. Vous pouvez surveiller la progression en observant les dialogues dans le coin inférieur droit.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/deploy-provision-success.png\" alt-text=\"Capture d’écran montrant la boîte de dialogue de mise en service terminée.\":::\n\n     Vous voyez l’option permettant d’afficher les ressources approvisionnées. Pour ce didacticiel, vous n’avez pas besoin d’afficher les ressources.\n\n1. Sélectionnez **Déployer dans le cloud** sous **DÉPLOIEMENT** une fois l’approvisionnement terminé.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/deploy-cloud.png\" alt-text=\"Capture d’écran montrant où sélectionner le déploiement dans le cloud.\":::\n\n1. Sélectionnez **Déployer**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/Deploy-confirm.png\" alt-text=\"Déployer pour confirmer.\":::\n\n   Le déploiement prend un certain temps. Vous pouvez surveiller la progression dans les boîtes de dialogue situées dans le coin inférieur droit.\n    \n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/deploy-confirmation-cloud.png\" alt-text=\"Confirmation du déploiement.\":::\n\n1. Sélectionnez **Débogage local** sous **ENVIRONNEMENT** à partir de Visual Studio Code.\n\n     :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/local-debug.png\" alt-text=\"Débogage local.\":::\n\n1. Sélectionnez **Déboguer Edge** dans la liste déroulante.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/debug-cloud.png\" alt-text=\"Débogage local.\":::\n\n1. Sélectionnez **Ajouter**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/app-cloud-output.png\" alt-text=\"Sortie du cloud d’application.\":::\n\n1. Ouvrez **Windows PowerShell**.\n\n1. Exécutez la commande `Invoke-Webrequest -Method POST -URI http://localhost:3978/api/notification`.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/windows-powershell1.png\" alt-text=\"Windows Powershell\":::\n\n    Vous recevrez la notification dans Teams :\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/cloud-final-output.png\" alt-text=\"Sortie finale du cloud\":::\n\n# <a name=\"command-line\"></a>[Ligne de commande](#tab/cli)\n\nDans la fenêtre de votre terminal :\n\n1. Exécutez `teamsfx new` pour créer un projet.\n\n   ``` bash\n   teamsfx new\n   ```\n\n1. Exécutez `teamsfx provision` pour créer une ressource Azure.\n\n   ``` bash\n   teamsfx provision\n   ```\n\n1. Exécutez `teamsfx deploy` pour déployer l’application.\n\n   ``` bash\n   teamsfx deploy\n   ```\n\n1. Exécutez `teamsfx preview` pour exécuter l’application.\n\n   ``` bash\n   teamsfx preview\n   ```\n\n---\n"
- title: Relever le défi
  durationInMinutes: 1
  content: >
    Tu as trouvé quelque chose comme ça ?

     :::image type="content" source="../msteams-platform/assets/images/sbs-notification-bot/trigger-output.png" alt-text="Sortie du déclencheur"border="true":::
- content: Vous avez terminé le tutoriel pour créer un bot de notification !
