### YamlMime:Tutorial
title: Meetings SidePanel
metadata:
  title: Meetings SidePanel
  description: 'Dans ce didacticiel, vous allez apprendre à configurer Meetings SidePanel pour Teams.'
  audience: Developer
  level: Beginner
  ms.date: 12/06/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: apps-in-teams-meetings/enable-and-configure-your-app-for-teams-meetings.md
  nextTutorialTitle: En savoir plus pour activer et configurer des applications pour les réunions
  ms.custom: mvc
  ms.localizationpriority: high
items:
  - durationInMinutes: 1
    content: |
      Améliore `meetingSidePanel` votre expérience en réunion. Vous pouvez aider les organisateurs et les présentateurs à avoir différents ensembles d’affichages et d’actions.

      Ce guide pas à pas montre comment implémenter l’application **Panneau** de bord pour ajouter et publier l’agenda.

      **Interaction des organisateurs de la réunion de SidePanel**

      * **Ajouter un nouvel élément d’ordre du** jour : fournit la mise en service pour ajouter un nouveau point d’agenda.
      * **Add**: Adds the agenda as text input to the **Side Panel** agenda list.
      * **Publier l’ordre** du jour : envoie la liste de l’agenda à la conversation de réunion. 

      Vous verrez le résultat suivant :

       ![Votre jeton](~/assets/images/meetings-side-panel/sidepanelondesktopmobile.png)
  - title: Conditions préalables
    durationInMinutes: 1
    content: |
      Veillez à installer les outils suivants et à configurer votre environnement de développement :  

      * [.NET Core SDK](https://dotnet.microsoft.com/download) version 3.1
      * [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)
      * [nodejs](https://nodejs.org/en/download/) LTS version 10.21.0 ou ultérieure
      * [ngrok](https://ngrok.com/download) dernière version (uniquement pour le test de la boîte de développement) ou toute solution de tunneling équivalente

        > [!NOTE]
        > Après avoir téléchargé ngrok, inscrivez-vous et installez [authtoken](https://ngrok.com/download).

      * [Microsoft Teams](https://teams.microsoft.com/) compte valide
      * [SignalR](https://docs.microsoft.com/en-us/aspnet/signalr/overview/getting-started/tutorial-getting-started-with-signalr-and-mvc) pour mettre à jour l’agenda en temps réel

      > [!NOTE]
      > Utilisez la version 1.7.0 ou une version ultérieure du [SDK](/javascript/api/overview/msteams-client?view=msteams-client-js-latest&preserve-view=true) Teams, car les versions antérieures ne peuvent pas prendre en charge le sidepanel de réunion.
  - title: Configurer l’environnement local
    durationInMinutes: 1
    content: |
      Clonez `Microsoft-Teams-Samples` le référentiel dans votre GitHub :  

       1. Ouvrez [Microsoft Teams exemples](https://github.com/OfficeDev/Microsoft-Teams-Samples).
       1. **Sélectionnez Code**.
       1. Dans le menu déroulant, sélectionnez **Ouvrir avec GitHub Bureau**.

          ![Référentiel de clones](~/assets/images/meetings-side-panel/clonerepository1.png)

       1. **Sélectionnez Clone**. 
  - title: Créer et inscrire votre bot sur Azure AD web
    durationInMinutes: 5
    content: |
      Pour créer et inscrire votre bot dans Azure Active Directory, créez un tunnel à l’aide de ngrok et ajoutez un point de terminaison de messagerie, effectuez les étapes suivantes :

      * Créez une ressource Azure Bot pour inscrire le bot auprès d’Azure Bot Service.
      * Créez une secret client pour activer l’authentification sso du bot.
      * Ajoutez Microsoft Teams canal pour déployer le bot sur un canal Teams’accès.
      * Utilisez ngrok pour créer un tunnel vers les points de terminaison de votre serveur web.
      * Ajoutez le point de terminaison de messagerie au tunnel ngrok que vous avez créé.

      **Pour créer une ressource Azure Bot**

      1. Go to the [Microsoft Azure portal](https://portal.azure.com/).
      1. Sélectionnez **Créer une ressource**.
      1. Dans la zone de recherche, entrez **Azure Bot**.
      1. **Sélectionnez Entrée**.
      1. **Sélectionnez Azure Bot**.

           ![Créer une carte de bot Azure](~/assets/images/bots/createazurebot.png)

      1. Sélectionnez **Créer**.
      1. Entrez le nom de handle de bot requis dans **le handle bot**.
      1. Dans la **liste de** listes des abonnements, sélectionnez **msteams.nonprod.pub.msft.aplt**.
      1. Dans la liste **de listes** des groupes de ressources, sélectionnez votre groupe de ressources existant. 

          ![Sélectionner un bot Azure de ressources](~/assets/images/meetings-side-panel/review-plus-create.png) 

         Vous pouvez également créer un nouveau groupe de ressources (sélectionnez **Créer un nouvel** > entrez le nom de la ressource **> ok).**

      1. Si vous avez créé un nouveau groupe de ressources, sélectionnez l’emplacement requis dans la liste de listes des emplacements du nouveau groupe de ressources.

          ![Nouvel emplacement de groupe de ressources](~/assets/images/meetings-side-panel/newresource.png)

      1. Dans la section **ID de l’application Microsoft** , l’option Créer un **ID** d’application Microsoft est sélectionnée par défaut. 

         Vous pouvez soit sélectionner  Utiliser l’inscription d’application existante et entrer **l’ID** d’application existant et le mot de passe **de** l’application existante, soit sélectionner Créer un **ID d’application Microsoft**.

         > [!NOTE]
         > Vous ne pouvez pas créer plusieurs bots avec le même **ID d’application Microsoft**.

      1. Sélectionnez **Examiner et créer**.

          ![Créer un ID d’application Microsoft](~/assets/images/meeting-token-generator/meeting-token-generator-appidcreate.png)

      1. Si la validation réussit, sélectionnez **Créer**. 

          La mise en service de votre service de bot prend quelques instants. 

      1. Sélectionnez **Accéder à la ressource**. 

          ![Déployer l’application](~/assets/images/meetings-side-panel/botdeployment.png)

          Votre bot Azure est créé.

          ![Ressource de bot Azure créée](~/assets/images/meetings-side-panel/bot-page.png)

      **Pour créer une secret client**

        Effectuez les étapes suivantes si vous avez créé un **ID d’application Microsoft** :

      1. Dans le panneau gauche, sélectionnez **Configuration**. 

         > [!TIP]
         > Enregistrez **l’ID d’application Microsoft** ou **l’ID client** pour référence ultérieure.

      1. **Sélectionnez Multi-tens sous** **Type de bot**.

          ![Type de bot](~/assets/images/meetings-side-panel/bot-type.png)

      1. En plus de **l’ID de l’application Microsoft**, sélectionnez **Gérer**.

          ![ID d’application Microsoft](~/assets/images/meetings-side-panel/config.png)

      1. Dans la section **Secrets client** , sélectionnez **Nouvelle secret client**. 

          ![Nouvelle secret client](~/assets/images/meetings-side-panel/newclientsecret.png)

         La **fenêtre Ajouter une secret client** s’affiche.  

      1. Entrez **la description**.

      1. Sélectionnez **Ajouter**.

          ![Ajouter une secret client à l’application](~/assets/images/meetings-side-panel/clientsecret.png)

      1. Dans la **colonne Valeur** , **sélectionnez Copier dans le Presse-papiers**.

           ![Valeur de la secret client](~/assets/images/meetings-side-panel/clientvalue.png)
         
         > [!TIP]
         > Enregistrez la **valeur des secrets client** ou le mot de passe de l’application pour référence ultérieure.

      **Pour ajouter le Microsoft Teams canal**

      1. Sélectionnez **Accueil**.

          ![Page d’accueil](~/assets/images/meetings-side-panel/gotohome.png)

      1. Sélectionnez votre bot à partir **des ressources récentes**.

      1. **Sélectionnez Canaux** dans le volet gauche. 

      1. **Sélectionnez Microsoft Teams** <img src="~/assets/images/bots/teamsicon.png" alt="Teams icon" width="20"/>.

      1. Cochez la case pour accepter les **conditions d’utilisation**.

      1. **Sélectionnez Accepter**.

            ![Conditions d’utilisation](~/assets/images/meetings-side-panel/terms.png)

      1. Sélectionnez **Enregistrer**.

            ![Sélectionnez Teams](~/assets/images/meetings-side-panel/config-teams1.png)   

      **Pour créer un tunnel pour un serveur web local**

      Utilisez ngrok pour créer un tunnel vers les points de terminaison HTTPS disponibles publiquement de votre serveur web exécutant localement. Exécutez la commande suivante dans ngrok :

       ```bash
       ngrok http -host-header=localhost 3978
       ```

      > [!TIP]
      > Si vous rencontrez **ERR_NGROK_4018**, suivez les étapes fournies dans l’invite de commandes pour vous inscrire et authentifier ngrok. Exécutez ensuite la commande `ngrok http -host-header=localhost 3978`.

      **Pour ajouter un point de terminaison de messagerie**

      1. À partir de ngrok, copiez l’URL HTTPS (https vers io).

          ![URL HTTPS ngrok](~/assets/images/meetings-side-panel/ngrok1.png)

          > [!NOTE]
          > L’URL HTTPS dans votre ngrok est votre nom de domaine complet.
          > Il `WebAppDomain` s’agit d’un nom de domaine complet qui ne l’inclut `https://` pas.

      1. Dans **Paramètres** pour le bot Azure que vous avez créé, sélectionnez **Configuration**.

      1. Dans **le point de terminaison de messagerie**, utilisez l’URL HTTPS disponible à partir de ngrok et à la fin de l’URL, **ajoutez /api/messages**.

          ![Point de terminaison de messagerie](~/assets/images/meetings-side-panel/messaging-endpoint.png)

      1. Sélectionnez **Appliquer**.

          Vous avez correctement installé un bot dans Azure Bot Service.
  - title: Mettre à jour l’Azure AD’inscription de l’application
    durationInMinutes: 1
    content: |
      **Pour inscrire votre application via le portail Azure AD web**  

      1. Go to the [Microsoft Azure portal](https://portal.azure.com/).

      1. Sélectionnez **Azure Active Directory**.

      1. Dans le panneau de navigation de gauche, sélectionnez **Inscriptions d’applications**.

      1. Sélectionnez votre bot.

         ![Inscription d’application](~/assets/images/meetings-side-panel/appregister.png)

      1. Sélectionnez **Exposer une API** sous **Gérer**.

      1. Sélectionnez **Définir**.

         ![Exposer une API](~/assets/images/meetings-side-panel/exposeanapi.png)

      1. Définissez **l’URI de l’ID d’application** sous la forme `api://{AppID}`.

         ![Lien Définir](~/assets/images/meetings-side-panel/setlink.png)

      1. Insérez `WebAppDomain` la valeur entre `api://` et `/{AppID}`.</br>
          `api://ae57****.ngrok.io/{AppID}`</br>
          
         L’image suivante montre le nom de domaine :
          
          ![URI ID d'application](~/assets/images/meetings-side-panel/appIDuri.png)

          > [!NOTE]
          > Si vous utilisez un service de tunneling tel que ngrok, veillez à mettre à jour la valeur chaque fois que votre sous-domaine ngrok change.
          > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`, où `f631****.ngrok.io` est le nouveau nom de sous-domaine ngrok.

      1. Sélectionnez **Ajouter une étendue**. 

         ![Sélectionner une étendue](~/assets/images/meetings-side-panel/selectscope.png)

      1. Dans le panneau qui s’affiche, entrez `access_as_user` le nom de **l’étendue**.

      1. **Définissez Qui pouvez consentir à** `Admins and users`.

      1. Pour configurer les invites de consentement de l’administrateur et de l’utilisateur avec les valeurs `access_as_user` appropriées pour l’étendue, fournissez les informations suivantes dans les champs :</br>

           * Entrez le `Teams can access the user’s profile` **nom complet du consentement de l’administrateur**.

           * Entrez la `Allows Teams to call the app’s web APIs as the current user` **description du consentement de l’administrateur**.

           * Entrez le `Teams can access the user profile and make requests on the user’s behalf` **nom complet du consentement de l’utilisateur**.

           * Entrez en `Enable Teams to call this app’s APIs with the same rights as the user` tant **que description du consentement de l’utilisateur**.

      1. Vérifiez que **State** est défini comme **Enabled**.

      1. **Sélectionnez Ajouter une étendue** à enregistrer.

          ![Ajouter une étendue](~/assets/images/meetings-side-panel/addascope.png)

          > [!NOTE]
          > Le **nom de l’étendue** doit correspondre à l’URI **de l’ID** d’application avec `/access_as_user` ajouté à la fin.</br>
             `api://ae57****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`

          ![Étendues](~/assets/images/meetings-side-panel/scopes.png) 

      1. Dans la section **Applications clientes autorisées**, identifiez les applications que vous souhaitez autoriser pour l'application Web de votre application. 

      1. Sélectionnez **Ajouter une application cliente**. 

          ![Sélectionner une application cliente](~/assets/images/meetings-side-panel/selectclientapp.png) 

      1. Entrez **l’ID client** : `1fec8e78-bce4-4aaf-ab1b-5451cc387264` pour Teams application mobile ou de bureau. 

          ![Ajouter l’application cliente 1](~/assets/images/meetings-side-panel/addclientapplication1.png) 

         Vous pouvez entrer **l’ID client** : `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` pour Teams application web.

          ![Ajouter l’application cliente 2](~/assets/images/meetings-side-panel/addclientapplication2.png) 

      1. **Sélectionnez les étendues autorisées**.

          ![Ajouter l’application cliente 2](~/assets/images/meetings-side-panel/authorizedscope.png) 

         L’image suivante affiche les ID clients :

          ![Applications clientes](~/assets/images/meetings-side-panel/clientapps.png) 

      1. Dans le panneau gauche, sélectionnez **Autorisations d’API**. 

         > [!NOTE]
         > Les utilisateurs doivent consentir à ces autorisations uniquement si Azure AD’application est inscrite dans un autre client.

      1. Sélectionnez **Ajouter une autorisation**.

          ![Ajouter une autorisation](~/assets/images/meetings-side-panel/addpermission.png)

      1. **Sélectionnez Microsoft Graph**.

      1. Sélectionnez **Autorisations déléguées**.

          Par défaut, **User.Read** est sélectionné.

           ![Utilisateur](~/assets/images/meetings-side-panel/userpermission.png)

      1. Ajoutez les autorisations suivantes :</br>
           * **email**
           * **offline_access**
           * **OpenId**
           * **profil**

      1. Sélectionnez **Ajouter des autorisations**.

           ![Autres autorisations](~/assets/images/meetings-side-panel/other-permissions.png)

      1. Dans le panneau gauche, sélectionnez **Authentification** pour définir un URI de redirection. 

         > [!NOTE]
         > Si une application n’est pas accordée au consentement de l’administrateur informatique, les utilisateurs doivent donner leur consentement la première fois qu’ils utilisent une application.
                 
           1. Sélectionnez **Ajouter une plateforme**.
           1. Sélectionnez **Web**.

              ![Web](~/assets/images/meetings-side-panel/webauth.png)

           1. Entrez l’URI de redirection de votre application en l’aérant `auth-end` au nom de domaine complet :</br> 
             `https://ae57****.ngrok.io/auth-end`. </br>

           1. **Activez l’octroi implicite et les flux hybrides** en sélectionnant les case à cocher suivantes :
               * **Jetons d’ID**
               * **Jetons d’accès**

           1. Sélectionnez **Configurer**.

              ![Auth-end](~/assets/images/meetings-side-panel/authend.png)
  - title: Configurer les paramètres de l’application et les fichiers manifeste
    durationInMinutes: 1
    content: |
      1. Accédez **à appsettings.json dans** le référentiel cloné.

          ![Emplacement des paramètres de l’application](~/assets/images/meetings-side-panel/appsettingslocation.png)

      1. **Ouvrez appsettings.json** **Visual Studio 2019** et mettez à jour les informations suivantes :  

           * Définissez `"MicrosoftAppId"` ce dernier sur **l’ID d’application Microsoft de votre bot**.
           * Définissez-la `"MicrosoftAppPassword"` sur la valeur de l’ID de la secret client de votre bot.
           * Définir `"BaseUrl"` sur le nom de domaine complet.

          ![Paramètres de l’application](~/assets/images/meetings-side-panel/appsettings.png)

      1. Accédez **à manifest.json dans** le référentiel cloné.

          ![Emplacement du fichier manifeste](~/assets/images/meetings-side-panel/manifestlocation.png)

      1. **Ouvrez manifest.json** **Visual Studio 2019** et a apporté les modifications suivantes :

           * Remplacez toutes les occurrences de `<<Your_Domain_URL>>` votre nom de domaine complet.
           * Remplacez toutes les occurrences par `<<Microsoft-App-ID>>` **l’ID d’application Microsoft de votre bot**.

          ![Image2 du manifeste](~/assets/images/meetings-side-panel/manifest-2.png)
  - title: Créer et exécuter le service
    durationInMinutes: 1
    content: |
      **Pour créer et exécuter le service à l’aide Visual Studio 2019 ou de la ligne de commande**

      # <a name="visual-studio-2019"></a>[Visual Studio 2019](#tab/vs2019)

         1. **Lancez Visual Studio 2019**.
         1. Accédez **à** **FileOpen** >  >  **Project/Solution**.

            ![Ouvrir un fichier](~/assets/images/meeting-token-generator/meeting-token-generator-VSopenfile.png)

         1. **Sélectionnez le fichier SidePanel.sln** dans **le dossier csharp**.

            ![Fichier de solution](~/assets/images/meetings-side-panel/Tokenfileready.png)

         1. Appuyez sur **F5** pour exécuter le projet.

         1. **Sélectionnez Oui** si la boîte de dialogue suivante s’affiche :

            ![Certificat d’autorisation](~/assets/images/meeting-token-generator/meeting-token-generator-certificate.png)

            Une page web s’ouvre avec un message **Votre bot est prêt !**.

            ![Application prête](~/assets/images/meetings-side-panel/appisready.png) 

          
      # <a name="command-line"></a>[Ligne de commande](#tab/cli)

      Accédez à **des exemples > de réunion côté > csharp > Side Panel** dans une fenêtre d’invite de commandes et entrez la commande suivante :

      ```bash
      dotnet run
      ```

      ![Dotnet](~/assets/images/meetings-side-panel/dotnetruncmd.png)
        
  - title: Ajouter l’application Meetings SidePanel à Teams
    durationInMinutes: 1
    content: |
      **Pour créer une réunion Teams et ajouter l’application Meetings SidePanel**

      1. Dans votre référentiel cloné, accédez à **csharp > panneau latéral > manifeste**.

      1. Créez une .zip avec les fichiers suivants présents dans le **dossier manifeste** : 
         * manifest.json
         * icon-outline.png
         * icon-color.png

         ![Fichier zip](~/assets/images/meetings-side-panel/zipfile.png) 

      1. Créez une réunion avec quelques présentateurs et participants.

      1. Une fois la réunion créée, rendez-vous sur la page des détails de la réunion et **sélectionnez Ajouter une application**.

         ![Ajouter une application](~/assets/images/meetings-side-panel/addanapp.png) 

      1. Dans la fenêtre qui s’ouvre, sélectionnez **Gérer les applications**.

         ![Gérer les applications](~/assets/images/meeting-token-generator/meeting-token-generator-manageappsimage.png)

      1. **Sélectionnez Télécharger une application personnalisée**. 

         ![Télécharger application personnalisée](~/assets/images/meetings-side-panel/uploadcustomapp.png)

      1. **Sélectionnez Ouvrir** pour télécharger le .zip que vous avez créé dans le **dossier manifeste**.

         ![Sélectionner un fichier zip](~/assets/images/meetings-side-panel/selectzip.png)

      1. Sélectionnez **Ajouter**.

         ![Ajouter l’application](~/assets/images/meetings-side-panel/addtheapp.png)

         La section **Gérer les** applications affiche la liste des applications.

         ![Application dans Gérer les applications](~/assets/images/meetings-side-panel/manageappsection.png)

      1. Go to Teams meeting.

      1. Sélectionnez **Ajouter une application**. 

         Dans la page de sélection de l’application, l’application s’affiche en **tant que panneau latéral**.

         ![Icône d’application dans Teams](~/assets/images/meetings-side-panel/appicon.png)

      1. Sélectionnez **l’application Panneau** latéral.

      1. Sélectionnez **Enregistrer**.

         ![Application d’accueil](~/assets/images/meetings-side-panel/welcomeapp.png)

         L’application est visible dans le sidepanel de réunion.         
  - title: Interagir avec l’application dans Teams
    durationInMinutes: 1
    content: |
      Interagissons avec l’application dans Teams!

      1. **Sélectionnez Ajouter un nouvel élément d’agenda** pour ajouter un nouvel agenda à la liste d’agendas par défaut.

         ![Jeton dans Meet](~/assets/images/meetings-side-panel/sidepanelinmeet.png)

      1. Entrez un nouvel élément de l’agenda dans la liste, puis sélectionnez **Ajouter**.

         ![Jeton dans Meet](~/assets/images/meetings-side-panel/newagenda.png)

         Le nouvel agenda est ajouté à la liste.

      1. Sélectionnez **Publier l’agenda**.

         ![Votre jeton](~/assets/images/meetings-side-panel/youragenda.png)

         La nouvelle liste d’agenda s’affiche dans la conversation de réunion.

         ![Votre jeton](~/assets/images/meetings-side-panel/agendainchat.png)
  - title: Défi complet
    durationInMinutes: 1
    content: |
      Avez-vous eu un projet comme celui-ci ?

         ![Jeton dans Meet](~/assets/images/meetings-side-panel/sidepanelondesktopmobile.png)
  - content: |
      Vous avez terminé le didacticiel pour commencer avec une **application de panneau** latéral !