### YamlMime:Tutorial
title: Teams Bot avec authentification unique
metadata:
  title: bot Teams avec l’authentification unique
  description: Dans ce tutoriel, vous allez apprendre à configurer l’authentification unique dans un bot pour Teams.
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/how-to/authentication/auth-aad-sso-bots.md
  nextTutorialTitle: En savoir plus sur l’authentification de bot
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: c911a81f35a09698ee6294574ea6f7b6f0b63916
  ms.sourcegitcommit: 61003a14e8a179e1268bbdbd9cf5e904c5259566
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 04/09/2022
  ms.locfileid: "64736885"
items:
- durationInMinutes: 1
  content: "Teams bots sont des bots conversationnels qui exécutent des tâches automatisées répétitives effectuées par les utilisateurs, telles que le service clientèle. L’utilisateur doit se connecter avec ses informations d’identification plusieurs fois pour effectuer des tâches répétitives. La méthode d’authentification unique (SSO) dans Azure Active Directory actualise silencieusement le jeton d’authentification. Cela réduit le nombre de fois où les utilisateurs doivent entrer leurs informations d’identification de connexion. \n\nUn bot se comporte différemment en fonction de la conversation dans lequel il est impliqué :\n\n* Les bots dans les conversations de canal et de groupe nécessitent que l’utilisateur @mention le bot.\n* Les bots dans une conversation à deux n’ont pas besoin d’être @mentionnés. Tous les messages envoyés par l’utilisateur sont acheminés vers le bot.\n\nCe guide pas à pas vous aide à créer un bot avec l’authentification unique activée. La sortie suivante s’affiche :\n\n![Mobile connecté au bot](~/assets/images/bots/sbs-desktop-mobile.png)\n"
- title: Configuration requise
  durationInMinutes: 1
  content: "Veillez à installer les outils suivants et à configurer votre environnement de développement :  \n\n* Compte Microsoft Teams actif avec image de profil\n\n  > [!TIP]\n  > Vérifiez que le compte Microsoft Teams n’est pas un compte invité.\n\n* [ngrok](https://ngrok.com/) ou solution de tunneling équivalente\n\n  > [!NOTE]\n  > Après avoir téléchargé ngrok, inscrivez-vous et installez [authtoken](https://ngrok.com/download).\n\n* Visual Studio 2019 ou la dernière version\n* [Microsoft 365 compte de développeur](concepts/build-and-test/prepare-your-o365-tenant.md) ou l’accès à Teams compte avec les autorisations appropriées pour installer une application\n"
- title: Configurer un bot dans Azure Bot Service
  durationInMinutes: 5
  content: "Pour authentifier le bot avec l’authentification unique, vous pouvez configurer le bot dans Azure Bot Service. Inscrivez un bot auprès d’Azure Bot Service lorsque vous le développez et l’hébergez dans Azure. Effectuez les opérations suivantes :\n\n* Utilisez ngrok pour créer un tunnel vers les points de terminaison de votre serveur web.\n* Créez une ressource Azure Bot pour inscrire un bot auprès d’Azure Bot Service.\n* Créez une clé secrète client qui active l’authentification unique du bot.\n* Ajoutez Microsoft Teams canal pour déployer le bot sur un canal Teams.\n* Ajoutez un point de terminaison de messagerie au tunnel ngrok que vous avez créé.\n\nUtilisez ngrok pour créer un tunnel vers les points de terminaison HTTPS disponibles publiquement de votre serveur web local. Exécutez la commande suivante dans ngrok :\n\n```bash\nngrok http -host-header=rewrite 3978\n```\n\n**Pour créer une ressource Azure Bot**\n\n1. Accédez au [portail Microsoft Azure](https://portal.azure.com/).\n1. Sélectionnez **Créer une ressource**.\n1. Dans la zone de recherche, entrez le **bot Azure** et sélectionnez la clé Entrée.\n1. Sélectionnez **Azure Bot**.\n\n    ![Créer une carte de bot Azure](~/assets/images/bots/createazurebot.png)\n\n1. Sélectionnez **Créer**.\n1. Entrez le nom de handle de bot requis dans le **handle bot**.\n1. Dans la liste déroulante **Abonnement** , sélectionnez l’abonnement.\n1. Dans la liste déroulante **groupe de** ressources, sélectionnez le groupe de ressources.\n    \n    Pour créer une ressource, sélectionnez **Créer**, entrez le nom de la ressource, sélectionnez **OK**, puis sélectionnez l’emplacement requis dans la liste déroulante **Nouvel emplacement du groupe de ressources** .\n\n    > [!NOTE]\n    > Dans la section ID d’application Microsoft, **l’option Créer un ID d’application Microsoft** est déjà sélectionnée. Vous pouvez sélectionner **Utiliser l’inscription d’application existante**, entrer **l’ID d’application existant** et entrer le **mot de passe de l’application existante**.\n\n1. Sélectionnez **Examiner et créer**.\n\n    <img src=\"~/assets/images/bots/Azurebotcreate.png\" alt=\"Create resource Azure bot\" width=\"700\"/>\n\n1. Si la validation réussit, sélectionnez **Créer**.\n\n    L’approvisionnement de votre service de bot prend quelques instants.\n\n1. Sélectionnez **Accéder à la ressource**. Le bot et les ressources associées sont répertoriés dans le groupe de ressources.\n\n    Votre bot Azure a maintenant été créé.\n\n    ![Ressource de bot Azure créée](~/assets/images/bots/Azurebotresource.png)\n\n**Pour créer une clé secrète client**\n\n1. Dans **Paramètres**, sélectionnez **Configuration**.\n\n   > [!TIP]\n   > Enregistrez **l’ID d’application Microsoft** ou **l’ID client** pour référence ultérieure.\n\n1. Sélectionnez **MultiTenant** sous **Type de bot**.\n\n     ![Bot Type](~/assets/images/bots/bot-type.png)\n\n1. En regard de **l’ID d’application Microsoft**, **sélectionnez Gérer**.\n\n     ![ID d’application Microsoft](~/assets/images/bots/MicrosoftAppID.png)\n\n1. Dans la section **Secrets client** , sélectionnez **Nouvelle clé secrète client**. La fenêtre **Ajouter une clé secrète client** s’affiche.  \n\n1. Entrez **Description** , puis **sélectionnez Ajouter**.\n\n    <img src=\"~/assets/images/bots/addclientsecret.png\" alt=\"Add client secret to app\" width=\"500\"/>\n\n1. Dans la colonne **Valeur** , sélectionnez **Copier dans le Presse-papiers** et enregistrez l’ID de clé secrète client pour référence ultérieure.\n\n     ![Valeur de la clé secrète client](~/assets/images/bots/valueclientsecret.png)\n   \n**Pour ajouter le canal Microsoft Teams**\n\n1. Allez à **la maison**.\n\n    <img src=\"~/assets/images/bots/homepage.png\" alt=\"Home page\" width=\"600\"/>\n\n1. Ouvrez votre bot, qui est répertorié dans la section **Ressources récentes** .\n1. Sélectionnez **Canaux** dans le volet gauche, puis **sélectionnez Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.    \n      ![Ouvrir Teams à partir de canaux](~/assets/images/bots/channel-teams.png)    \n      ![Sélectionner Teams](~/assets/images/bots/select-teams.png)    \n1. Sélectionnez **Enregistrer**.\n1. Cochez la case pour accepter les conditions d’utilisation, puis **sélectionnez Accepter**.</br>\n      ![Conditions d’utilisation](~/assets/images/bots/select-terms-of-service.png)\n\n**Pour ajouter un point de terminaison de messagerie**\n\n1. Dans **Paramètres** pour le bot Azure que vous avez créé, sélectionnez **Configuration**.\n1. Accédez à ngrok.\n1. Copiez l’URL HTTPS (https vers io) comme illustré dans l’image suivante :\n\n    ![URL HTTPS ngrok](~/assets/images/bots/ngrokURL.png)\n\n1. Dans **le point de terminaison de messagerie**, utilisez l’URL HTTPS disponible à partir de ngrok et, à la fin de l’URL, ajoutez **/api/messages**.\n\n    <img src=\"~/assets/images/bots/messagingURL.png\" alt=\"Messaging endpoint\" width=\"600\"/>\n\n1. Sélectionnez **Appliquer**.\n\n    Vous avez correctement configuré un bot dans Azure Bot Service et vous devez maintenant configurer la connexion au service bot.\n"
- title: Configurer l’authentification unique pour votre bot
  durationInMinutes: 5
  content: "Pour vous assurer que l’Bot Service permet à l’utilisateur de se connecter et d’accéder au bot, vous devez configurer l’authentification unique pour votre bot. Pour ce faire, effectuez les étapes suivantes :\n\n* Ajoutez l’URI de redirection à la ressource de bot Azure.\n* Exposez le point de terminaison d’API pour spécifier l’emplacement à partir duquel les ressources sont accessibles.\n* Autorisez les applications clientes.\n* Ajoutez toutes les autorisations d’API nécessaires pour les appels en aval.\n* Activez l’octroi implicite.\n* Mettre à jour le manifeste.\n* Configurez Bot Service connexion.\n\n**Pour ajouter l’URI de redirection à la ressource de bot Azure**\n\n1. À côté de **l’ID d’application Microsoft**, sélectionnez **Gérer**.</br>\n    ![Gérer l’ID d’application](~/assets/images/bots/select-manage.png)\n1. Dans le volet gauche de votre ressource de bot, sélectionnez **Authentification**.\n1. Dans **Configurations de** plateforme, sélectionnez **Ajouter une plateforme**.\n1. Sélectionnez **Web**.\n\n1. Entrez **les URI de redirection** sous `https://token.botframework.com/.auth/web/redirect` et **sélectionnez Configurer**.\n\n    <img src=\"~/assets/images/bots/redirectURI.png\" alt=\"Configure Redirect URI\" width=\"600\"/>\n\n    L’URI de redirection est ajouté à la ressource de bot Azure.\n\n    ![URI de redirection ajouté à la ressource de bot](~/assets/images/bots/redirectURIadded.png)\n\n**Pour exposer un point de terminaison d’API**\n\n1. Dans le volet gauche, sélectionnez **Exposer une API**.\n1. Sélectionnez **Définir** pour l’URI d’ID d’application.\n1. Utilisez l’URI d’ID d’application affiché et ajoutez **api://botid** au début de l’URI.\n\n    <img src=\"~/assets/images/bots/exposeAPI.png\" alt=\"Expose an API\" width=\"500\"/>\n\n1. Sélectionnez **Enregistrer**. Enregistrez **l’URI d’ID d’application** pour référence ultérieure.\n1. Sélectionnez **Ajouter une étendue**.\n1. Dans **le nom de l’étendue**, entrez **access_as_user**.\n1. Dans **Qui pouvez donner votre consentement?**, basculez vers **Administrateurs et utilisateurs**.\n1. Entrez les valeurs suivantes dans les zones :\n\n    | Champ | Valeur |\n    | ----- | ----- |\n    | Nom d’affichage du consentement de l’administrateur | Teams pouvez accéder au profil de l’utilisateur |\n    | Description du consentement de l’administrateur | Permet à Teams d’appeler les API web de l’application en tant qu’utilisateur actuel. |\n    | Nom d’affichage du consentement de l’utilisateur | Teams pouvez accéder à votre profil utilisateur et effectuer des demandes en votre nom |\n    | Description du consentement de l’utilisateur | Activez Teams pour appeler les API de cette application avec les mêmes droits que vous. |\n\n1. Vérifiez que **State** est défini comme **Enabled**.\n\n    <img src=\"~/assets/images/bots/addscope.png\" alt=\"Add a scope to app\" width=\"500\"/>\n\n1. Sélectionnez **Ajouter une étendue**. Le nom de l’étendue correspond automatiquement à l’URI d’ID d’application, avec **/access_as_user** ajouté à la fin.\n\n    ![API exposée et étendue ajoutée](~/assets/images/bots/ExposeAPIandaddscope.png)\n\n**Pour autoriser les applications clientes**\n\nAjoutez les ID suivants en tant **qu’applications clientes autorisées** et activez également la case à cocher pour **les étendues autorisées** :      \n* 1fec8e78-bce4-4aaf-ab1b-5451cc387264 (Teams application mobile ou de bureau)            \n* 5e3ce6c0-2b1f-4285-8d4b-75ee78787346 (application web Teams)</br>     \n    ![Ajouter une application cliente à l’application](~/assets/images/bots/addclientapplication1.png)        \n\n**Pour ajouter les autorisations d’API nécessaires pour les appels en aval**\n\n1. Sélectionnez **les autorisations d’API** dans le volet gauche.\n1. Ajoutez toutes les autorisations déléguées par l’utilisateur dont votre application a besoin pour les API en aval, par exemple, User.Read.</br>\n    ![Autorisations utilisateur de l’API](~/assets/images/bots/APIpermissions.png)\n\n**Pour activer l’octroi implicite**\n\n1. Sélectionnez **Authentification** dans le volet gauche.\n1. Cochez les cases **Jetons d’accès** et **jetons d’ID** .</br>\n    ![Cases à cocher d’authentification pour l’application](~/assets/images/bots/authenticationcheckboxes.png)\n1. Sélectionnez **Enregistrer** pour enregistrer les modifications.\n\n**Pour mettre à jour le manifeste**\n\n1. Sélectionnez **Manifeste** dans le volet gauche.\n1. Vérifiez que l’élément de configuration est défini sur **« accessTokenAcceptedVersion » : 2**. Si ce n’est pas le cas, remplacez sa valeur par **2** , puis **sélectionnez Enregistrer**. (Si vous testez déjà votre bot dans Teams, vous devez signer cette application et la Teams de connexion. Ensuite, connectez-vous à nouveau pour voir cette modification).</br>\n    ![Mise à jour du manifeste](~/assets/images/bots/update-manifest.png)</br>\n\n**Pour configurer Bot Service connexion**\n\n1. Accédez à **configuration pageAdd** >  **OAuth Connection Paramètres**.\n1. Sélectionnez **Ajouter une connexion OAuth Paramètres**.\n1. Dans **nouveau paramètre de connexion**, entrez les détails suivants :\n\n    | Champ | Valeur ou description |\n    | ----- | ----- |\n    | Nom | Entrez le nom de votre nouveau paramètre de connexion. Vous pouvez utiliser le nom dans les paramètres de votre code de service de bot. |\n    | Fournisseur de services | Sélectionnez **Azure Active Directory V2**. |\n    | ID client | Enregistré précédemment en tant **qu’ID d’application Microsoft**. |\n    | Clé secrète client | Enregistré précédemment en tant que **valeur** de l’ID de clé secrète client. |\n    | URL de Exchange de jeton | Utilisez **l’URL d’ID d’application** obtenue précédemment lors de l’exposition du point de terminaison d’API. |\n    | ID client | Entrez **commun**. |\n    | Étendues | Entrez **User.Read** et ajoutez également toutes les **étendues** requises tout en spécifiant des autorisations pour les API en aval. |\n\n    <img src=\"~/assets/images/bots/botserviceconnection.png\" alt=\"Bot Service connection\" width=\"300\"/>\n\n1. Sélectionnez **Enregistrer**.\n1. Sélectionnez **Appliquer**.\n"
- title: Configurer et exécuter votre exemple de bot
  durationInMinutes: 1
  content: >
    Configurez l’exemple de bot pour comprendre comment authentifier le bot conversationnel dans Microsoft Teams.


    **Pour configurer et exécuter votre exemple de bot**


    1. Ouvrez Visual Studio.

    1. Dans Visual Studio, sélectionnez **Cloner un référentiel**.

    1. Dans **l’emplacement du référentiel**, entrez `https://github.com/OfficeDev/Microsoft-Teams-Samples.git`. Veillez à noter le **chemin d’accès** dans lequel le référentiel est cloné.

    1. Sélectionnez **FileOpen** >  >  **Project/Solution**.

    1. Accédez aux **exemples > Microsoft-Teams-Samples > dossier de démarrage rapide bot-conversation-sso-> csharp_dotnetcore**.

    1. Ouvrez le fichier **BotSSOCSharp.csproj** .

    1. Ouvrez le fichier **appsettings.json** .

    1. Mettez à jour la configuration **appsettings.json** pour que le bot utilise le `MicrosoftAppId` .`MicrosoftAppPassword` Utilisez le nom de connexion OAuth comme **nom de connexion**.

        > [!NOTE]
        > Vous pouvez obtenir l’élément `MicrosoftAppId` à partir de la page Configuration du bot. Il `MicrosoftAppPassword` s’agit de la valeur de l’ID de secret client que vous avez enregistré précédemment.

        ![Appsettings json](~/assets/images/bots/appsettingsjson.png)

    1. Sélectionnez la touche **F5** pour exécuter ce projet.

        <br>

        <details>

        <summary><b>Résolution des problèmes</b></summary>

        Si vous obtenez l’erreur **Impossible de trouver le package** , procédez comme suit :

        1.  Accédez à **Outils** >  **NuGet Gestionnaire de package** >  **Gestionnaire de package Paramètres**.
        1.  Dans la fenêtre **Options** qui s’affiche, sélectionnez **NuGet Gestionnaire de package** >  **Package Sources**.
        1.  Sélectionnez **Ajouter**.
        1.  Dans **Nom**, entrez `nuget.org` et dans **Source**, entrez `https://api.nuget.org/v3/index.json`.
        1.  Sélectionnez **Mettre à jour** et **OK**.
        1.  Régénérez votre projet.
        <br>

        </details>
- title: Configurer et exécuter l’application Teams
  durationInMinutes: 2
  content: >
    La méthode la plus complète pour tester votre bot consiste à créer un package d’application et à le charger dans Teams. Cette méthode est la seule façon de tester toutes les fonctionnalités disponibles pour votre bot, dans toutes les étendues. Vous pouvez configurer et exécuter l’application Teams en chargeant le `manifest.zip` fichier.


    **Pour exécuter l’application Teams en chargeant le fichier manifest.zip**


    1. Dans Visual Studio, accédez au `appPackage/` dossier.

    1. Ouvrez le fichier `manifest.json`.

    1. Dans le `manifest.json` fichier, recherchez **{TODO: MicrosoftAppId}** et remplacez-le par votre ID d’application Microsoft.

    1. Dans Windows Explorer, accédez aux **exemples > Teams-Samples microsoft > dossier bot-conversation-sso-quickstart > csharp_dotnetcore > appPackage**.

    1. Compressez le contenu du `appPackage/` dossier à créer `manifest.zip`.

    1. Allez à Teams.

    1. Pour charger`manifest.zip`, sélectionnez **Store > Gérer vos applications > Télécharger une application personnalisée** et ouvrez `manifest.zip`.

    1. Sélectionnez **Ajouter** pour ajouter le bot de conversation à votre conversation.

        Vous pouvez interagir avec ce bot en lui envoyant un message. Le bot échange un jeton d’authentification unique et appelle le API Graph en votre nom et retourne les résultats. Il vous permet de vous connecter, sauf si vous envoyez un message à la **déconnexion**.

    1. Envoyez un message au bot. Le bot de conversation demande des autorisations pour la première fois.

        ![Autorisations sur le bot](~/assets/images/bots/sbsdesktop-mobile-consent-request.png)

    1. Sélectionnez **Continuer** pour accepter les autorisations.


    1. Sélectionnez **Accepter** pour **les autorisations demandées**.

        ![Mobile connecté au bot](~/assets/images/bots/sbs-desktop-mobile.png)
- title: Relever le défi
  durationInMinutes: 1
  content: >
    Tu as trouvé quelque chose comme ça ?


    ![Mobile connecté au bot](~/assets/images/bots/sbs-desktop-mobile.png)
- content: Vous avez terminé le didacticiel pour commencer à utiliser l’authentification unique dans un bot pour Microsoft Teams à l’aide de Bot Framework.
