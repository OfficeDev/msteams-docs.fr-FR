### YamlMime:Tutorial
title: Créer un bot avec l’authentification unique
metadata:
  title: Créer un bot avec l’authentification unique
  description: Dans ce tutoriel, vous allez apprendre à créer un bot avec l’authentification unique.
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/how-to/authentication/auth-aad-sso-bots.md
  nextTutorialTitle: En savoir plus sur l’authentification du bot
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: fcfff8a5fc1f38c4afdb7b6b64e752dc2234512f
  ms.sourcegitcommit: 6926cf5eee55d5047c11ca13afc7f6f23e270396
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 10/27/2022
  ms.locfileid: "68740686"
items:
- durationInMinutes: 1
  content: >
    Les bots Teams sont des bots conversationnels qui exécutent des tâches automatisées répétitives effectuées par les utilisateurs, telles que le service clientèle. L’utilisateur doit se connecter plusieurs fois sans authentification unique (SSO). Avec les méthodes d’authentification unique, les utilisateurs n’ont pas besoin de se connecter plusieurs fois au bot.


    Un bot se comporte différemment selon la conversation dans laquelle il est impliqué :


    * Les bots dans les conversations de conversation de canal et de groupe nécessitent que les utilisateurs @mention le bot.

    * Les bots dans une conversation à deux n’ont pas besoin d’être @mentionnés. Tous les messages envoyés par l’utilisateur acheminent vers le bot.


    Ce guide pas à pas vous aide à créer un bot avec l’authentification unique. Vous verrez la sortie suivante :

     :::image type="content" source="~/assets/images/bots/sbs-desktop-mobile.png" alt-text="Mobile connecté au bot":::
- title: Configuration requise
  durationInMinutes: 1
  content: "Veillez à installer les outils suivants et à configurer votre environnement de développement :  \n\n | &nbsp; | Installer | Pour l’utilisation... |\n | --- | --- | --- |\n | **Obligatoire** | &nbsp; | &nbsp; |\n | &nbsp; | [Microsoft Teams avec un compte (pas un compte invité)](https://www.microsoft.com/microsoft-teams/download-app) |  Microsoft Teams pour collaborer avec toutes les personnes avec lesquelles vous travaillez via des applications pour la conversation, les réunions, les appels et le tout au même endroit. |\n | &nbsp; | [Visual Studio 2022 version 17.3](https://visualstudio.microsoft.com)<br> Installez l’une des deux charges de travail suivantes :<br> • développement ASP.NET et web <br> • Développement multiplateforme .NET Core | Vous pouvez installer la version entreprise dans Visual Studio 2022 et installer les charges de travail. |\n | &nbsp; | [Compte de développeur Microsoft 365](/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) | Accès au compte Teams avec les autorisations appropriées pour installer une application. |\n | &nbsp; | [ngrok](https://ngrok.com/download) | Les fonctionnalités d’application Teams (bots conversationnels, extensions de message et webhooks entrants) nécessitent des connexions entrantes. Un tunnel connecte votre système de développement à Teams. Elle n’est pas obligatoire pour les applications qui incluent uniquement des onglets. Ce package est installé dans le répertoire du projet (à l’aide de npm `devDependencies`). |\n\n  > [!NOTE]\n  > Après avoir téléchargé ngrok, inscrivez-vous et installez [authtoken](https://ngrok.com/download).\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Configurer votre locataire de développement Teams\n\nUn **locataire** est comme un espace ou un conteneur dans lequel vous discutez, partagez des fichiers et exécutez des réunions pour votre organisation dans Teams. Vous pouvez également charger et tester l’application.\n\n### <a name=\"check-for-sideloading-option\"></a>Rechercher l’option de chargement indépendant\n\nAprès avoir créé l’application, vous devez charger votre application dans Teams sans la distribuer. Ce chargement est appelé chargement indépendant. Connectez-vous à votre compte Microsoft 365 pour afficher cette option.\n\n > [!NOTE]\n > Le chargement indépendant est nécessaire pour l’aperçu et le test des applications dans l’environnement local Teams. Activez le chargement indépendant pour afficher un aperçu et tester votre application dans Teams localement.\n\nAvez-vous déjà un locataire et disposez-vous de l’accès administrateur ? Vérifions si vous le faites vraiment !\n\nPour vérifier le chargement indépendant des applications dans Teams :\n\n1. Dans le client Teams, sélectionnez **Applications**.\n1. Sélectionnez **Gérer vos applications** > **Charger une application**.\n1. Recherchez l’option **Charger une application personnalisée**. Si vous voyez l’option , le chargement indépendant des applications est activé.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/upload-custom-app1_1.png\" alt-text=\"Illustration montrant l’option permettant de charger une application personnalisée dans Teams.\":::\n\n    > [!NOTE]\n    > Si vous n’avez pas la possibilité de charger une application personnalisée, contactez l’administrateur Teams.\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Créer un locataire développeur Teams gratuit (facultatif)\n\nSi vous n’avez pas de compte de développeur Teams, vous pouvez l’obtenir gratuitement. Rejoignez le programme des développeurs Microsoft 365 !\n\n1. Accédez au[Programme pour les développeurs Microsoft 365](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Sélectionnez **Rejoindre maintenant** et suivez les instructions à l’écran.\n1. Sélectionnez **Configurer l’abonnement E5** dans l’écran d’accueil.\n1. Configurer un compte d’administrateur. Une fois que vous avez terminé, l’écran suivant s’affiche.\n\n      :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/microsoft-365.png\" alt-text=\"Microsoft\":::\n\n1. Connectez-vous à Teams à l’aide du nouveau compte administrateur. Vous devez maintenant disposer de l’option **Charger une application personnalisée** .\n"
- title: Créer et inscrire votre bot
  durationInMinutes: 5
  content: "Les étapes suivantes vous aident à créer et à inscrire votre bot dans Portail Azure :\n\n1. Créez une ressource Azure Bot pour inscrire le bot auprès d’Azure Bot Service.\n1. Créez une clé secrète client pour activer l’authentification unique du bot.\n1. Ajoutez un canal Teams pour déployer le bot.\n1. Créez un tunnel vers les points de terminaison de votre serveur web à l’aide de ngrok.\n1. Ajoutez un point de terminaison de messagerie au tunnel ngrok que vous avez créé.\n\n**Pour créer une ressource Azure Bot**\n\n1. Accédez au [Portail Azure](https://portal.azure.com/).\n\n1. Sélectionnez **Créer une ressource**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/Createaresource_1.png\" alt-text=\"Créer une ressource\":::\n\n1. Dans la zone de recherche, entrez **Bot Azure**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/searchazurebot_1.png\" alt-text=\"Créer une ressource\":::\n\n1. Ensuite, sélectionnez **Entrée**.\n\n1. Sélectionnez **Azure Bot**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/selectazurebot_1.png\" alt-text=\"Sélectionnez Azure Bot\":::\n\n1. Sélectionnez **Créer**.\n\n    :::image type=\"content\" source=\"./assets/images/bots/azure-bot_1.png\" alt-text=\"Bot Azure.\":::\n\n   La fenêtre **Créer un bot Azure s’affiche** .\n\n    :::image type=\"content\" source=\"~/assets/images/bots/azurebotpage.png\" alt-text=\"Capture d’écran montrant la page du bot Azure.\":::\n\n1. Entrez les informations suivantes pour créer un bot Azure.\n\n    1. Entrez le nom de handle de bot requis dans **Handle de bot**.\n\n    1. Sélectionnez votre **abonnement** et votre **groupe de ressources** dans la liste déroulante.\n\n         :::image type=\"content\" source=\"~/assets/images/bots/Azurebotcreate.png\" alt-text=\"Capture d’écran montrant les détails lors de la création du bot Azure de ressource.\":::\n  \n    1. Pour créer un groupe de ressources, sélectionnez **Créer un nouveau** > entrez le nom de la ressource > **OK**. À présent, sélectionnez l’emplacement requis dans la liste déroulante **Nouvel emplacement du groupe de ressources** .\n    \n         :::image type=\"content\" source=\"~/assets/images/bots/newresource.png\" alt-text=\"Capture d’écran montrant le nouvel emplacement du groupe de ressources\":::\n    \n    1. Sélectionnez **Type d’application** **multilocataire**. \n\n    1. Dans la section **ID d’application Microsoft** , par défaut **, l’option Créer un ID d’application Microsoft** est sélectionnée.\n\n       Vous pouvez également sélectionner **Utiliser l’inscription d’application existante** et entrer **l’ID d’application**, **l’ID de locataire de l’application** et **l’ID de ressource MSI** existants.\n\n         :::image type=\"content\" source=\"~/assets/images/bots/Review-Create_1.png\" alt-text=\"Capture d’écran montrant la sélection de l’option multilocataire. \":::\n\n       > [!NOTE]\n       > Vous ne pouvez pas créer plusieurs bots avec le même **ID d’application Microsoft**.\n\n    1. Sélectionnez **Examiner et créer**.\n\n1. Une fois la validation réussie, sélectionnez **Créer**.\n\n     :::image type=\"content\" source=\"~/assets/images/bots/validationpass_1.png\" alt-text=\"Capture d’écran montrant la passe de validation.\":::\n\n   L’approvisionnement de votre service de bot prend quelques instants.\n\n1. Sélectionnez **Accéder à la ressource**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/gotoresource_1.png\" alt-text=\"Ressource\":::\n\n   Votre bot Azure est créé. Vous pouvez voir les détails **du groupe de ressources** et de **l’ID d’abonnement** dans le bot Azure.\n\n     :::image type=\"content\" source=\"~/assets/images/bots/Azurebotresource_1.png\" alt-text=\"Ressource de bot Azure créée\":::\n\n**Pour créer une clé secrète client**\n\n Pour créer une clé secrète client, procédez comme suit :\n\n1. Dans le volet gauche, sélectionnez **Configuration**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/selectconfigure_1.png\" alt-text=\"Sélectionnez Configurer.\":::\n\n   > [!Tip]\n   > Enregistrez **l’ID d’application Microsoft ou l’ID** **client** pour référence ultérieure.\n\n1. En regard de **Id d’application Microsoft**, sélectionnez **Gérer**.\n\n   :::image type=\"content\" source=\"~/assets/images/manage-bot-label_1.png\" alt-text=\"gérer le bot\":::\n\n1. Dans la section **Clés secrètes client** , sélectionnez **Nouvelle clé secrète client**.\n\n      :::image type=\"content\" source=\"~/assets/images/bots/newclientsecret_2.png\" alt-text=\"Capture d’écran montrant la sélection d’une nouvelle clé secrète client.\":::\n\n   La fenêtre **Ajouter une clé secrète client** s’affiche.\n\n1. Entrez **Description**.\n\n1. Sélectionnez **Ajouter**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/addclientsecret_1.png\" alt-text=\"Capture d’écran montrant l’ajout d’une clé secrète client à l’application.\":::\n\n1. Dans la colonne **Valeur** , sélectionnez l’icône Copier dans le Presse-papiers pour copier les détails de la valeur. \n\n    :::image type=\"content\" source=\"~/assets/images/bots/valueclientsecret.png\" alt-text=\"Capture d’écran montrant la valeur de la clé secrète client copiée dans le Presse-papiers.\":::\n\n   > [!Tip]\n   > Enregistrez la valeur **Des secrets client** ou le mot de passe de l’application pour référence ultérieure.\n   \n**Ajouter un bot au canal Teams**\n\n1. Sélectionnez **Accueil**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/selecthome_1.png\" alt-text=\"Page d’accueil\":::\n\n1. Sélectionnez votre bot dans **Ressources récentes**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/select-recent-resources_1.png\" alt-text=\"Sélectionner les ressources récentes\":::\n\n1. Sélectionnez **Canaux** dans le volet gauche. \n\n    :::image type=\"content\" source=\"~/assets/images/bots/selectchannel_1.png\" alt-text=\"Sélectionner récent\":::\n\n1. Sélectionner **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>. \n\n    :::image type=\"content\" source=\"~/assets/images/bots/select-microsoft-teams_1.png\" alt-text=\"Sélectionner Microsoft Teams\":::\n\n1. Cochez la case pour accepter les **conditions d’utilisation du service**.\n\n1. Sélectionnez **Accepter**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/Terms-of-service_1.png\" alt-text=\"Termes\":::\n\n1. Sélectionnez **Appliquer**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/apply_1.png\" alt-text=\"Capture d’écran montrant l’option apply\":::\n\n**Pour créer un tunnel pour le serveur web local**\n\nUtilisez ngrok pour créer un tunnel vers les points de terminaison HTTPS de votre serveur web en cours d’exécution localement. Exécutez la commande suivante dans ngrok :\n\n   ```bash\n   ngrok http --host-header=localhost 3978\n   ```\n   > [!TIP]\n   > Si vous rencontrez **ERR_NGROK_4018**, suivez les étapes indiquées dans l’invite de commandes pour vous inscrire et authentifier ngrok. Exécutez ensuite la commande `ngrok http --host-header=localhost 3978`.\n\n**Pour ajouter un point de terminaison de messagerie**\n\n1. À partir de ngrok, copiez l’URL HTTPS.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/ngrok-url1_1.png\" alt-text=\"URL HTTPS ngrok\":::\n\n    > [!NOTE]\n    > L’URL HTTPS dans votre ngrok est votre nom de domaine complet.\n    > est `WebAppDomain` un nom de domaine complet qui n’est pas inclus `https://` dans celui-ci.\n\n1. Retour au Portail Azure.\n\n1. Dans **Paramètres** du bot Azure que vous avez créé, sélectionnez **Configuration**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/select-configuration_1.png\" alt-text=\"Sélectionnez Configuration\":::\n\n1. Dans **Point de terminaison de messagerie**, utilisez l’URL HTTPS disponible à partir de ngrok et à la fin de l’URL, ajoutez **/api/messages**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/messagingURL_2.png\" alt-text=\"Point de terminaison de messagerie\":::\n\n1. Sélectionnez **Appliquer**.\n\n    Vous avez correctement configuré un bot dans Azure Bot Service.\n"
- title: Configurer l’authentification unique pour votre bot
  durationInMinutes: 5
  content: "**Pour ajouter l’URI de redirection à la ressource de bot Azure**\n\n1. Sélectionnez **Accueil** > **Azure Active Directory**.\n\n1. Dans le volet gauche, sélectionnez **inscriptions d'applications**.\n\n1. Sélectionnez votre bot.\n\n1. Dans le volet gauche, sélectionnez **Authentification** pour définir un URI de redirection.\n\n     :::image type=\"content\" source=\"~/assets/images/bots/select-authentication_1.png\" alt-text=\"Sélectionnez Authentification\":::\n\n1. Dans **Configurations de** plateforme, sélectionnez **Ajouter une plateforme** pour choisir la plateforme sur laquelle vous souhaitez héberger l’application bot. \n\n1. Pour ce didacticiel, sélectionnez **Web**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/select-web_1.png\" alt-text=\"Capture d’écran montrant la sélection du site web.\":::\n    \n1. Entrez **URI de redirection** comme `https://token.botframework.com/.auth/web/redirect` et cet URI sur lequel Azure AD enverra la réponse pour l’authentification utilisateur.\n\n1. Activez **l’octroi implicite et les flux hybrides** en cochant les cases suivantes :\n\n    * **Jetons d’ID**\n    * **Jetons d’accès**\n\n1. Sélectionnez **Configurer**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/select-implict-grant_1.png\" alt-text=\"Capture d’écran montrant la sélection de configurer.\":::\n\n    L’URI de redirection est ajouté à la ressource de bot Azure.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/redirectURIadded.png\" alt-text=\"Capture d’écran montrant l’URI de redirection ajouté à la ressource de bot.\":::\n\n**Pour exposer le point de terminaison d’API**\n\n1. Dans le volet gauche, sélectionnez **Exposer une API**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/expose-an-api_1.png\" alt-text=\"Exposer une API\":::\n\n1. Sélectionnez **Définir**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/appidURI.png\" alt-text=\"Capture d’écran montrant l’option set.\":::\n\n1. Définissez l’URI de l’ID d’application sous la forme .`api://botid-{your AppID}`\n\n1. Sélectionnez **Enregistrer**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/exposeAPI_1.png\" alt-text=\"Capture d’écran montrant l’option d’enregistrement.\":::\n\n   > [!NOTE]\n   > Si vous utilisez un service de tunneling tel que ngrok, veillez à mettre à jour la valeur chaque fois que votre sous-domaine ngrok change.\n   > Par exemple : `api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`, où `f631****.ngrok.io` est le nouveau nom de sous-domaine ngrok.\n\n1. Sélectionnez **Ajouter une étendue**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/Addascope_1.png\" alt-text=\"Capture d’écran montrant l’ajout d’une étendue.\":::\n\n   La fenêtre **Ajouter une étendue** s’affiche.\n\n1. Entrez les détails pour configurer l’étendue.    \n\n      1. Entrez `access_as_user` comme **nom de l’étendue**.\n\n         > [!NOTE]\n         > Le **nom de l’étendue** doit correspondre à l’URI **d’ID d’application** avec `/access_as_user` ajouté à la fin.\n\n      1. Définissez **Qui peut donner votre consentement ?** sur `Admins and users`.\n\n      1. Pour configurer les invites de consentement de l’administrateur et de l’utilisateur avec les valeurs appropriées pour `access_as_user` l’étendue, fournissez les informations suivantes dans les champs :</br>\n\n          * Entrez `Teams can access the user’s profile` **comme nom d’affichage Administration consentement**.\n\n          * Entrez `Allows Teams to call the app’s web APIs as the current user` **comme Administration description du consentement**.\n\n          * Entrez `Teams can access the user profile and make requests on the user’s behalf` en tant que **Nom d’affichage du consentement de l’utilisateur**.\n\n          * Entrez `Enable Teams to call this app’s APIs with the same rights as you have` la **description du consentement de l’utilisateur**.\n\n      1. Vérifiez que **State** est défini comme **Enabled**.\n\n      1. Sélectionnez **Ajouter une étendue** à enregistrer.\n\n     :::image type=\"content\" source=\"~/assets/images/bots/addscope.png\" alt-text=\"Capture d’écran montrant la configuration de l’étendue.\":::\n\n   Votre URI d’ID d’application est créé avec **le nom de l’étendue**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/ExposeAPI_2.png\" alt-text=\"Capture d’écran montrant l’API exposée et l’étendue ajoutée.\":::\n\n1. Dans la section **Applications clientes autorisées**, identifiez les applications que vous souhaitez autoriser pour l'application Web de votre application.\n\n1. Sélectionnez **Ajouter une application cliente**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/addaclientapplication.png\" alt-text=\"Capture d’écran montrant l’ajout d’une application cliente.\":::\n\n   La fenêtre **Ajouter une application cliente s’affiche** .\n\n1. Entrez séparément l’ID client pour le bureau et l’application web que vous souhaitez autoriser. Il s’agit de l’ID d’application de l’application cliente que vous souhaitez autoriser.\n   \n   |**ID du client**|**Pour l’autorisation**|\n   |--------|-------------|\n   | `1fec8e78-bce4-4aaf-ab1b-5451cc387264` | Application de bureau ou mobile Teams |\n   | `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` | Application Teams web |\n\n1. Sélectionnez **Étendues autorisées** pour déterminer le type de jeton retourné par le service.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/add-desktop-app.png\" alt-text=\"Capture d’écran montrant la sélection des étendues autorisées.\":::\n   \n1. Sélectionnez **Ajouter une application**.\n\n    L’image suivante affiche l’ID client :\n\n      :::image type=\"content\" source=\"~/assets/images/bots/clientapps.png\" alt-text=\"Capture d’écran montrant l’ajout de l’ID client.\":::\n\n**Configurer les autorisations Graph**\n\n1. Dans le volet gauche, sélectionnez **Autorisations d’API**.\n\n      :::image type=\"content\" source=\"~/assets/images/bots/select-api-permissions_1.png\" alt-text=\"Sélectionner des autorisations d’API\":::\n\n   > [!NOTE]\n   > Les utilisateurs doivent donner leur consentement aux autorisations d’API uniquement si l’application de bot est inscrite dans un autre locataire.\n\n1. Sélectionnez **Ajouter une autorisation**.\n\n   La fenêtre **Demander l’autorisation de l’API** s’affiche.\n\n1. Sélectionnez **Microsoft Graph**.\n    \n    :::image type=\"content\" source=\"~/assets/images/bots/select-microsoft-graph_2.png\" alt-text=\"Capture d’écran montrant la sélection de Microsoft Graph.\":::\n\n1. Sélectionnez **Autorisations déléguées**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/select-graph-permissions.png\" alt-text=\"Capture d’écran montrant la sélection des autorisations déléguées.\":::\n\n1. Sélectionnez **Autorisation User.Read** dans la liste déroulante **Utilisateur** .\n\n1. Sélectionnez **Ajouter des autorisations**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/userread.png\" alt-text=\"Capture d’écran montrant la sélection de Lecture par l’utilisateur.\":::\n\n**Pour mettre à jour le manifeste**\n\n1. Dans le volet gauche, sélectionnez **Manifeste**.\n\n     :::image type=\"content\" source=\"~/assets/images/bots/select-manifest_1.png\" alt-text=\"Sélectionnez un manifeste.\":::\n\n1. Vérifiez que l’élément de configuration est défini sur **« accessTokenAcceptedVersion » : 2**. Si ce n’est pas le cas, remplacez sa valeur par **2** , puis sélectionnez **Enregistrer**.\n\n   > [!NOTE]\n   > Si vous testez déjà votre bot dans Teams, vous devez vous déconnecter de cette application et de Teams. Ensuite, reconnectez-vous pour voir cette modification.</br>\n    \n      :::image type=\"content\" source=\"~/assets/images/bots/update-manifest.png\" alt-text=\"Capture d’écran montrant la mise à jour du manifeste.\":::\n\n**Pour configurer la connexion bot service**\n\n1. Dans **la page Configuration**, sélectionnez **Ajouter des paramètres de connexion OAuth**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/select-configuration_2.png\" alt-text=\"Sélectionner configuration1\":::\n\n   La fenêtre **Nouveau paramètre de connexion** s’affiche.\n\n     \n\n1. Dans **Nouveau paramètre de connexion**, entrez les informations suivantes :\n\n    | Champ | Valeur ou description |\n    | ----- | ----- |\n    | Nom | Entrez le nom de votre nouveau paramètre de connexion. Vous pouvez utiliser le nom dans les paramètres de votre code de service bot. |\n    | Fournisseur de services | Sélectionnez **Azure Active Directory V2**. |\n    | ID du client | Enregistré précédemment en tant **qu’ID d’application Microsoft**. |\n    | Clé secrète client | Enregistré précédemment en tant que **Valeur** de l’ID de clé secrète client. |\n    | URL d’échange de jetons | Utilisez **l’URL d’ID d’application** obtenue précédemment lors de l’exposition du point de terminaison d’API. |\n    | ID client | Entrez **common**. |\n    | Étendues | Entrez **User.Read** et ajoutez également toutes les **étendues requises** tout en spécifiant les autorisations pour les API en aval. |\n\n    :::image type=\"content\" source=\"~/assets/images/bots/botserviceconnection.png\" alt-text=\"Capture d’écran montrant la connexion au service de bot.\":::\n\n1. Sélectionnez **Enregistrer**.\n\n   Vous avez maintenant configuré l’authentification unique pour votre bot.\n"
- title: Configurer et exécuter votre exemple de bot
  durationInMinutes: 1
  content: "1. Ouvrez **Visual Studio**.\n\n1. Sélectionnez **Cloner un dépôt**.\n\n1. Dans **l’emplacement du dépôt**, entrez `https://github.com/OfficeDev/Microsoft-Teams-Samples.git`. Veillez à noter le **chemin d’accès** où le dépôt est cloné.\n\n1. Accédez à **Fichier** > **Ouvrir le** > **projet/la solution**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/project-solution_1.png\" alt-text=\"Capture d’écran montrant la navigation vers le projet/la solution.\":::\n\n1. Sélectionnez **le fichier BotSSOCSharp.csproj** **dans csharp_dotnetcore** dossier.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/filepath_1.png\" alt-text=\"Capture d’écran montrant le chemin du dossier.\":::\n\n1. Ouvrez le fichier **appsettings.json** .\n\n1. Mettez à jour la configuration **appsettings.json** pour que le bot utilise et `MicrosoftAppId` `MicrosoftAppPassword`. Utilisez le nom de connexion OAuth comme **nom de connexion**.\n\n    > [!NOTE]\n    > Vous pouvez obtenir le à `MicrosoftAppId` partir de la page Configuration du bot. est `MicrosoftAppPassword` la valeur de l’ID de clé secrète client que vous avez enregistrée précédemment dans Azure.\n\n     :::image type=\"content\" source=\"~/assets/images/bots/appsettingsjson.png\" alt-text=\"Sceenshot montrant l’option json appsettings.\"lightbox=\"~/assets/images/bots/appsettingsjson.png\":::\n\n1. Sélectionnez **F5**  pour exécuter le projet.\n\n1. Sélectionnez **Oui** si la boîte de dialogue suivante s’affiche :\n\n    :::image type=\"content\" source=\"~/assets/images/bots/certificate.png\" alt-text=\"Capture d’écran montrant comment sélectionner l’option Oui lorsque la boîte de dialogue s’affiche.\":::\n\n   Une page web s’ouvre avec un message **Bot is Ready**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/yourbot.png\" alt-text=\"Capture d’écran montrant la page web indiquant que le bot est prêt.\":::\n    \n    <br>\n\n    <details>\n\n    <summary><b>Résolution des problèmes</b></summary>\n\n    Si vous obtenez l’erreur **de package Impossible de trouver** , procédez comme suit :\n\n    1.  Accédez à **Outils Paramètres** >  du **Gestionnaire** >  de **package NuGet**.\n    1.  Dans la fenêtre **Options** qui s’affiche, sélectionnez **Sources de package** **du Gestionnaire** >  de package NuGet.\n    1.  Sélectionnez **Ajouter**.\n    1.  Dans **Nom**, entrez `nuget.org` et dans **Source**, entrez `https://api.nuget.org/v3/index.json`.\n    1.  Sélectionnez **Mettre à jour** et **OK**.\n    1.  Régénérez votre projet.\n    <br>\n\n    </details>\n"
- title: Configurer et exécuter l’application Teams
  durationInMinutes: 2
  content: "1. Dans Visual Studio, ouvrez le dossier **appPackage** .\n\n1. Ouvrez le fichier **manifest.json** .\n\n1. Remplacez toutes les occurrences de **{TODO : MicrosoftAppId}** par l’ID d’application **Microsoft** de votre bot.\n\n1. Dans votre dépôt cloné, accédez à **bot-conversation-sso-quickstart > csharp_dotnetcore > dossier appPackage** .\n\n1. Créez un .zip avec les fichiers suivants présents dans le dossier **Manifeste** : \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n    :::image type=\"content\" source=\"~/assets/images/bots/manifest_1.png\" alt-text=\"Capture d’écran montrant comment compresser un dossier manifeste\":::\n\n1. Accédez au client Teams.\n1. Sélectionnez **Store**.\n1. Sélectionnez **Gérer vos applications**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/manage-apps_3.png\" alt-text=\"Capture d’écran montrant la sélection de gérer votre application.\":::\n\n1. Sélectionnez **Charger une application personnalisée**.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/upload-custom-app.png\" alt-text=\"Capture d’écran montrant le chargement de l’application personnalisée.\":::\n\n1. Sélectionnez **Ouvrir** pour charger le fichier .zip que vous avez créé dans le dossier **Manifeste** .\n\n    :::image type=\"content\" source=\"~/assets/images/bots/open-app.png\" alt-text=\"Ouvrir l’application\":::\n\n1. Sélectionnez **Ajouter** pour ajouter le bot de conversation à votre conversation.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/add-conversation-bot_1.png\" alt-text=\"Capture d’écran montrant l’option Ajouter un bot de conversation.\":::\n\n    Vous pouvez interagir avec le bot en lui envoyant un message. Le bot échange un jeton d’authentification unique et appelle le API Graph en votre nom. Il vous maintient connecté, sauf si vous envoyez un message pour vous **déconnecter**.\n\n1. Envoyez un message au bot. Le bot de conversation demande le consentement pour la première fois.\n\n1. Sélectionnez **Continuer** pour accorder des autorisations au client Teams pour accéder au bot.\n\n     :::image type=\"content\" source=\"~/assets/images/bots/sbsdesktop-mobile-consent-request1.png\" alt-text=\"Capture d’écran montrant la sélection d’accorder des autorisations au bot\":::\n    \n    > [!NOTE]\n    > Vous avez maintenant configuré l’authentification unique avec votre application de bot et c’est la seule fois que vous devez donner votre consentement.\n\n1. Pour appareil mobile, sélectionnez **Accepter** pour **Autorisations demandées**.\n\n    > [!NOTE]\n    > Vous avez maintenant configuré l’authentification unique avec votre application de bot sur mobile, et c’est la seule fois que vous devrez donner votre consentement.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/sbsdesktop-mobile-consent-request.png\" alt-text=\"Capture d’écran montrant le mobile connecté au bot.\":::\n"
- title: Relever le défi
  durationInMinutes: 1
  content: >
    Tu as trouvé quelque chose comme ça ?

     :::image type="content" source="~/assets/images/bots/sbs-desktop-mobile.png" alt-text="Capture d’écran montrant la sortie finale.":::
- content: Vous avez terminé le tutoriel pour commencer à créer un bot avec l’authentification unique.
