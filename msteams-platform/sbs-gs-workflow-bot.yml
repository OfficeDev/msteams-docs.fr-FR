### YamlMime:Tutorial
title: Créer un bot de flux de travail Teams
metadata:
  title: Créer un bot de flux de travail Teams
  description: Avec ce module d’apprentissage, vous allez apprendre à créer un bot de flux de travail dans Microsoft Teams avec la fonctionnalité gestionnaire d’actions de carte adaptative.
  audience: Developer
  level: Beginner
  ms.date: 28/09/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: toolkit/add-capability.md
  nextTutorialTitle: Ajouter des fonctionnalités aux applications Teams
  ms.custom: mvc
  ms.localizationpriority: none
  ms.openlocfilehash: 39ffa9600836fe58f243140c8a5379006df339eb
  ms.sourcegitcommit: 6926cf5eee55d5047c11ca13afc7f6f23e270396
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 10/27/2022
  ms.locfileid: "68740971"
items:
- durationInMinutes: 1
  content: >
    Le bot de flux de travail permet aux utilisateurs d’interagir avec une carte adaptative activée par la fonctionnalité gestionnaire d’actions de carte adaptative dans l’application bot de flux de travail. Lorsque vous répondez à l’action de carte adaptative déclenchée, un workflow séquentiel est terminé.

    Lorsque vous obtenez une carte adaptative, elle fournit un ou plusieurs boutons dans la carte pour votre entrée. Vous pouvez également appeler une API, puis envoyer une autre carte adaptative dans votre conversation en réponse à l’action de carte.

    Dans ce tutoriel, vous allez apprendre à :
      * Comment créer un bot de flux de travail avec Teams Toolkit.
      * À propos de la structure de répertoires de votre application.
      * Personnalisez l’installation de votre bot avec la réponse de carte adaptative.

    Vous pouvez voir la sortie suivante :


    :::image type="content" source="./assets/images/sbs-workflow-bot/sbs-workflow-bot-final-output.png" alt-text="Sortie du bot de flux de travail.":::
- title: Configuration requise
  durationInMinutes: 1
  content: "Voici une liste des outils dont vous avez besoin pour créer et déployer vos applications.\n\n| &nbsp; | Installer | Pour utiliser |\n| --- | --- | --- |\n| **Obligatoire** | &nbsp; | &nbsp; |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | JavaScript ou TypeScript, environnements de build. Utilisez la dernière version. |\n| &nbsp; | [Toolkit Teams](#install-the-teams-toolkit) | Extension Microsoft Visual Studio Code qui crée une structure de projet pour votre application. Utilisez la version 4.0.0.|\n| &nbsp; | [Node.js](https://nodejs.org/en/download/) | Environnement runtime JavaScript principal. Utilisez la version 14 ou 16.|\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams pour collaborer avec toutes les personnes avec lesquelles vous travaillez via des applications pour la conversation, les réunions, les appels et le tout au même endroit.|\n| &nbsp; | [Microsoft&nbsp; Edge](https://www.microsoft.com/edge) (recommandé) ou [Google Chrome](https://www.google.com/chrome/) | Un navigateur avec des outils de développement. |\n| &nbsp; | [Compte de développeur Microsoft 365](/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) | Accès au compte Teams avec les autorisations appropriées pour installer une application. |\n> [!NOTE]\n> Le guide est testé sur Teams Toolkit version 4.0.0 et Nodejs version 14 et 16. Les étapes décrites dans ce guide peuvent fonctionner avec d’autres versions, mais elles n’ont pas été testées.\n\n## <a name=\"prepare-development-environment\"></a>Préparer l’environnement de développement\nUne fois que vous avez installé les outils requis, configurez l’environnement de développement.\n\n### <a name=\"install-the-teams-toolkit\"></a>Installer le kit de ressources Teams\nLe Kit de ressources Teams permet de simplifier le processus de développement avec des outils permettant de provisionner et de déployer des ressources cloud pour votre application, de publier dans le magasin Teams, etc. \n\nVous pouvez utiliser le kit de ressources avec Visual Studio Code ou l’interface CLI (interface de ligne de commande) appelée `TeamsFx`.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Ouvrez Visual Studio Code et sélectionnez **Extensions** (**Ctrl+Maj+X** / **⌘⇧-X** ou **Afficher les extensions >**).\n1. Dans la zone de recherche, entrez **Teams Toolkit**.\n1. Sélectionnez **Installer** en regard du Kit de ressources Teams.\n   :::image type=\"content\" source=\"~/assets/images/sbs-command-bot/teams-toolkit.png\" alt-text=\"Illustration montrant l’installation de l’extension Teams Toolkit.\":::\n\nL’illustration du Kit de ressources Teams :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/hw-teams-toolkit-sidebar-icon.png\" alt-text=\"montre l’icône du Kit de ressources Teams dans la barre latérale de Visual Studio Code.\"::: s’affiche dans la barre latérale de Visual Studio Code après son installation.\n    \nVous trouverez également le Kit de ressources Teams sur la [Place de marché Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=TeamsDevApp.ms-teams-vscode-extension).\n\n# <a name=\"command-line\"></a>[Ligne de commande](#tab/cli)\nPour installer l’interface CLI TeamsFx, utilisez le gestionnaire de `npm` package :\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\nSelon votre configuration, vous devrez peut-être utiliser `sudo` pour installer l’interface CLI :\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\nIl est plus courant sur les systèmes Linux et macOS.\nVeillez à ajouter le cache global npm à votre chemin d’accès. Cette étape est normalement effectuée dans le cadre du programme d’installation Node.js.  \nVous pouvez utiliser l’interface CLI avec la `teamsfx` commande . Vérifiez que la commande fonctionne en exécutant `teamsfx -h`.\n\n> [!NOTE]\n> Avant d’exécuter TeamsFx dans les terminaux PowerShell, veillez à activer la stratégie d’exécution **signée à distance** pour PowerShell.\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Configurer votre locataire de développement Teams\nUn **locataire** est comme un espace ou un conteneur dans lequel vous discutez, partagez des fichiers et exécutez des réunions pour votre organisation dans Teams. Vous pouvez également charger et tester votre application.\n### <a name=\"check-for-sideloading-option\"></a>Rechercher l’option de chargement indépendant\nAprès avoir créé l’application, vous devez charger votre application dans Teams sans la distribuer. C’est ce que l’on appelle le chargement indépendant. Connectez-vous à votre compte Microsoft 365 pour afficher cette option.\n> [!NOTE]\n> Le chargement indépendant est nécessaire pour l’aperçu et le test des applications dans l’environnement local Teams. Activez le chargement indépendant pour afficher un aperçu et tester votre application dans Teams localement.\n\nAvez-vous déjà un locataire et disposez-vous de l’accès administrateur ? Vérifions si vous le faites vraiment !\nPour vérifier le chargement indépendant des applications dans Teams :\n1. Dans le client Teams, sélectionnez **Stocker** .\n1. Sélectionnez **Gérer vos applications**.\n1. Sélectionnez **Publier une application**.\n1. Recherchez l’option **Charger une application personnalisée**. Si vous voyez l’option , le chargement indépendant des applications est activé.\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"Illustration montrant l’option permettant de charger une application personnalisée dans Teams.\":::\n    > [!NOTE]\n    > Si vous n’avez pas la possibilité de charger une application personnalisée, contactez l’administrateur Teams.\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Créer un locataire développeur Teams gratuit (facultatif)\nSi vous n’avez pas de compte de développeur Teams, vous pouvez l’obtenir gratuitement. Rejoignez le programme des développeurs Microsoft 365 !\n1. Accédez au[Programme pour les développeurs Microsoft 365](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Sélectionnez **Rejoindre maintenant** et suivez les instructions à l’écran.\n1. Sélectionnez **Configurer l’abonnement E5** dans l’écran d’accueil.\n1. Configurer un compte d’administrateur. Une fois que vous avez terminé, l’écran suivant s’affiche.\n   :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/microsoft-365.png\" alt-text=\"Microsoft\":::\n1. Connectez-vous à Teams à l’aide du nouveau compte administrateur. Vous devez maintenant disposer de l’option **Charger une application personnalisée** .\n"
- title: Créer un bot de flux de travail
  durationInMinutes: 5
  content: "Pour générer un bot de flux de travail à l’aide de Visual Studio Code, procédez comme suit :\n1. Ouvrez Visual Studio Code.\n1. Sélectionnez l’icône **Teams Toolkit** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: dans la barre latérale de Visual Studio Code.\n1. Sélectionnez **Créer une application Teams** .\n  \n    :::image type=\"content\" source=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-create.png\" alt-text=\"créez une application Teams dans le volet latéral.\":::\n\n1. Sélectionnez **l’option Créer une application Teams** pour créer une application à l’aide du Kit de ressources Teams.\n\n    :::image type=\"content\" source=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-teams-app.png\" alt-text=\" sélectionnez l’option Créer une application Teams.\":::\n\n1. Sous **Applications Teams basées sur un scénario**, sélectionnez **Bot de flux de travail** comme fonctionnalité que vous souhaitez créer dans votre application.\n\n    :::image type=\"content\" source=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-capabilities-workflow.png\" alt-text=\" sélectionner l’option Bot de flux de travail pour les fonctionnalités\" lightbox=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-capabilities-workflow.png\":::\n\n1. Sélectionnez **TypeScript** comme langage de programmation.\n\n    :::image type=\"content\" source=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-program-lang.png\" alt-text=\" sélectionner un script de type d’option pour le langage de programmation\":::\n\n1. Sélectionnez **Dossier par défaut** pour stocker le dossier racine de votre projet à l’emplacement par défaut.\n  \n    > [!NOTE]\n    > Vous pouvez également modifier l’emplacement par défaut en sélectionnant **Parcourir...**\n    \n    :::image type=\"content\" source=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-workspace-folder.png\" alt-text=\" sélectionner pour ajouter un dossier d’espace de travail\":::\n   \n1. Entrez un nom approprié pour votre application, tel que bot de workflow comme nom d’application.\n    > [!NOTE]\n    > Veillez à utiliser uniquement des caractères alphanumériques dans le nom de l’application.\n    \n    :::image type=\"content\" source=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-app-name.png\" alt-text=\"entrez le nom de l’application\":::\n\n1. Ensuite, sélectionnez **Entrée**.\n    \n1. Le bot de workflow est créé en quelques secondes, et vous pouvez voir la structure.\n    \n    :::image type=\"content\" source=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-scaffolding1.png\" alt-text=\"votre application est créée avec la structure visible dans le panneau latéral\":::\n\n1. Sélectionnez **l’icône Exécuter et déboguer** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/run-debug-icon.png\"::: dans la barre latérale de Visual Studio Code.\n\n1. Sélectionnez **Déboguer (Edge)** ou **Déboguer (Chrome)** dans la liste déroulante.\n\n   :::image type=\"content\" source=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-local-debug1.png\" alt-text=\"votre application est créée avec la structure visible dans le panneau latéral\":::    \n\n1. Sélectionnez **Démarrer le débogage**.\n\n1. Sélectionnez **Ajouter**.\n    :::image type=\"content\" source=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-add-app.png\" alt-text=\"sélectionnez Ajouter pour ajouter votre application bot de workflow\":::\n### <a name=\"take-tour-of-source-code\"></a>Découvrez le code source\nTeams Toolkit fournit des composants pour la création d’une application. Après avoir créé le projet, vous pouvez afficher les dossiers et fichiers du projet dans la zone Explorateur de Visual Studio Code pour JavaScript/TypeScript. \n\n:::image type=\"content\" source=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-scaffolding2.png\" alt-text=\"sélectionnez Ajouter pour ajouter votre application bot de workflow\":::\n\n\nLe bot créé est un projet TeamsFx normal qui contient les dossiers suivants :\n\n| Folder | Contenu |\n|   ---  |   ---   |\n|`.fx`   | Paramètres, configurations et informations d’environnement au niveau du projet.|\n|`.vscode`| Fichiers Visual Studio Code pour le débogage local |\n|`bot`   | Code source de l’application Teams de bot de flux de travail.|\n|`templates`| Modèles pour le manifeste de l’application Teams et pour l’approvisionnement des ressources Azure.|\n\nL’implémentation principale du bot Teams se trouve dans le `bot/` dossier . Les fichiers suivants sous `bot/` le dossier fournissent la logique métier du bot de workflow.\nCes fichiers peuvent être mis à jour pour répondre aux besoins de votre logique métier. L’implémentation par défaut fournit un point de départ pour vous aider à démarrer :\n\n| Folder | Contenu |\n|   ---  |   ---   |\n|`src/index.js(ts)` | Point d’entrée d’application et `restify` gestionnaires pour le bot de workflow.|\n|`src/adaptiveCards/helloworldCommand.json` | Carte adaptative générée qui est envoyée à Teams. |\n|`src/commands/helloworldCommandHandler.js(ts)` | Répond au message de commande.|\n|`src/cardActions/doStuffActionHandler.js(ts)` | Répond à l’action de carte `doStuff` .|\n|`src/cardModels.js(ts)` | Modèle de données de carte adaptative par défaut.|\n\nLe fichier suivant implémente le bot de workflow principal sur Bot Framework. En règle générale, vous n’avez pas besoin de personnaliser ce fichier :\n\n| Fichier/dossier | Contenu |\n|   ---  |   ---   |\n| `src/internal/initialize.js(ts)`| Initialisation d’application et gestion des messages de bot.|\n\nLes fichiers suivants sont des fichiers liés au projet, vous n’avez généralement pas besoin de personnaliser ces fichiers :\n\n| Fichier/dossier | Contenu |\n|   ---  |   ---   |\n| `.gitignore` | Fichier d’ignorer Git|\n| `package.json` | Fichier de package NPM|\n"
- title: Interaction avec le bot de workflow
  durationInMinutes: 2
  content: "Vous pouvez interagir avec le bot dans Teams en envoyant une commande helloWorld. Après avoir exécuté ce modèle, vous obtenez une réponse, puis sélectionnez le **bot de workflow** et **Entrée**.\n :::image type=\"content\" source=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-action-response.png\" alt-text=\"sélectionnez Ajouter pour ajouter votre application bot de workflow\":::\n\nVous recevez la réponse de commande suivante dans carte adaptative : :::image type=\"content\" source=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-debug-output1.png\" alt-text=\"sélectionnez Ajouter pour ajouter votre application bot de workflow\":::.\n\nVous pouvez ensuite sélectionner le bouton **DoStuff** pour appeler l’action, qui répond avec la carte adaptative mise à jour suivante : :::image type=\"content\" source=\"./assets/images/sbs-workflow-bot/sbs-workflow-bot-debug-output2.png\" alt-text=\"sélectionnez Ajouter pour ajouter votre application bot de workflow\":::\n   \n"
- title: Relever le défi
  durationInMinutes: 1
  content: >
    Tu as trouvé quelque chose comme ça ?


    :::image type="content" source="./assets/images/sbs-workflow-bot/sbs-workflow-bot-debug-output2.png" alt-text="sélectionnez Ajouter pour ajouter votre application bot de workflow":::
- content: Vous avez terminé le tutoriel pour commencer à utiliser le bot de flux de travail pour Microsoft Teams.
