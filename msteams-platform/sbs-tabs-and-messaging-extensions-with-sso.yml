### YamlMime:Tutorial
title: AAD SSO pour les onglets et l’extension de messagerie
metadata:
  title: AAD SSO pour les onglets et l’extension de messagerie
  description: Dans ce didacticiel, vous allez apprendre à configurer AAD ssO pour les onglets.
  audience: Developer
  level: Beginner
  ms.date: 12/07/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: tabs/how-to/authentication/auth-aad-sso.md
  nextTutorialTitle: En savoir plus sur l’authentification sso pour les onglets.
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 9cfcfcfcd38f7bcbf9c6e2db6a7e7a6263a29279
  ms.sourcegitcommit: b9af51e24c9befcf46945400789e750c34723e56
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 02/15/2022
  ms.locfileid: "62821471"
items:
- durationInMinutes: 1
  content: "L Azure Active Directory l’authentification unique (AAD SSO) permet d’authentifier les utilisateurs dans Teams. \n\n**Aspects clés du guide pas à pas de l AAD ssO pour les onglets et les extensions de messagerie**\n\n * Après la première connectez-vous, AAD L’sO permet à l’utilisateur de se connecter automatiquement.\n * Permet à l’utilisateur de se connecter à d’autres appareils sans entrer de nouveau les informations d’identification de connexion.\n * Obtient le jeton de l’utilisateur connecté.   \n\nCe guide pas à pas vous aide à créer des onglets et des extensions de messagerie pour activer AAD’authentification sso. Vous verrez le résultat suivant :\n\n  ![Image de félicitations](~/assets/images/Tab-ME-SSO/hello-megan-profile245.png)   \n"
- title: Prerequisites
  durationInMinutes: 1
  content: "Veillez à installer les outils suivants et à configurer votre environnement de développement :  \n\n* Microsoft Teams avec un compte (et non un compte invité)\n* [.NET Core SDK](https://dotnet.microsoft.com/download) version 3.1\n* [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)\n* [ngrok](https://ngrok.com/download) dernière version (uniquement pour le test de la boîte de développement) ou toute solution de tunneling équivalente\n* [Microsoft 365 de développeur ou](https://docs.microsoft.com/en-us/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) l’accès Teams un compte avec les autorisations appropriées pour installer une application\n"
- title: Configurer l’environnement local
  durationInMinutes: 1
  content: "Clonez `Microsoft-Teams-Samples` le référentiel dans votre GitHub :  \n\n 1. Ouvrez [Microsoft Teams exemples](https://github.com/OfficeDev/Microsoft-Teams-Samples).\n 1. **Sélectionnez Code**.\n 1. Dans le menu déroulant, sélectionnez **Ouvrir avec GitHub Bureau**.\n\n    ![Référentiel de clones](~/assets/images/meeting-token-generator/meeting-token-generator-clonerepository.png)\n\n 1. **Sélectionnez Clone**. \n"
- title: Créer et inscrire votre bot sur Azure AD web
  durationInMinutes: 5
  content: "Les étapes suivantes vous guident vers :\n\n* Créez une ressource Azure Bot pour inscrire le bot auprès d’Azure Bot Service.\n* Créez une secret client qui permet l’authentification sso du bot.\n* Ajoutez Microsoft Teams canal pour déployer le bot sur un canal Teams’accès.\n* Utilisez ngrok pour créer un tunnel vers les points de terminaison de votre serveur web.\n* Ajoutez le point de terminaison de messagerie au tunnel ngrok que vous avez créé.\n\n**Pour créer une ressource Azure Bot**\n\n1. Go to the [Microsoft Azure portal](https://portal.azure.com/).\n1. Sélectionnez **Créer une ressource**.\n1. Dans la zone de recherche, entrez **Azure Bot**.\n1. **Sélectionnez Entrée**.\n1. **Sélectionnez Azure Bot**.\n\n     ![Créer une carte de bot Azure](~/assets/images/bots/createazurebot.png)\n\n1. Sélectionnez **Créer**.\n1. Entrez le nom de handle de bot requis dans **le handle bot**.\n1. Dans la **liste de** listes des abonnements, sélectionnez **msteams.nonprod.pub.msft.aplt**.\n1. Dans la liste **de listes** des groupes de ressources, sélectionnez votre groupe de ressources existant. Vous pouvez également créer un nouveau groupe de ressources (sélectionnez **Créer un nouvel** > entrez le nom de la ressource **> ok).**\n\n    ![Inscrire un bot](~/assets/images/Tab-ME-SSO/register-bot.png)\n\n1. Dans la section **ID de l’application Microsoft** , l’option Créer un **ID** d’application Microsoft est sélectionnée par défaut. \n\n   **Sélectionnez Utiliser l’inscription d’application** existante et entrez l’ID d’application existant et le mot de passe **d’application** existant pour une application existante. **Sélectionnez Créer un ID d’application Microsoft** pour une nouvelle application.\n\n   > [!NOTE]\n   > Vous ne pouvez pas créer plusieurs bots avec le même **ID d’application Microsoft**.\n\n1. Sélectionnez **Examiner et créer**.\n\n   ![Inscrire un bot](~/assets/images/Tab-ME-SSO/register-bot-2.png)\n\n1. Si la validation réussit, sélectionnez **Créer**.\n\n    La mise en service de votre service de bot prend quelques instants.\n\n1. Sélectionnez **Accéder à la ressource**. \n\n    ![Déployer l’application](~/assets/images/Tab-ME-SSO/go-to-resource.png)\n\n    Votre bot Azure est créé.\n\n    ![Déployer l’application](~/assets/images/Tab-ME-SSO/app-overview.png)\n\n**Pour créer une secret client**\n\n  Effectuez les étapes suivantes si vous avez créé un **ID d’application Microsoft** :\n\n1. Dans le panneau gauche, sélectionnez **Configuration**. \n\n   > [!TIP]\n   > Enregistrez **l’ID d’application Microsoft** ou **l’ID client** pour référence ultérieure.\n\n1. **Sélectionnez MultiTenant sous** **Type de bot**.\n\n    ![Bot Type](~/assets/images/Tab-ME-SSO/bot-type.png)\n\n1. En plus de **l’ID de l’application Microsoft**, sélectionnez **Gérer**.\n\n    ![ID d’application Microsoft](~/assets/images/Tab-ME-SSO/manage.png)\n\n1. Dans la section **Secrets client** , sélectionnez **Nouvelle secret client**. \n\n    ![Nouvelle secret client](~/assets/images/meeting-token-generator/meeting-token-generator-newclientsecret.png)\n\n   La **fenêtre Ajouter une secret client** s’affiche.  \n\n1. Entrez **la description**.\n\n1. Sélectionnez **Ajouter**.\n\n    ![Ajouter une secret client à l’application](~/assets/images/Tab-ME-SSO/add-client-id.png)\n\n1. Dans la **colonne Valeur** , **sélectionnez Copier dans le Presse-papiers**.\n\n     ![Valeur de la secret client](~/assets/images/Tab-ME-SSO/client-ids.png)\n   \n   > [!TIP]\n   > Enregistrez la **valeur des secrets client** ou le mot de passe de l’application pour référence ultérieure.\n\n**Pour ajouter le Microsoft Teams canal**\n\n1. Sélectionnez **Accueil**.\n\n    ![Page d’accueil](~/assets/images/Tab-ME-SSO/home.png)\n\n1. Sélectionnez votre bot à partir **des ressources récentes**.\n\n1. **Sélectionnez Canaux** dans le volet gauche. \n\n1. **Sélectionnez Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. Cochez la case pour accepter les **conditions d’utilisation**.\n\n1. **Sélectionnez Accepter**.\n\n      ![Conditions d’utilisation](~/assets/images/meeting-token-generator/meeting-token-generator-terms.png)\n\n1. Sélectionnez **Enregistrer**.\n\n      ![Sélectionnez Teams](~/assets/images/meeting-token-generator/meeting-token-generator-config-teams.png)   \n\n**Pour créer un tunnel pour un serveur web local**\n\nUtilisez ngrok pour créer un tunnel vers les points de terminaison HTTPS disponibles publiquement de votre serveur web exécutant localement. Exécutez la commande suivante dans ngrok :\n\n ```bash\n ngrok http -host-header=localhost 3978\n ```\n\n**Pour ajouter un point de terminaison de messagerie**\n\n1. À partir de ngrok, copiez l’URL HTTPS (https vers io).\n\n    ![URL HTTPS ngrok](~/assets/images/Tab-ME-SSO/ngrok-image.png)\n\n    > [!NOTE]\n    > L’URL HTTPS dans votre ngrok est votre nom de domaine complet.\n    > Il `WebAppDomain` s’agit d’un nom de domaine complet qui ne l’inclut `https://` pas.\n\n1. Dans **Paramètres** pour le bot Azure que vous avez créé, sélectionnez **Configuration**.\n\n1. Dans **le point de terminaison de messagerie**, utilisez l’URL HTTPS disponible à partir de ngrok et à la fin de l’URL, **ajoutez /api/messages**.\n\n    ![Point de terminaison de messagerie](~/assets/images/Tab-ME-SSO/messaging-endpoint.png)\n\n1. Sélectionnez **Appliquer**.\n\n    Vous avez correctement installé un bot dans Azure Bot Service.\n"
- title: Configurer l’sso pour votre onglet
  durationInMinutes: 1
  content: "**Pour inscrire votre application via le portail Azure AD web**  \n\n1. Accédez au [Portail Azure](https://portal.azure.com/).\n\n1. Sélectionnez **Azure Active Directory**.\n\n1. Form the left pane, select **App Registrations**.\n\n1. Sélectionnez votre bot.\n\n1. **Sélectionnez Exposer une API**.\n\n1. Sélectionnez **Définir**.\n\n   ![Exposer une API](~/assets/images/Tab-ME-SSO/application-id-set.png)\n\n1. Définissez **l’URI de l’ID d’application** sous la forme `api://botid-{AppID}`.\n\n   ![Lien Définir](~/assets/images/Tab-ME-SSO/appid-uri1.png)\n    \n1. Sélectionnez **Ajouter une étendue**. \n\n1. Dans le panneau qui s’affiche, entrez `access_as_user` le nom de **l’étendue**.\n\n1. **Définissez Qui pouvez consentir à** `Admins and users`.\n\n1. Pour configurer les invites de consentement de l’administrateur et de l’utilisateur avec les valeurs `access_as_user` appropriées pour l’étendue, fournissez les informations suivantes dans les champs :</br>\n\n   * Entrez le `Teams can access the user’s profile` **nom complet du consentement de l’administrateur**.\n\n   * Entrez la `Allows Teams to call the app’s web APIs as the current user` **description du consentement de l’administrateur**.\n\n   * Entrez le `Teams can access the user profile and make requests on the user’s behalf` **nom complet du consentement de l’utilisateur**.\n\n   * Entrez en `Enable Teams to call this app’s APIs with the same rights as the user` tant **que description du consentement de l’utilisateur**.\n\n1. Vérifiez que **State** est défini comme **Enabled**.\n\n1. **Sélectionnez Ajouter une étendue** à enregistrer.\n\n   ![Étendues](~/assets/images/Tab-ME-SSO/add-a-scope.png)\n\n    > [!NOTE]\n    > Le **nom de l’étendue** doit correspondre à l’URI **de l’ID** d’application avec `/access_as_user` ajouté à la fin.</br>\n       `api://botid-00000000-0000-0000-0000-000000000000/access_as_user`\n\n      ![Étendues](~/assets/images/Tab-ME-SSO/add-a-scope-final1.png) \n\n1. Dans la section **Applications clientes autorisées**, identifiez les applications que vous souhaitez autoriser pour l'application Web de votre application. \n\n1. Sélectionnez **Ajouter une application cliente**. \n\n1. Entrez chacun des ID client suivants et sélectionnez l’étendue autorisée :</br>\n\n     * `1fec8e78-bce4-4aaf-ab1b-5451cc387264`(Teams application mobile ou de bureau)\n\n       ![Ajouter une application cliente](~/assets/images/Tab-ME-SSO/add-client-application.png) \n\n     * `5e3ce6c0-2b1f-4285-8d4b-75ee78787346`(Teams application web)\n\n       ![Ajouter une application cliente](~/assets/images/Tab-ME-SSO/add-client-application21.png) \n    \n\n   L’image suivante affiche **l’ID client** :\n\n     ![Applications clientes](~/assets/images/Tab-ME-SSO/client-id-2.png) \n\n1. Dans le panneau gauche, sélectionnez **Autorisations d’API**. \n\n   > [!NOTE]\n   > Les utilisateurs doivent consentir à ces autorisations uniquement si Azure AD’application est inscrite dans un autre client.\n\n1. Sélectionnez **Ajouter une autorisation**.\n\n1. **Sélectionnez Microsoft Graph**.\n\n   ![Microsoft Graph](~/assets/images/Tab-ME-SSO/microsoft-graph.png)\n\n1. Sélectionnez **Autorisations déléguées**.\n\n   Par défaut, **User.Read** est sélectionné.\n\n   ![Utilisateur](~/assets/images/meeting-token-generator/meeting-token-generator-userpermission.png)\n\n1. Ajoutez les autorisations suivantes :</br>\n    * **email**\n    * **offline_access**\n    * **OpenID**\n    * **profil**\n\n\n1. Sélectionnez **Ajouter des autorisations**.\n\n1. Dans le panneau gauche, sélectionnez **Authentification** pour définir un URI de redirection. \n\n   > [!NOTE]\n   > Si une application n’est pas accordée au consentement de l’administrateur informatique, les utilisateurs doivent donner leur consentement la première fois qu’ils utilisent une application.\n           \n     1. Sélectionnez **Ajouter une plateforme**.\n     1. Sélectionnez **Web**.\n\n        ![Web](~/assets/images/Tab-ME-SSO/configure-platform1.png)\n\n     1. Entrez **les URL de** redirection sous le nom `https://token.botframework.com/.auth/web/redirect`.\n\n     1. **Activez l’octroi implicite et les flux hybrides** en sélectionnant les case à cocher suivantes :\n         * **Jetons d’ID**\n         * **Jetons d’accès**\n\n     1. Sélectionnez **Configurer**.\n\n        ![Configurer le web](~/assets/images/Tab-ME-SSO/configure-web.png)\n\n**Pour mettre à jour le manifeste**\n\n1. **Sélectionnez Manifeste** dans le volet gauche.\n\n1. Assurez-vous que l’élément de config est définie sur **« accessTokenAcceptedVersion » : 2**. Si ce n’est pas le cas, modifiez sa valeur **sur 2** et sélectionnez **Enregistrer**. \n\n   > [!Tip]\n   > Si vous testez déjà votre bot dans Teams, vous devez vous dé dé connectez du bot et dédétez-vous de Teams. Connectez-vous à nouveau pour voir cette modification.\n\n   ![Mettre à jour le manifeste](~/assets/images/bots/update-manifest.png)</br>\n\n**Pour configurer la connexion bot service**\n\n1. Go to **Configuration pageAdd** >  **OAuth Connection Paramètres**.\n\n1. **Sélectionnez Ajouter une connexion OAuth Paramètres**.\n\n1. Dans **Nouveau paramètre de connexion**, entrez les détails suivants :\n\n    | Champ | Valeur ou description |\n    | ----- | ----- |\n    | **Name** | Entrez le nom de votre nouveau paramètre de connexion. Vous pouvez utiliser le nom dans les paramètres de votre code de service de bot. |\n    | **Fournisseur de services** | **Sélectionnez Azure Active Directory V2**. |\n    | **ID du client** | Enregistré précédemment en tant **qu’ID d’application Microsoft**. |\n    | **Secret client** | Enregistré précédemment sous **la valeur de** l’ID de la secret client. |\n    | **URL de Exchange jeton** | Utilisez **l’URI d’ID d’application** obtenu précédemment lors de l’exposition du point de terminaison de l’API. |\n    | **ID client** | Entrez **commun.** |\n    | **Scopes** | Entrez **User.Read et** ajoutez toutes les **étendues sélectionnées** tout en spécifiant des autorisations pour les API en aval. |\n\n1. Sélectionnez **Enregistrer**.\n\n    <img src=\"~/assets/images/Tab-ME-SSO/new-connection-setting.png\" alt=\"Bot Service connection\" width=\"300\"/>\n"
- title: Configurer les paramètres de l’application
  durationInMinutes: 1
  content: "1. Accédez **à appsettings.json dans** le référentiel cloné.\n\n    ![Emplacement des paramètres de l’application](~/assets/images/Tab-ME-SSO/app-setting-folder.png)\n\n1. **Ouvrez appsettings.json** **dans Visual Studio Code** et mettez à jour les informations suivantes :  \n\n     * Définissez `\"MicrosoftAppId\"` ce dernier sur **l’ID d’application Microsoft de votre bot**.\n     * Définissez-la `\"MicrosoftAppPassword\"` sur la valeur de l’ID de la secret client de votre bot.\n     * Définissez `\"DOMAIN-NAME\"` votre URL ngrok.\n     * Définissez `\"ConnectionName\"` ce paramètre sur le nom du paramètre de connexion OAuth.\n     * Définissez `\"ClientId\"` ce dernier sur **l’ID d’application Microsoft de votre bot**.\n     * Définissez-la `\"AppSecret\"` sur la valeur de l’ID de la secret client de votre bot.\n     * Définie `\"ApplicationIdURI\"` sous la forme `api://584f****.ngrok.io/botid-{AppID}`.\n\n    ![Paramètres de l’application](~/assets/images/Tab-ME-SSO/app-setting1.png)\n"
- title: Configurer le fichier manifeste
  durationInMinutes: 1
  content: "1. Accédez **à manifest.json dans** le référentiel cloné.\n\n    ![Emplacement du fichier manifeste](~/assets/images/Tab-ME-SSO/folder-manifest.png)\n\n1. **Ouvrez manifest.json** **dans Visual Studio Code** et a apporté les modifications suivantes :\n\n     * Remplacez toutes les occurrences de `[DOMAIN-NAME]` votre nom de domaine ngrok. \n     * Remplacez toutes les occurrences par `[YOUR-MICROSOFT-APP-ID]` **l’ID d’application Microsoft de votre bot**.\n\n         > [!NOTE]\n         > Selon le scénario et peut `[YOUR-MICROSOFT-APP-ID]` `[DOMAIN-NAME]` se produire plusieurs fois.\n\n     * Définir `\"resource\"` comme `api://584f****.ngrok.io/botid-{AppID}`.</br>\n    \n    ![Image2 du manifeste](~/assets/images/Tab-ME-SSO/vs-manifest.png)\n"
- title: Créer et exécuter le service
  durationInMinutes: 1
  content: "**Pour créer et exécuter le service à l’aide Visual Studio 2019 ou de la ligne de commande**\n\n# <a name=\"visual-studio-2019\"></a>[Visual Studio 2019](#tab/vs2019)\n\n   1. **Lancez Visual Studio 2019**.\n   1. Accédez **à** **FileOpen** >  >  **Project/Solution**.\n\n      ![Ouvrir un fichier](~/assets/images/Tab-ME-SSO/open-project1.png)\n\n   1. **Sélectionnez le fichier App SSO Sample.csproj** à partir du **dossier csharp**.\n\n      ![Project dossier](~/assets/images/Tab-ME-SSO/project-folder1.png)\n\n   1. Vous verrez le résultat suivant :\n\n      ![Fichier de jeton](~/assets/images/Tab-ME-SSO/output1.png)\n\n   1. Appuyez sur **F5** pour exécuter le projet.\n\n   1. **Sélectionnez Oui** si la boîte de dialogue suivante s’affiche :\n\n      ![Certificat d’autorisation](~/assets/images/Tab-ME-SSO/certificate.png)\n\n      Une page web s’ouvre avec un message **Votre bot est prêt !**\n\n      ![Application prête](~/assets/images/Tab-ME-SSO/bot-completion-explorer.png) \n\n    \n# <a name=\"command-line\"></a>[Ligne de commande](#tab/cli)\n\nAccédez au **dossier csharp** dans une fenêtre d’invite de commandes et entrez la commande suivante :\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/Tab-ME-SSO/dotnet-run1.png)\n  \n"
- title: Télécharger’application DSO à Teams
  durationInMinutes: 1
  content: "**Pour exécuter Teams’application en chargeant le fichier manifest.zip'application**\n\n1. Dans votre référentiel cloné, accédez à **csharp >'exemple d’sso de l’application > TeamsAppManifest**.\n\n1. Créez une .zip avec les fichiers suivants présents dans le **dossier manifeste** : \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   ![Sélectionner un fichier zip](~/assets/images/Tab-ME-SSO/upload-tab-me-sso.png)\n\n1. Go to **Microsoft Teams**.\n\n1. Sélectionnez **Store**.\n1. **Sélectionnez Gérer vos applications**.\n1. **Sélectionnez Publier une application**.\n\n   ![Dotnet](~/assets/images/Tab-ME-SSO/publish-an-app.png)\n\n1. **Sélectionnez Télécharger une application personnalisée**. \n\n   ![Télécharger application personnalisée](~/assets/images/Tab-ME-SSO/upload-custom-app.png)\n\n1. **Sélectionnez Ouvrir** pour télécharger le .zip que vous avez créé dans le **dossier manifeste**.\n\n   ![Sélectionner un fichier zip](~/assets/images/Tab-ME-SSO/upload-tab-me-sso-open.png)\n\n1. Sélectionnez **Ajouter**.\n\n   ![Ajouter l’application](~/assets/images/Tab-ME-SSO/add-sso-app.png)\n\n1. Envoyez un message au bot. \n1. Le bot effectue l’sign-on unique et affiche la carte de visite avec l’invite d’options pour afficher le jeton.\n\n   ![Carte de profil](~/assets/images/Tab-ME-SSO/Congratulation-image.png)\n\n1. **Sélectionnez Oui** pour afficher le jeton ou **Non** pour poursuivre la conversation.\n  \n   ![Affichage du jeton](~/assets/images/Tab-ME-SSO/token-view1.png)\n\n  1. Si l’authentification par défaut n’est pas effectuée, le bot effectue la méthode d’authentification par défaut pour votre onglet.\n\n      ![Pas d’sso](~/assets/images/Tab-ME-SSO/not-login11.png)\n\n  1. Sélectionnez les ellipses **...** pour ouvrir l’extension de messagerie.\n\n      ![extension de messagerie](~/assets/images/Tab-ME-SSO/message-extension.png)\n  \n  1. Sélectionnez votre nouvelle application DSO.\n\n      ![Application DSO](~/assets/images/Tab-ME-SSO/recent-app-sso.png)\n\n  1. **Sélectionnez se connectez**.\n\n      ![Se connecter](~/assets/images/Tab-ME-SSO/sign-in-sso1.png)\n\n  1. Entrez vos informations d’identification dans la zone de connexion, puis sélectionnez **Suivant**.\n\n      ![Zone de signature](~/assets/images/Tab-ME-SSO/sign-in-box.png)\n  \n  1. Sélectionnez **Accepter**.\n\n      ![zone de consentement](~/assets/images/Tab-ME-SSO/concent-box.png)\n\n  1. Ouvrez l’extension de messagerie et sélectionnez votre application.\n\n  1. Sélectionnez votre profil sous zone de recherche. Vous verrez quelque chose comme ceci :\n\n      ![Profil](~/assets/images/Tab-ME-SSO/hello-megan-profile.png)\n\n  1. Envoyer `https://profile.botframework.com` à l’application pour obtenir une carte de visite.\n   \n      ![Carte de profil](~/assets/images/Tab-ME-SSO/profile-card.png)\n"
- title: Défi complet
  durationInMinutes: 1
  content: >
    Avez-vous eu un projet comme celui-ci ?

       ![Profil d’utilisateur sso](~/assets/images/Tab-ME-SSO/hello-megan-profile245.png)
- content: Vous avez terminé le didacticiel pour commencer avec l’ingso pour l’onglet et l’application d’extension de messagerie.
