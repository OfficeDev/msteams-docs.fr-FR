### YamlMime:Tutorial
title: Authentification unique pour les onglets et l’extension de message
metadata:
  title: Authentification unique pour les onglets et l’extension de message
  description: Avec ce module d’apprentissage, découvrez comment configurer l’authentification unique Azure Active Directory (Azure AD SSO) pour les onglets.
  audience: Developer
  level: Beginner
  ms.date: 12/07/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: tabs/how-to/authentication/tab-sso-overview.md
  nextTutorialTitle: En savoir plus sur l’authentification unique pour les onglets.
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 73589b755b355cf29998286847b32f689076abac
  ms.sourcegitcommit: edfe85e312c73e34aa795922c4b7eb0647528d48
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 09/30/2022
  ms.locfileid: "68243597"
items:
- durationInMinutes: 1
  content: "L’authentification unique Azure Active Directory (Azure AD SSO) permet d’authentifier les utilisateurs dans Teams. \n\n**Principaux aspects du guide pas à pas de l’authentification unique Azure AD pour les onglets et les extensions de message** :\n\n * Après la première connexion, l’authentification unique Azure AD permet à l’utilisateur de se connecter automatiquement.\n * Permet à l’utilisateur de se connecter à d’autres appareils sans entrer à nouveau les informations d’identification de connexion.\n * Obtient un jeton pour l’utilisateur connecté.   \n\nCe guide pas à pas vous aide à créer des onglets et des extensions de message permettant l’authentification unique Azure AD. La sortie suivante s’affiche :\n\n  ![Image de félicitations](~/assets/images/Tab-ME-SSO/hello-megan-profile245.png)   \n"
- title: Configuration requise
  durationInMinutes: 1
  content: "Veillez à installer les outils suivants et à configurer votre environnement de développement :  \n\n* [Microsoft Teams](https://teams.microsoft.com/) avec un compte valide\n* [Kit de développement logiciel (SDK) .NET Core](https://dotnet.microsoft.com/download) version 3.1\n* [Dernière version de Visual Studio](https://visualstudio.microsoft.com/downloads/)\n* [ngrok](https://ngrok.com/download) version la plus récente (uniquement pour le test de devbox) ou toute solution de tunneling équivalente\n* [Compte de développeur Microsoft 365](/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) ou accès au compte Teams avec les autorisations appropriées pour installer une application\n\n  > [!NOTE]\n  > Après avoir téléchargé ngrok, inscrivez-vous et installez [authtoken](https://ngrok.com/download).\n"
- title: Configurer un environnement local
  durationInMinutes: 1
  content: "Clonez `Microsoft-Teams-Samples` le référentiel sur votre GitHub local :  \n\n 1. Ouvrez [des exemples Microsoft Teams](https://github.com/OfficeDev/Microsoft-Teams-Samples).\n 1. Sélectionnez **Code**.\n 1. Dans le menu déroulant, sélectionnez **Ouvrir avec GitHub Desktop**.\n\n    ![Cloner le référentiel](~/assets/images/meeting-token-generator/meeting-token-generator-clonerepository.png)\n\n 1. Sélectionnez **Cloner**. \n"
- title: Créer et inscrire votre bot dans le portail Azure AD
  durationInMinutes: 5
  content: "Les étapes suivantes vous guident pour :\n\n* Créez une ressource Azure Bot pour inscrire un bot auprès d’Azure Bot Service.\n* Créez une clé secrète client qui active l’authentification unique du bot.\n* Ajoutez un canal Microsoft Teams pour déployer le bot sur un canal Teams.\n* Utilisez ngrok pour créer un tunnel vers les points de terminaison de votre serveur web.\n* Ajoutez un point de terminaison de messagerie au tunnel ngrok que vous avez créé.\n\n**Pour créer une ressource Azure Bot**\n\n1. Accédez au [Portail Azure Microsoft](https://portal.azure.com/).\n1. Sélectionnez **Créer une ressource**.\n1. Dans la zone de recherche, entrez **Azure Bot**.\n1. Ensuite, sélectionnez **Entrée**.\n1. Sélectionnez **Azure Bot**.\n\n     :::image type=\"content\" source=\"./assets/images/azure-bot.png\" alt-text=\"Bot Azure.\":::\n     \n1. Sélectionnez **Créer**.\n1. Entrez le nom de handle de bot requis dans le **handle bot**.\n1. Sélectionnez votre **abonnement** dans la liste déroulante.\n1. Pour créer un groupe de ressources, sélectionnez l’emplacement requis dans la liste déroulante **Nouvel emplacement du groupe de ressources** .\n    Pour plus d’informations, consultez [Créer un groupe de ressources](/azure/azure-resource-manager/management/manage-resource-groups-portal#create-resource-groups).\n    \n    ![Inscrire un bot](~/assets/images/Tab-ME-SSO/register-bot.png)\n\n1. Dans la section **ID d’application Microsoft** , par défaut, **créer un ID d’application Microsoft** est sélectionné. \n\n   Sélectionnez **Utiliser l’inscription d’application existante** et entrez **l’ID d’application existant** et le **mot de passe d’application existant** pour une application existante. Sélectionnez **Créer un ID d’application Microsoft** pour une nouvelle application.\n\n   > [!NOTE]\n   > Vous ne pouvez pas créer plusieurs bots avec le même **ID d’application Microsoft**.\n\n1. Sélectionnez **Type d’application** en tant que `Multi Tenant`.\n1. Sélectionnez **Examiner et créer**.\n\n   ![Inscrire un bot](~/assets/images/Tab-ME-SSO/register-bot-2.png)\n\n1. Si la validation réussit, sélectionnez **Créer**.\n\n    L’approvisionnement de votre service de bot prend quelques instants.\n\n1. Sélectionnez **Accéder à la ressource**. \n\n    ![Déployer l’application](~/assets/images/Tab-ME-SSO/go-to-resource.png)\n\n    Votre bot Azure est créé.\n\n    ![Déployer l’application](~/assets/images/Tab-ME-SSO/app-overview.png)\n\n**Pour créer une clé secrète client**\n\n  Effectuez les étapes suivantes si vous avez créé un **nouvel ID d’application Microsoft** :\n\n1. Dans le volet gauche, sélectionnez **Configuration**. \n\n   > [!TIP]\n   > Enregistrez **l’ID d’application Microsoft** ou **l’ID client** pour référence ultérieure.\n\n1. En regard de **l’ID d’application Microsoft**, **sélectionnez Gérer**.\n\n    ![ID d’application Microsoft](~/assets/images/Tab-ME-SSO/manage.png)\n\n1. Dans la section **Secrets client** , sélectionnez **Nouvelle clé secrète client**. \n\n    ![Nouvelle clé secrète client](~/assets/images/meeting-token-generator/meeting-token-generator-newclientsecret.png)\n\n   La fenêtre **Ajouter une clé secrète client** s’affiche.  \n\n1. Entrez **la description**.\n\n1. Sélectionnez **Ajouter**.\n\n    ![Ajouter une clé secrète client à l’application](~/assets/images/Tab-ME-SSO/add-client-id.png)\n\n1. Dans la colonne **Valeur** , sélectionnez **Copier dans le Presse-papiers**.\n\n     ![Valeur de la clé secrète client](~/assets/images/Tab-ME-SSO/client-ids.png)\n   \n   > [!TIP]\n   > Enregistrez la valeur **des secrets client** ou le mot de passe d’application pour référence ultérieure.\n\n**Pour ajouter le canal Microsoft Teams**\n\n1. Sélectionnez **Accueil**.\n\n    ![Page d’accueil](~/assets/images/Tab-ME-SSO/home.png)\n\n1. Sélectionnez votre bot dans **les ressources récentes**.\n\n1. Sélectionnez **Canaux** dans le volet gauche. \n\n1. Sélectionner **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. Cochez la case pour accepter les **conditions d’utilisation**.\n\n1. Sélectionnez **Accepter**.\n\n      ![Conditions d’utilisation](~/assets/images/meeting-token-generator/meeting-token-generator-terms.png)\n\n1. Sélectionnez **Enregistrer**.\n\n      ![Sélectionner Teams](~/assets/images/meeting-token-generator/meeting-token-generator-config-teams.png)   \n\n**Pour créer un tunnel pour un serveur web local**\n\nUtilisez ngrok pour créer un tunnel vers les points de terminaison HTTPS disponibles publiquement de votre serveur web local. Exécutez la commande suivante dans ngrok :\n\n ```bash\n ngrok http -host-header=localhost 3978\n ```\n\n**Pour ajouter un point de terminaison de messagerie**\n\n1. À partir de ngrok, copiez l’URL HTTPS (https vers io).\n\n    ![URL HTTPS ngrok](~/assets/images/Tab-ME-SSO/ngrok-image.png)\n\n    > [!NOTE]\n    > L’URL HTTPS dans votre ngrok est votre nom de domaine complet.\n    > Il `WebAppDomain` s’agit d’un nom de domaine complet qui ne l’inclut `https://` pas.\n\n1. Dans **Paramètres** du bot Azure que vous avez créé, sélectionnez **Configuration**.\n\n1. Dans **le point de terminaison de messagerie**, utilisez l’URL HTTPS disponible à partir de ngrok et, à la fin de l’URL, ajoutez **/api/messages**.\n\n    ![Point de terminaison de messagerie](~/assets/images/Tab-ME-SSO/messaging-endpoint.png)\n\n1. Sélectionnez **Appliquer**.\n\n    Vous avez correctement configuré un bot dans Azure Bot Service.\n"
- title: Configurer l’authentification unique pour votre onglet
  durationInMinutes: 1
  content: "1. Accédez au [Portail Azure](https://portal.azure.com/).\n\n1. Sélectionnez **Azure Active Directory**.\n\n1. Dans le volet gauche, sélectionnez **Inscriptions d’applications**.\n\n1. Sélectionnez votre bot.\n\n1. Sélectionnez **Exposer une API**.\n\n1. Sélectionnez **Définir**.\n\n   ![Exposer une API](~/assets/images/Tab-ME-SSO/application-id-set.png)\n\n1. Définissez **l’URI d’ID d’application** sous la forme de `api://your ngrok/botid-{your AppID}`.\n\n   ![Définir le lien](~/assets/images/Tab-ME-SSO/appid-uri1.png)\n    \n1. Sélectionnez **Ajouter une étendue**. \n\n1. Dans le panneau qui s’affiche, entrez `access_as_user` le **nom de l’étendue**.\n\n1. Définir **qui peut donner son consentement ?** sur `Admins and users`.\n\n1. Pour configurer les invites de consentement de l’administrateur et de l’utilisateur avec les valeurs appropriées pour `access_as_user` l’étendue, fournissez les informations suivantes dans les champs :</br>\n\n   * Entrez `Teams can access the user’s profile` le **nom complet du consentement de l’administrateur**.\n\n   * Entrez `Allows Teams to call the app’s web APIs as the current user` en tant que **description du consentement administrateur**.\n\n   * Entrez `Teams can access the user profile and make requests on the user’s behalf` en tant que **nom d’affichage du consentement de l’utilisateur**.\n\n   * Entrez `Enable Teams to call this app’s APIs with the same rights as the user` comme **description du consentement de l’utilisateur**.\n\n1. Vérifiez que **State** est défini comme **Enabled**.\n\n1. Sélectionnez **Ajouter une étendue** à enregistrer.\n\n   ![Étendues](~/assets/images/Tab-ME-SSO/add-a-scope.png)\n\n    > [!NOTE]\n    > Le **nom de l’étendue** doit correspondre à l’URI **d’ID d’application** avec `/access_as_user` ajouté à la fin.</br>\n       `api://your ngrok/botid-00000000-0000-0000-0000-000000000000/access_as_user`\n\n      ![Étendues](~/assets/images/Tab-ME-SSO/add-a-scope-final1.png) \n\n1. Dans la section **Applications clientes autorisées**, identifiez les applications que vous souhaitez autoriser pour l'application Web de votre application. \n\n1. Sélectionnez **Ajouter une application cliente**. \n\n1. Entrez chacun des ID clients suivants et sélectionnez l’étendue autorisée :</br>\n\n     * `1fec8e78-bce4-4aaf-ab1b-5451cc387264` (Application mobile ou de bureau Teams)\n\n       ![Ajouter une application cliente](~/assets/images/Tab-ME-SSO/add-client-application.png) \n\n     * `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` (Application web Teams)\n\n       ![Ajouter une application cliente](~/assets/images/Tab-ME-SSO/add-client-application21.png) \n    \n\n   L’image suivante affiche **l’ID client** :\n\n     ![Applications clientes](~/assets/images/Tab-ME-SSO/client-id-2.png) \n\n1. Dans le volet gauche, sélectionnez **Autorisations d’API**. \n\n   > [!NOTE]\n   > Les utilisateurs doivent donner leur consentement à ces autorisations uniquement si l’application Azure AD est inscrite dans un autre locataire.\n\n1. Sélectionnez **Ajouter une autorisation**.\n\n1. Sélectionnez **Microsoft Graph**.\n\n   ![Microsoft Graph](~/assets/images/Tab-ME-SSO/microsoft-graph.png)\n\n1. Sélectionnez **Autorisations déléguées**.\n\n1. Ajoutez les autorisations suivantes :</br>\n    * **email**\n    * **offline_access**\n    * **Openid**\n    * **profil**\n    * **User.Read**\n\n1. Sélectionnez **Ajouter des autorisations**.\n\n1. Dans le volet gauche, sélectionnez **Authentification** pour définir un URI de redirection. \n\n   > [!NOTE]\n   > Si aucune application n’a reçu le consentement de l’administrateur informatique, les utilisateurs doivent donner leur consentement la première fois qu’ils utilisent une application.\n           \n     1. Sélectionnez **Ajouter une plateforme**.\n     1. Sélectionnez **Web**.\n\n        ![Web](~/assets/images/Tab-ME-SSO/configure-platform1.png)\n\n     1. Entrez les **URI de redirection** sous `https://token.botframework.com/.auth/web/redirect`.\n\n     1. Activez **l’octroi implicite et les flux hybrides** en cochant les cases suivantes :\n         * **Jetons d’ID**\n         * **Jetons d’accès**\n\n     1. Sélectionnez **Configurer**.\n\n        ![Configurer le web](~/assets/images/Tab-ME-SSO/configure-web.png)\n\n**Pour mettre à jour le manifeste**\n\n1. Sélectionnez **Manifeste** dans le volet gauche.\n\n1. Vérifiez que l’élément de configuration est défini sur **« accessTokenAcceptedVersion » : 2**. Si ce n’est pas le cas, remplacez sa valeur par **2** , puis **sélectionnez Enregistrer**. \n\n   > [!Tip]\n   > Si vous testez déjà votre bot dans Teams, vous devez vous déconnecter du bot et vous déconnecter de Teams. Ensuite, reconnectez-vous pour voir cette modification.\n\n   ![Mise à jour du manifeste](~/assets/images/bots/update-manifest.png)</br>\n\n**Pour configurer Bot Service connexion**\n\n1. Accédez à la **page** >  Configuration **Ajouter des paramètres de connexion OAuth**.\n\n1. Sélectionnez le bouton **Ajouter des paramètres de connexion OAuth**.\n\n1. Dans **nouveau paramètre de connexion**, entrez les détails suivants :\n\n    | Champ | Valeur ou description |\n    | ----- | ----- |\n    | **Name** | Entrez le nom de votre nouveau paramètre de connexion. Vous pouvez utiliser le nom dans les paramètres de votre code de service de bot. |\n    | **Fournisseur** | Sélectionnez **Azure Active Directory V2**. |\n    | **ID du client** | Enregistré précédemment en tant **qu’ID d’application Microsoft**. |\n    | **Clé secrète client** | Enregistré précédemment en tant que **valeur** de l’ID de clé secrète client. |\n    | **URL d’échange de jetons** | Utilisez **l’URI d’ID d’application** obtenu précédemment lors de l’exposition du point de terminaison d’API. |\n    | **ID client** | Entrez **commun**. |\n    | **Scopes** | Entrez **User.Read** et ajoutez toutes les **étendues sélectionnées** tout en spécifiant des autorisations pour les API en aval. |\n\n1. Sélectionnez **Enregistrer**.\n\n    <img src=\"~/assets/images/Tab-ME-SSO/new-connection-setting.png\" alt=\"Bot Service connection\" width=\"300\"/>\n"
- title: Configurer les paramètres d’application
  durationInMinutes: 1
  content: "1. Accédez à **appsettings.json** dans le référentiel cloné.\n\n    ![Emplacement des paramètres de l’application](~/assets/images/Tab-ME-SSO/app-setting-folder.png)\n\n1. Ouvrez **appsettings.json** dans **Visual Studio Code** et mettez à jour les informations suivantes :  \n\n     * Définissez l’ID `\"MicrosoftAppId\"` **d’application Microsoft** de votre bot.\n     * Définissez la `\"MicrosoftAppPassword\"` valeur de l’ID de clé secrète client de votre bot.\n     * Définissez votre `\"DOMAIN-NAME\"` URL ngrok.\n     * Définissez `\"ConnectionName\"` le nom du paramètre de connexion OAuth.\n     * Définissez l’ID `\"ClientId\"` **d’application Microsoft** de votre bot.\n     * Définissez la `\"AppSecret\"` valeur de l’ID de clé secrète client de votre bot.\n     * Défini `\"ApplicationIdURI\"` sous la forme de `api://584f****.ngrok.io/botid-{AppID}`.\n\n    ![Paramètres de l’application](~/assets/images/Tab-ME-SSO/app-setting1.png)\n"
- title: Configurer le fichier manifeste
  durationInMinutes: 1
  content: "1. Accédez au `manifest.json` référentiel cloné.\n\n    ![Emplacement du fichier manifeste](~/assets/images/Tab-ME-SSO/folder-manifest.png)\n\n1. Ouvrez-le `manifest.json` dans **Visual Studio Code** et apportez les modifications suivantes :\n\n     * Remplacez toutes les occurrences par votre nom de `[DOMAIN-NAME]` domaine ngrok. \n     * Remplacez toutes les occurrences par **l’ID d’application**`[YOUR-MICROSOFT-APP-ID]` Microsoft de votre bot.\n\n         > [!NOTE]\n         > En fonction du scénario `[YOUR-MICROSOFT-APP-ID]` et `[DOMAIN-NAME]` peut se produire plusieurs fois.\n\n     * Définir sur `\"resource\"` `api://584f****.ngrok.io/botid-{AppID}`.</br>\n    \n    ![Image de manifeste2](~/assets/images/Tab-ME-SSO/vs-manifest.png)\n"
- title: Générer et exécuter le service
  durationInMinutes: 1
  content: "**Pour générer et exécuter le service à l’aide de Visual Studio 2019 ou de la ligne de commande**\n\n# <a name=\"visual-studio-2019\"></a>[Visual Studio 2019](#tab/vs2019)\n\n   1. Lancez **Visual Studio 2019**.\n   1. Accédez au **projet/solution** **d’ouverture** >  de **fichier** > .\n\n      ![Ouvrir le fichier](~/assets/images/Tab-ME-SSO/open-project1.png)\n\n   1. Sélectionnez **le fichier Sample.csproj** de l’authentification unique d’application dans le dossier **csharp** .\n\n      ![Dossier de projet](~/assets/images/Tab-ME-SSO/project-folder1.png)\n\n   1. La sortie suivante s’affiche :\n\n      ![Fichier de jeton](~/assets/images/Tab-ME-SSO/output1.png)\n\n   1. Appuyez sur **F5** pour exécuter le projet.\n\n   1. Sélectionnez **Oui** si la boîte de dialogue suivante s’affiche :\n\n      ![Certificat d’approbation](~/assets/images/sbs-outgoing-webhooks/outgoing-webhook-certificate.png)\n\n      Une page web s’ouvre avec un message **indiquant que votre bot est prêt !**\n\n      ![Application prête](~/assets/images/Tab-ME-SSO/bot-completion-explorer.png) \n\n    \n# <a name=\"command-line\"></a>[Ligne de commande](#tab/cli)\n\nAccédez au dossier **csharp** dans une fenêtre d’invite de commandes et entrez la commande suivante :\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/Tab-ME-SSO/dotnet-run1.png)\n  \n"
- title: Charger l’application SSO dans Teams
  durationInMinutes: 1
  content: "1. Dans votre référentiel cloné, accédez à **csharp > App SSO Sample > TeamsAppManifest**.\n\n1. Créez une .zip avec les fichiers suivants présents dans le dossier **Manifeste** : \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   ![Sélectionner un fichier zip](~/assets/images/Tab-ME-SSO/upload-tab-me-sso.png)\n\n1. Accédez à **Microsoft Teams**.\n\n1. Sélectionnez **Store**.\n1. Sélectionnez **Gérer vos applications**.\n1. Sélectionnez **Publier une application**.\n\n   ![Dotnet](~/assets/images/Tab-ME-SSO/publish-an-app.png)\n\n1. Sélectionnez **Charger une application personnalisée**. \n\n   ![Charger une application personnalisée](~/assets/images/Tab-ME-SSO/upload-custom-app.png)\n\n1. Sélectionnez **Ouvrir** pour charger le fichier .zip que vous avez créé dans le dossier **Manifeste** .\n\n   ![Sélectionner un fichier zip](~/assets/images/Tab-ME-SSO/upload-tab-me-sso-open.png)\n\n1. Sélectionnez **Ajouter**.\n\n   ![Ajouter l’application](~/assets/images/Tab-ME-SSO/add-sso-app.png)\n\n1. Envoyez un message au bot. \n1. Le bot effectue l’authentification unique et affiche la carte de profil, ainsi que l’invite d’options pour afficher le jeton.\n\n   ![Carte de profil](~/assets/images/Tab-ME-SSO/Congratulation-image.png)\n\n1. Sélectionnez **Oui** pour afficher le jeton ou **Non** pour continuer la conversation.\n  \n   ![Vue jeton](~/assets/images/Tab-ME-SSO/token-view1.png)\n\n  1. Si l’authentification unique n’est pas effectuée, le bot exécute la méthode d’authentification par défaut pour votre onglet.\n\n      ![Aucune authentification unique](~/assets/images/Tab-ME-SSO/not-login11.png)\n\n  1. Sélectionnez des points de suspension **...** pour ouvrir l’extension de message.\n\n      ![extension de message](~/assets/images/Tab-ME-SSO/message-extension.png)\n  \n  1. Sélectionnez votre nouvelle application d’authentification unique.\n\n      ![Application SSO](~/assets/images/Tab-ME-SSO/recent-app-sso.png)\n\n  1. Sélectionnez **Se connecter**.\n\n      ![Connexion](~/assets/images/Tab-ME-SSO/sign-in-sso1.png)\n\n  1. Entrez vos informations d’identification dans la zone de connexion, puis sélectionnez **Suivant**.\n\n      ![Zone De connexion](~/assets/images/Tab-ME-SSO/sign-in-box.png)\n  \n  1. Sélectionnez **Accepter**.\n\n      ![zone de consentement](~/assets/images/Tab-ME-SSO/concent-box.png)\n\n  1. Ouvrez l’extension de message et sélectionnez votre application.\n\n  1. Sélectionnez votre profil sous la zone de recherche. Vous verrez quelque chose comme ceci :\n\n      ![Profil](~/assets/images/Tab-ME-SSO/hello-megan-profile.png)\n\n  1. Envoyer `https://profile.botframework.com` à l’application pour obtenir une carte de profil.\n   \n      ![Carte de profil](~/assets/images/Tab-ME-SSO/profile-card.png)\n"
- title: Relever le défi
  durationInMinutes: 1
  content: >
    Tu as trouvé quelque chose comme ça ?

       ![Profil d’authentification unique](~/assets/images/Tab-ME-SSO/hello-megan-profile245.png)
- content: Vous avez terminé le didacticiel pour commencer à utiliser l’authentification unique pour l’application d’extension de message et d’onglet.
