### YamlMime:Tutorial
title: Authentification unique pour les onglets et l’extension de message
metadata:
  title: Authentification unique pour les onglets et l’extension de message
  description: Avec ce module d’apprentissage, découvrez comment configurer l’authentification unique Azure Active Directory (Azure AD SSO) pour les onglets.
  audience: Developer
  level: Beginner
  ms.date: 12/07/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: tabs/how-to/authentication/tab-sso-overview.md
  nextTutorialTitle: En savoir plus sur l’authentification unique pour les onglets.
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 3e4b40e958ccb9a3702232603e97dc3979c4cdd9
  ms.sourcegitcommit: 88fb2e9a18de3bd84e3c604ff235fc753c8de8f5
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 11/02/2022
  ms.locfileid: "68818978"
items:
- durationInMinutes: 1
  content: "L’authentification unique Azure Active Directory (Azure AD SSO) permet d’authentifier les utilisateurs dans Teams. \n\n**Aspects clés de l’authentification unique Azure AD** :\n\n * Permet à l’utilisateur de se connecter automatiquement après la première connexion.\n * Permet à l’utilisateur de se connecter à d’autres appareils sans entrer à nouveau d’informations d’identification.\n * Obtient le jeton pour l’utilisateur connecté.\n\nCe guide pas à pas vous aide à créer des onglets et des extensions de message pour activer l’authentification unique Azure AD. Vous verrez la sortie suivante :\n\n  :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/hello-megan-profile245_1.png\" alt-text=\"Image de félicitations.\":::\n"
- title: Configuration requise
  durationInMinutes: 1
  content: "Veillez à installer les outils suivants et à configurer votre environnement de développement :  \n\n| &nbsp; | Installer | Pour l’utilisation... |\n | --- | --- | --- |\n | **Obligatoire** | &nbsp; | &nbsp; |\n | &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams pour collaborer avec toutes les personnes avec lesquelles vous travaillez via des applications pour la conversation, les réunions, les appels et le tout au même endroit.|\n | &nbsp; | [Compte de développeur Microsoft 365](/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) | Accès au compte Teams avec les autorisations appropriées pour installer une application. |\n | &nbsp; | [SDK .NET Core version 3.1](https://dotnet.microsoft.com/en-us/download) | Liaisons personnalisées pour le débogage local et les déploiements d’applications Azure Functions. Si vous n’avez pas installé le SDK .NET 3.1 (ou version ultérieure) globalement, la version portable peut être installée. |\n | &nbsp; | [Visual Studio 2022 version 17.3](https://visualstudio.microsoft.com)<br> Installez l’une des deux charges de travail suivantes :<br> • développement ASP.NET et web <br> • Développement multiplateforme .NET Core | Vous pouvez installer la version entreprise dans Visual Studio 2022 et installer les charges de travail. |\n | &nbsp; | [ngrok](https://ngrok.com/download) | Les fonctionnalités d’application Teams (bots conversationnels, extensions de message et webhooks entrants) nécessitent des connexions entrantes. Un tunnel connecte votre système de développement à Teams. Elle n’est pas obligatoire pour les applications qui incluent uniquement des onglets. Ce package est installé dans le répertoire du projet (à l’aide de npm `devDependencies`). |\n\n  > [!NOTE]\n  > Après avoir téléchargé ngrok, inscrivez-vous et installez [authtoken](https://ngrok.com/download).\n"
- title: Configurer l’environnement local
  durationInMinutes: 1
  content: "Cloner `Microsoft-Teams-Samples` le dépôt sur votre GitHub local :  \n\n 1. Ouvrez [Exemples Microsoft Teams](https://github.com/OfficeDev/Microsoft-Teams-Samples).\n 1. Sélectionnez **Code**.\n 1. Dans le menu déroulant, sélectionnez **Ouvrir avec GitHub Desktop**.\n\n    :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/clonerepository_1.png\" alt-text= \"Clone repository.\":::\n\n 1. Sélectionnez **Cloner**. \n"
- title: Créer et inscrire votre bot dans le portail Azure AD
  durationInMinutes: 5
  content: "Pour créer et inscrire votre bot dans Microsoft Azure AD, procédez comme suit :\n\n* Créez une ressource Azure Bot pour inscrire le bot auprès d’Azure Bot Service.\n* Créez une clé secrète client qui active l’authentification unique du bot.\n* Ajoutez un canal Microsoft Teams pour déployer le bot sur un canal Teams.\n* Créez un tunnel ngrok vers les points de terminaison de votre serveur web.\n* Ajoutez un point de terminaison de messagerie au tunnel ngrok que vous avez créé.\n\n**Pour créer une ressource Azure Bot**\n\n1. Accédez au [Portail Azure Microsoft](https://portal.azure.com/).\n1. Sélectionnez **Créer une ressource**.\n1. Dans la zone de recherche, entrez **Azure Bot**.\n1. Ensuite, sélectionnez **Entrée**.\n1. Sélectionnez **Azure Bot**.\n1. Sélectionnez **Créer**.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/azure-bot_1.png\" alt-text=\"Bot Azure.\":::\n     \n**La fenêtre Créer un bot Azure s’affiche** .\n\n1. Entrez le nom de handle de bot requis dans **Handle de bot**.\n1. Sélectionnez votre **abonnement** et votre **groupe de ressources** dans la liste déroulante respective.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/azure-subscription.png\" alt-text=\"Abonnement Azure.\":::\n\n   Vous pouvez créer un groupe de ressources. Sélectionnez **Créer >** entrez le nom de la ressource > sélectionnez **OK**. Sélectionnez l’emplacement requis dans la liste déroulante **Nouvel emplacement du groupe de ressources** .\n\n   :::image type=\"content\" source=\"~/assets/images/bots/newresource.png\" alt-text=\"Capture d’écran montrant le nouvel emplacement du groupe de ressources.\":::\n\n1. Dans la section **ID d’application Microsoft** , par défaut **, l’option Créer un ID d’application Microsoft** est sélectionnée. \n\n   Vous pouvez sélectionner **Utiliser l’inscription d’application existante** et entrer **ID d’application**, **ID de locataire de l’application** et **ID de ressource MSI**.\n\n   > [!NOTE]\n   > Vous ne pouvez pas créer plusieurs bots avec le même **ID d’application Microsoft**.\n\n1. Sélectionnez **Type d’application** **multilocataire**.\n1. Sélectionnez **Examiner et créer**.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/tenant-review.png\" alt-text=\"révision du locataire.\":::\n\n1. Si la validation est réussie, sélectionnez **Créer**.\n\n    L’approvisionnement de votre service de bot prend quelques instants.\n\n1. Sélectionnez **Accéder à la ressource**.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/go-to-resource_1.png\" alt-text=\"accédez à la ressource.\":::\n\n  Votre bot Azure est créé et vous pouvez voir le **groupe de ressources** et **l’ID d’abonnement** dans le bot Azure.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/app-overview_1.png\" alt-text=\"vue d’ensemble de l’application.\" lightbox=\"./assets/images/Tab-ME-SSO/app-overview_1.png\":::\n    \n**Pour créer une clé secrète client**\n\n  Si vous avez créé un **ID d’application Microsoft**, procédez comme suit :\n\n1. Dans le volet gauche, sélectionnez **Configuration**. \n\n   > [!TIP]\n   > Enregistrez **l’ID d’application Microsoft ou l’ID** **client** pour référence ultérieure.\n\n1. En regard de **Id d’application Microsoft**, sélectionnez **Gérer**.\n\n   :::image type=\"content\" source=\"~/assets/images/Tab-ME-SSO/manage-bot-label_1.png\" alt-text=\"Capture d’écran montrant la sélection de l’option gérer.\":::\n\n1. Dans la section **Clés secrètes client** , sélectionnez **Nouvelle clé secrète client**.\n\n   :::image type=\"content\" source=\"~/assets/images/Tab-ME-SSO/newclientsecret_1.png\" alt-text=\"Capture d’écran montrant la sélection d’une nouvelle clé secrète client.\":::\n\n   **La fenêtre Ajouter une clé secrète client** s’affiche.  \n\n1. Entrez **Description** de la clé secrète client.\n\n1. Sélectionnez **Ajouter**.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/add-client-id.png\" alt-text=\"Ajouter une clé secrète client à l’application.\":::\n\n1. Sélectionnez **Copier dans le Presse-papiers** pour copier les détails **de la valeur** .\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/client-ids_1.png\" alt-text=\"Valeur de la clé secrète client.\":::\n     \n   > [!TIP]\n   > Enregistrez la valeur **Des secrets client** ou le mot de passe de l’application pour référence ultérieure.\n\n**Pour ajouter le canal Microsoft Teams**\n\n1. Sélectionnez **Accueil**.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/home_1.png\" alt-text=\"Page d’accueil\":::\n   \n1. Sélectionnez votre bot dans **Ressources récentes**.\n\n1. Sélectionnez **Canaux** dans le volet gauche. \n\n1. Sélectionner **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n   :::image type=\"content\" source=\"~/assets/images/Tab-ME-SSO/channel-teams_1.png\" alt-text=\"Sélectionner Teams dans les canaux\":::\n\n1. Cochez la case pour accepter les **conditions d’utilisation du service**.\n\n1. Sélectionnez **Accepter**.\n\n   :::image type=\"content\" source=\"~/assets/images//Tab-ME-SSO/terms.png\" alt-text=\"Conditions d’utilisation du service\":::\n\n1. Sélectionnez **Appliquer**.\n\n   :::image type=\"content\" source=\"~/assets/images//Tab-ME-SSO/apply.png\" alt-text=\"Capture d’écran montrant la sélection de Teams.\":::\n\n**Pour créer un tunnel pour le serveur web local**\n\nUtilisez ngrok pour créer un tunnel vers les points de terminaison HTTPS de votre serveur web en cours d’exécution localement. Exécutez la commande suivante dans ngrok :\n\n ```bash\n ngrok http --host-header=localhost 3978\n ```\n > [!TIP]\n > Si vous rencontrez **ERR_NGROK_4018**, suivez les étapes indiquées dans l’invite de commandes pour vous inscrire et authentifier ngrok. Ensuite, exécutez le `ngrok http --host-header=localhost`\n\n**Pour ajouter un point de terminaison de messagerie**\n\n1. À partir de ngrok, copiez l’URL HTTPS (https vers io).\n\n    ![URL HTTPS ngrok](~/assets/images/Tab-ME-SSO/ngrok-image.png)\n\n    > [!NOTE]\n    > L’URL HTTPS dans votre ngrok est un nom de domaine qui n’inclut `https://`pas .\n\n1. Dans **Paramètres**, sélectionnez **Configuration**.\n\n1. Dans **Point de terminaison de messagerie**, ajoutez l’URL HTTPS à partir de ngrok et à la fin de l’URL, ajoutez **/api/messages**.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/messaging-endpoint_1.png\" alt-text=\"Point de terminaison de messagerie.\":::\n    \n1. Sélectionnez **Appliquer**.\n\n    Vous avez correctement configuré un bot dans Azure Bot Service.\n"
- title: Configurer l’authentification unique pour votre onglet
  durationInMinutes: 1
  content: "1. Accédez au [portail Azure](https://portal.azure.com/).\n\n1. Sélectionnez **Azure Active Directory**.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/azure directory.png\" alt-text=\"annuaire azure.\":::\n\n1. Dans le volet gauche, sélectionnez **inscriptions d'applications**.\n\n1. Sélectionnez votre bot.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/app reg.png\" alt-text=\"reg d’application.\":::\n\n1. Sous **Gérer**, sélectionnez **Exposer une API**.\n\n1. Sélectionnez **Définir**.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/application-id-set_1.png\" alt-text=\"Exposer une API.\":::\n   \n1. Définissez **l’URI de l’ID d’application** sous la forme .`api://your ngrok/botid-{your AppID}`\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/expose_2.png\" alt-text=\"définir le lien.\":::\n\n   L’image suivante montre le nom de domaine :\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Tab-ME-SSO/app_id_1.png\" alt-text=\"ID d’URI de l’application\":::\n\n1. Sélectionnez **Ajouter une étendue**. \n   \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/selectscope_1.png\" alt-text=\"Sélectionnez l’étendue\":::\n\n**La fenêtre Ajouter une étendue** s’affiche.\n\n1. Entrez les informations suivantes pour configurer l’étendue :\n\n   * Entrez `access_as_user` comme **nom de l’étendue**.\n\n   * Définissez **Qui peut donner votre consentement ?** sur `Admins and users`.\n\n1. Pour configurer les invites de consentement de l’administrateur et de l’utilisateur avec les valeurs appropriées pour `access_as_user` l’étendue, fournissez les informations suivantes dans les champs :</br>\n\n   * Entrez `Teams can access the user’s profile` **comme nom d’affichage Administration consentement**.\n\n   * Entrez `Allows Teams to call the app’s web APIs as the current user` **comme Administration description du consentement**.\n\n   * Entrez `Teams can access the user profile and make requests on the user’s behalf` en tant que **Nom d’affichage du consentement de l’utilisateur**.\n\n   * Entrez `Enable Teams to call this app’s APIs with the same rights as the user` la **description du consentement de l’utilisateur**.\n\n1. Définissez **État** sur **Activé**.\n\n1. Sélectionnez **Ajouter une étendue**.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/add-a-scope_1.png\" alt-text=\"Étendues.\":::\n\n    > [!NOTE]\n    > Le **nom de l’étendue** doit correspondre à l’URI **d’ID d’application** avec `/access_as_user` ajouté à la fin.</br>\n       `api://your ngrok/botid-00000000-0000-0000-0000-000000000000/access_as_user`\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/add-a-scope-final1_1.png\" alt-text=\"Étendues2.\":::\n\n1. Dans la section **Applications clientes autorisées**, identifiez les applications que vous souhaitez autoriser pour l'application Web de votre application. \n\n1. Sélectionnez **Ajouter une application cliente**.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Tab-ME-SSO/selectclientapp_1.png\" alt-text=\"Capture d’écran montrant la sélection de l’application cliente.\":::\n\n1. Entrez chacun des ID de client suivants et sélectionnez l’étendue autorisée :</br>\n\n     * Entrez **l’ID client** : `1fec8e78-bce4-4aaf-ab1b-5451cc387264` pour l’application mobile ou de bureau Teams.\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/addclientapplication1.png\" alt-text=\"Capture d’écran montrant l’ajout d’une application cliente\":::\n\n     * Entrez **l’ID client** :`5e3ce6c0-2b1f-4285-8d4b-75ee78787346` pour l’application web Teams.\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/addclientapplication2.png\" alt-text=\"Capture d’écran de l’ajout de l’ID client.\":::\n           \n1.  Sélectionnez **Étendues autorisées**.\n\n    L’image suivante affiche **l’ID client** :\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/Tab-ME-SSO/client-id-2.png\" alt-text=\"Capture d’écran montrant l’application cliente.\"::: \n\n1. Dans le volet gauche, sélectionnez **Autorisations d’API**. \n\n   > [!NOTE]\n   > Les utilisateurs doivent donner leur consentement à ces autorisations uniquement si l’application Azure AD est inscrite dans un autre locataire.\n\n1. Sélectionnez **Ajouter une autorisation**.\n\n1. Sélectionnez **Microsoft Graph**.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/microsoft-graph_1.png\" alt-text=\"microsoft-graph.\":::\n\n1. Sélectionnez **Autorisations déléguées**.\n\n1. Ajoutez les autorisations d’API suivantes :</br>\n    * **email**\n    * **offline_access**\n    * **Openid**\n    * **profil**\n    * **User.Read**\n\n1. Sélectionnez **Ajouter des autorisations**.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/other-permissions_1.png\" alt-text=\"Capture d’écran montrant l’ajout d’autres autorisations.\":::\n\n1. Dans le volet gauche, sélectionnez **Authentification** pour définir un URI de redirection. \n\n   > [!NOTE]\n   > Si une application ne reçoit pas le consentement de l’administrateur informatique, les utilisateurs doivent fournir le consentement la première fois qu’ils utilisent l’application.\n           \n     1. Sélectionnez **Ajouter une plateforme** > **web**.\n\n        :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/configure-platform1_1.png\" alt-text=\"plateforme web.\":::\n\n     1. Entrez l’URI de redirection de votre application en ajoutant au nom de `auth-end` domaine :</br> \n       `https://your ngrok/auth-end`. </br>\n\n     1. Activez **l’octroi implicite et les flux hybrides** en cochant les cases suivantes :\n         * **Jetons d’ID (utilisés pour les flux implicites)**\n         * **Jetons d’accès (utilisés pour les flux implicites et hybrides)**\n\n     1. Sélectionnez **Configurer**.\n\n        :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/configure-web_1.png\" alt-text=\"configurer le web.\":::\n\n**Pour mettre à jour le manifeste**\n\n1. Sélectionnez **Manifeste** dans le volet gauche.\n\n1. Vérifiez que l’élément de configuration est défini sur **« accessTokenAcceptedVersion » : 2**. Si ce n’est pas le cas, remplacez sa valeur par **2** , puis sélectionnez **Enregistrer**. \n\n   > [!Tip]\n   > Si vous testez déjà votre bot dans Teams, vous devez vous déconnecter du bot et vous déconnecter de Teams. Ensuite, reconnectez-vous pour voir cette modification.\n\n   :::image type=\"content\" source=\"./assets/images/bots/update-manifest.png\" alt-text= \"update manifest.\":::\n\n**Pour configurer Bot Service connexion**\n\n1. Accédez à **la page** >  Configuration **Ajouter des paramètres de connexion OAuth**.\n\n1. Sélectionnez le bouton **Ajouter des paramètres de connexion OAuth**.\n\n1. Dans **Nouveau paramètre de connexion**, entrez les informations suivantes :\n\n    | Champ | Valeur ou description |\n    | ----- | ----- |\n    | **Name** | Entrez le nom de votre nouveau paramètre de connexion. Vous pouvez utiliser le nom dans les paramètres de votre code de service bot. |\n    | **Fournisseur** | Sélectionnez **Azure Active Directory V2**. |\n    | **ID du client** | Enregistré précédemment en tant **qu’ID d’application Microsoft**. |\n    | **Clé secrète client** | Enregistré précédemment en tant que **Valeur** de l’ID de clé secrète client. |\n    | **URL d’échange de jetons** | Utilisez **l’URI d’ID d’application** obtenu précédemment lors de l’exposition du point de terminaison d’API. |\n    | **ID client** | Entrez **common**. |\n    | **Scopes** | Entrez **User.Read** et ajoutez toutes les **étendues** sélectionnées tout en spécifiant des autorisations pour les API en aval. |\n\n    :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/new-connection-setting_1.png\" alt-text=\"paramètre de serment.\":::\n\n 1. Sélectionnez **Enregistrer**.\n"
- title: Configurer les paramètres de l’application
  durationInMinutes: 1
  content: "1. Accédez à **appsettings.json** dans le dépôt cloné.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/app-setting-folder_1.png\" alt-text=\"emplacement de l’application.\":::\n\n1. Ouvrez **appsettings.json** dans Visual Studio Code.\n\n1. Mettez à jour les informations suivantes :  \n\n     * Remplacez par `\"MicrosoftAppId\"` **l’ID d’application Microsoft** de votre bot.\n     * Remplacez par `\"MicrosoftAppPassword\"` valeur **d’ID de** clé secrète client de votre bot.\n     * Remplacez par `\"SiteUrl\"` votre URL ngrok.\n     * Remplacez par `\"ConnectionName\"` le nom du paramètre de connexion OAuth.\n     * Remplacez par `\"TenantId\"` l’ID de locataire du locataire où l’application est utilisée.\n     * Remplacez par `\"ClientId\"` **l’ID d’application Microsoft** de votre bot.\n     * Remplacez par `\"AppSecret\"` valeur **d’ID de** clé secrète client de votre bot.\n     * Remplacez `\"ApplicationIdURI\"` sous la forme .`api://*******.ngrok.io/botid-{AppID}`\n\n    :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/app-setting1.png\" alt-text=\"Paramètres de l’application.\":::\n"
- title: Configurer le fichier manifeste
  durationInMinutes: 1
  content: "1. Accédez à `manifest.json` dans le dépôt cloné.\n\n    :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/folder-manifest_1.png\" alt-text=\"Emplacement du fichier manifeste.\":::\n\n1. Ouvrez `manifest.json` dans **Visual Studio Code** et apportez les modifications suivantes :\n\n     * Remplacez par `DOMAIN-NAME` votre URL ngrok.\n     * Remplacez par `YOUR-MICROSOFT-APP-ID` **l’ID d’application Microsoft** de votre bot.\n\n         > [!NOTE]\n         > Selon le scénario `[YOUR-MICROSOFT-APP-ID]` et `[DOMAIN-NAME]` peut se produire plusieurs fois.\n\n     * Remplacez par `\"resource\"` `api://*******.ngrok.io/botid-{AppID}`.</br>\n    \n    ![Image du manifeste2](~/assets/images/Tab-ME-SSO/vs-manifest.png)\n"
- title: Générer et exécuter le service
  durationInMinutes: 1
  content: "**Pour générer et exécuter le service à l’aide de la dernière version de Visual Studio ou de la ligne de commande**\n\n# <a name=\"visual-studio\"></a>[Visual Studio](#tab/vs2019)\n\n   1. Lancez la dernière version de Visual Studio.\n   1. Sélectionnez **Fichier** > **Ouvrir le** > **projet/la solution**.\n\n      ![Ouvrir un fichier](~/assets/images/Tab-ME-SSO/open-project1.png)\n\n   1. Sélectionnez **Le fichier Exemple d’authentification unique d’application.csproj** dans le dossier **csharp** .\n\n      :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/project-folder1_1.png\" alt-text= \"Project folder.\":::\n\n   1. Appuyez sur **F5** pour exécuter le projet.\n\n   1. Sélectionnez **Oui** si la boîte de dialogue suivante s’affiche :\n\n      :::image type=\"content\" source=\"./assets/images/sbs-outgoing-webhooks/outgoing-webhook-certificate.png\" alt-text=\"Approuver le certificat.\":::\n\n      Une page web s’affiche avec un message **Votre bot est prêt !**\n\n      :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/bot-completion-explorer.png\" alt-text=\"Application prête.\":::\n\n    \n# <a name=\"command-line\"></a>[Ligne de commande](#tab/cli)\n\nAccédez au dossier **csharp** dans une fenêtre d’invite de commandes et entrez la commande suivante :\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/Tab-ME-SSO/dotnet-run1.png)\n  \n"
- title: Charger l’application SSO dans Teams
  durationInMinutes: 1
  content: "1. Dans votre dépôt cloné, accédez à **csharp > App SSO Sample > TeamsAppManifest**.\n\n1. Créez un .zip avec les fichiers suivants présents dans le dossier **Manifeste** : \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/upload-tab-me-sso_1.png\" alt-text=\"charger le manifeste.\":::\n\n1. Accédez à **Microsoft Teams**.\n\n1. Sélectionnez **Applications** > **Gérer vos applications**.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/manageapps_1.png\" alt-text=\"Gérer les applications\":::\n\n1. Sélectionnez **Charger une application****Charger une application** >  personnalisée.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/uploadapp_1.png\" alt-text=\"Charger une application personnalisée\":::\n\n1. Sélectionnez **Ouvrir** pour charger le fichier .zip que vous avez créé dans le dossier **Manifeste** .\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/upload-tab-me-sso-open_1.png\" alt-text=\"charger l’application.\":::)\n\n1. Sélectionnez **Ajouter**.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/add-sso-app_1.png\" alt-text=\"ajouter une application.\":::\n\n1. Envoyez un message au bot. \n1. Le bot effectue l’authentification unique et affiche la carte de profil avec l’invite d’options pour afficher le jeton.\n\n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/Congratulation-image_1.png\" alt-text=\"Image de félicitations.\":::\n\n1. Sélectionnez **Oui** pour afficher le jeton ou **Non** pour continuer la conversation.\n  \n   :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/token-view1_1.png\" alt-text=\"vue de jeton.\":::\n\n  1. Si l’authentification unique n’est pas effectuée, le bot exécute la méthode d’authentification par défaut pour votre onglet.\n\n     :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/not-login11_1.png\" alt-text=\"vous ne vous connectez pas.\":::\n\n  1. Sélectionnez ellipse ●●● pour ouvrir l’application d’extension de message.\n         \n  1. Sélectionnez votre nouvelle application d’authentification unique.\n\n      :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/recent-app-sso_1.png\" alt-text=\"Application D’authentification unique.\":::\n\n  1. Sélectionnez **Se connecter**.\n\n      :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/sign-in-sso1_1.png\" alt-text= \"sign in.\":::\n\n  1. Entrez vos informations d’identification dans la fenêtre **Connexion** , puis sélectionnez **Suivant**.\n\n      :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/sign-in-box.png\" alt-text= \"sign-in box.\":::\n  \n  1. Sélectionnez **Accepter**.\n\n      :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/consent-box.png\" alt-text= \"consent box.\":::\n\n  1. Sélectionnez l’extension de message et votre application.\n\n  1. Sélectionnez votre profil sous la zone de recherche. Vous verrez la sortie suivante :\n\n      :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/hello-megan-profile_1.png\" alt-text= \"Profile.\":::\n\n  1. Envoyer `https://profile.botframework.com` à l’application pour obtenir une carte de profil.\n   \n      :::image type=\"content\" source=\"./assets/images/Tab-ME-SSO/profile-card_1.png\" alt-text= \"Profile card.\":::\n"
- title: Relever le défi
  durationInMinutes: 1
  content: >
    Avez-vous trouvé une sortie comme celle-ci ?


    :::image type="content" source="./assets/images/Tab-ME-SSO//hello-megan-profile245_1.png" alt-text="Image de félicitations.":::
- content: Vous avez terminé le tutoriel pour commencer à utiliser l’authentification unique pour l’application d’extension de tabulation et de message.
