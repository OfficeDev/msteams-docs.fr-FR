### YamlMime:Tutorial
title: 'Créer votre première application à l’aide de C #'
metadata:
  title: 'Hello World avec C #'
  description: Dans ce didacticiel, vous allez apprendre à créer Hello World application avec C#.
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: Retour à Démarrage vue d’ensemble
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: e3d4a0ff69b2bd0d882a7ae6d6224548955f1171
  ms.sourcegitcommit: 5070746e736edb4ae77cd3efcb2ab8bb2e5819a0
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 06/16/2022
  ms.locfileid: "66124010"
items:
- durationInMinutes: 1
  content: >
    Démarrez Microsoft Teams développement d’applications en créant votre première application avec un onglet, un bot et une fonctionnalité d’extension de message.


    >Cette application aura toutes les fonctionnalités et chacune possède sa propre interface utilisateur et son expérience utilisateur :


    :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png" alt-text="Diagramme montrant que cette application comporte trois fonctionnalités." border="true":::


    Dans ce didacticiel, vous allez apprendre :


    - Comment configurer un nouveau projet.

    - Comment créer trois applications avec une fonctionnalité différente : onglet, bot et extension de message à l’aide de C# et Visual Studio 2019.

    - Comment déployer votre application à partir du portail des développeurs.
- title: Conditions préalables
  durationInMinutes: 1
  content: "Voici la liste des outils que vous devez installer pour créer et déployer une application Teams.\n\n| &nbsp; | Installer | Pour l’utilisation... |\n| --- | --- | --- |\n| **Obligatoire** | &nbsp; | &nbsp; |\n| &nbsp; | [Visual Studio 2019](https://visualstudio.com/download)<br> Installez l’une des deux charges de travail suivantes :<br> • **développement ASP.NET et web** <br> • **Développement multiplateforme .NET Core** | .NET. Vous pouvez installer l’édition community gratuite de Visual Studio 2019, ainsi que les charges de travail. |\n| &nbsp; | [Git](https://git-scm.com/downloads) | Git pour utiliser l’exemple de dépôt d’application C# à partir de GitHub. |\n| &nbsp; | [ngrok](https://ngrok.com/download) | Teams fonctionnalités d’application (bot conversationnel et extension de message) nécessitent des connexions entrantes. Vous devez exposer votre système de développement à Teams par le biais d’un tunnel. Un tunnel n’est pas nécessaire pour les applications qui incluent uniquement des onglets. Ce package est installé dans le répertoire du projet (à l’aide de npm`devDependencies`). |\n| &nbsp; | [Toolkit Teams](#install-teams-toolkit) | Extension Visual Studio 2019 qui crée une structure de projet pour votre application. Utilisez la dernière version. |\n| &nbsp; | [Documentation pour les développeurs](https://dev.teams.microsoft.com/) | Portail web pour configurer, gérer et distribuer votre application Teams, y compris à votre organisation ou au magasin Teams. |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams pour collaborer avec toutes les personnes avec lesquelles vous travaillez via les applications pour les conversations, les réunions, les appels, le tout au même endroit. |\n| **Optional** | &nbsp; | &nbsp; |\n| &nbsp; | [Azure Tools pour Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) et [Microsoft Azure CLI](/cli/azure/install-azure-cli) | Outils Azure pour accéder aux données stockées ou déployer un backend cloud pour votre application Teams dans Azure. |\n\n\n## <a name=\"verify-git-installation\"></a>Vérifier l’installation de Git\n\nSi Visual Studio installation vous invite à ajouter `git` au chemin d’accès, sélectionnez-le. \n\nPour vérifier la version de Git installée :\n\n1. Ouvrez une fenêtre de terminal. \n2. Exécutez la commande suivante pour vérifier la `git` version installée sur votre ordinateur :\n\n    ```bash\n    $ git --version\n    ```\n\n    Exemple de sortie : `git version 2.17.1.windows.2`\n\n## <a name=\"install-teams-toolkit\"></a>Installer Teams Toolkit\n\nTeams Toolkit simplifie le processus de développement avec des outils permettant de créer une structure de projet pour votre application. Il crée la structure de répertoire nécessaire pour toutes les fonctionnalités sélectionnées avec les fichiers requis en place, prêts à générer le projet.\n\nTeams Toolkit est disponible en tant qu’extension Visual Studio 2019.\n\nPour installer Teams extension Toolkit :\n\n1. Ouvrez Visual Studio 2019 et sélectionnez Les **extensions** > **gérer les extensions**.\n1. Dans la zone de recherche, entrez **Teams Toolkit**.\n1. Sélectionnez **Télécharger** en regard du kit de ressources Teams.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/install-teams-toolkit-vs19.png\" alt-text=\"Image montrant l’installation de Teams Toolkit\"::: \n\n    Les modifications sont disponibles après la fermeture Visual Studio 2019. Elle est requise, car Visual Studio 2019 doit redémarrer après l’installation de l’extension.\n\n1. Sélectionnez **Fermer**.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/toolkit-installed.png\" alt-text=\"Image montrant l’installation effectuée pour Teams Toolkit\" lightbox=\"~/assets/images/teams-toolkit-v2/toolkit-installed.png\" border=\"true\":::\n\n1. Fermez Visual Studio 2019.\n    \n    Le programme d’installation VSIX s’ouvre avec des instructions pour l’installation de l’extension.\n\n1. Suivez les instructions du programme d’installation de VSIX pour terminer l’installation du kit de ressources.\n1. Rouvrez Visual Studio 2019.\n\nLes applications Teams seront disponibles en tant que modèle dans Visual Studio 2019.\n\nVous trouverez également le kit de ressources Teams sur la [Place de marché du code Visual Studio](https://marketplace.visualstudio.com/items?itemName=msft-vsteamstoolkit.vsteamstoolkit).\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Configurer votre locataire de développement Teams\n\nUn **locataire** est comme un espace ou un conteneur pour votre organisation dans Teams, où vous discutez, partagez des fichiers et exécutez des réunions. Cet espace est également l’endroit où vous chargez et testez votre application. Vérifions si vous êtes prêt à développer avec le locataire.\n\n### <a name=\"check-for-sideloading-option\"></a>Rechercher l’option de chargement indépendant\n\nAprès avoir créé l’application, vous devez charger votre application dans Teams sans la distribuer. Ce processus est appelé chargement indépendant. Connectez-vous à votre compte Microsoft 365 pour afficher cette option.\n\n> [!NOTE]\n> Le chargement indépendant est nécessaire pour afficher un aperçu et tester des applications dans Teams environnement local. S’il n’est pas activé, vous ne pourrez pas afficher un aperçu et tester votre application dans Teams localement.\n\nAvez-vous déjà un locataire et disposez-vous de l’accès administrateur ? Vérifions si c’est vraiment le cas !\n\nVérifiez si vous pouvez charger des applications de version test dans Teams :\n\n1. Dans le client Teams, sélectionnez l’icône **Du Store**.\n1. Sélectionnez **Gérer vos applications**.\n1. Recherchez l’option permettant de **Télécharger une application personnalisée**. Si vous voyez l’option, le chargement indépendant des applications est activé.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"L’illustration montre l’option permettant de charger une application personnalisée dans Teams.\":::\n\n    > [!NOTE]\n    > Si Teams n’affiche pas l’option de chargement d’une application personnalisée, contactez votre administrateur Teams.\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Créer un locataire de développeur Teams gratuit (facultatif)\n\nSi vous n’avez pas de compte Teams, vous pouvez l’obtenir gratuitement. Rejoignez le programme de développement Microsoft 365!\n\n1. Accédez au[Programme pour les développeurs Microsoft 365](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Sélectionnez **Joindre maintenant** et suivez les instructions à l’écran.\n1. Dans l’écran d’accueil, **sélectionnez Configurer l’abonnement E5**.\n1. Configurez votre compte d’administrateur. Une fois que vous avez terminé, l’écran suivant s’affiche :\n\n    :::image type=\"content\" source=\"~/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"Exemple de ce que vous voyez après vous être inscrit au programme de développement Microsoft 365.\":::\n\n1. Connectez-vous à Teams à l’aide du compte d’administrateur que vous venez de configurer. Vérifiez que vous disposez de **l’Télécharger une option d’application personnalisée** dans Teams.\n\n## <a name=\"get-a-free-azure-account\"></a>Obtenir un compte Azure gratuit\n\nSi vous souhaitez héberger votre application ou accéder aux ressources dans Azure, vous devez disposer d’un abonnement Azure. [Créez un compte gratuit](https://azure.microsoft.com/free/) avant de commencer.\n\nVous disposez maintenant de tous les outils et configurez vos comptes. Ensuite, nous allons configurer votre environnement de développement et commencer à créer !\n\n> [!NOTE]\n> Utilisez une fenêtre de terminal appropriée sur votre plateforme. Ces exemples utilisent Git Bash, mais peuvent être exécutés sur la plupart des plateformes.\n\nOuvrez la dernière version de Visual Studio et installez toutes les mises à jour.\n\nVous pouvez utiliser la même fenêtre de terminal pour exécuter les commandes de ce didacticiel.\n\n<a name=\"DownloadSample\"></a>\n\n## <a name=\"download-the-sample\"></a>Télécharger l’exemple\n\nPour ce didacticiel, utilisez [Hello, World!](https://github.com/OfficeDev/Microsoft-Teams-Samples/tree/main/samples/app-hello-world/csharp) exemple en C#. Vous pouvez le télécharger et le cloner à partir de GitHub.\n\nPour utiliser cet exemple, clonez l’exemple de référentiel de l’une des manières suivantes :\n\n- [Utilisation de Git Bash](#to-use-git-bash-to-clone-the-sample-repo)\n- [Utilisation de Visual Studio 2019](#to-use-visual-studio-2019-to-clone-the-sample-repo)\n\n### <a name=\"to-use-git-bash-to-clone-the-sample-repo\"></a>Pour utiliser Git Bash pour cloner l’exemple de référentiel\n\n- Exécutez la commande suivante dans une fenêtre de terminal pour cloner l’exemple de référentiel sur votre ordinateur :\n\n    ```bash\n    git clone https://github.com/OfficeDev/Microsoft-Teams-Samples.git\n    ```\n    L’exemple de référentiel pour l’application C# est cloné sur votre ordinateur à l’emplacement par défaut.\n\n    > [!TIP]\n    > Vous pouvez [dupliquer](https://help.github.com/articles/fork-a-repo/) ce [référentiel](https://github.com/OfficeDev/Microsoft-Teams-Samples) pour modifier et enregistrer vos modifications dans GitHub.\n\n    <a name=\"BuildRun\"></a>\n\n    Vous pouvez afficher le référentiel cloné en l’ouvrant dans Visual Studio 2019. \n\n### <a name=\"to-use-visual-studio-2019-to-clone-the-sample-repo\"></a>Pour utiliser Visual Studio 2019 pour cloner l’exemple de dépôt\n\n1. Ouvrez Visual Studio 2019.\n1. Sélectionnez **Cloner un référentiel**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-clone-repo.png\" alt-text=\"Cloner un exemple de dépôt pour l’application Teams c#\" border=\"true\":::\n\n1. Entrez `https://github.com/OfficeDev/Microsoft-Teams-Samples.git` comme chemin d’accès pour le clonage du référentiel :\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/repo-clone-path.png\" alt-text=\"Cloner un exemple de dépôt pour l’application Teams c#\" border=\"true\":::\n\n1. Entrez l’emplacement où vous souhaitez cloner le référentiel, puis sélectionnez **Cloner**.\n\n    L’exemple de dépôt est cloné et Visual Studio s’ouvre. Vous pouvez afficher le dépôt cloné dans le **Explorateur de solutions**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-repo-cloned.png\" alt-text=\"Exemple de dépôt pour l’application c# Teams clonée\" border=\"true\":::\n\nMaintenant que vous avez cloné l’exemple de référentiel, générons votre première application C# pour Teams.\n"
- title: Générer et exécuter votre première application C#
  durationInMinutes: 1
  content: "\nUne fois que vous avez cloné le référentiel pour l’exemple d’application C#, vous pouvez générer et exécuter l’application dans votre environnement local.\n\nDans cette page, vous allez apprendre à :\n1. [Créer votre première application](#build-your-first-app)\n1. [Déployer votre exemple d’application localement](#deploy-your-sample-app-locally)\n\n## <a name=\"build-your-first-app\"></a>Créer votre première application\n\nVous pouvez afficher la structure du projet dans le **Explorateur de solutions** après la création de l’espace de travail. À présent, vous devez générer et exécuter votre application.\n\n**Pour générer et exécuter l’exemple cloné**\n\n1. Ouvrez le fichier solution **Microsoft.Teams. Samples.HelloWorld.sln** à partir du répertoire **Microsoft-Teams-Samples/samples/app-hello-world/csharp** de l’exemple.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/hello-world-sln-open.png\" alt-text=\"Image montrant Hello World structure de répertoires de solution\" border=\"true\":::\n\n1. Sélectionnez le menu **Project**, puis **Microsoft.Teams. Propriétés Samples.HelloWorld.Web**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-menu.png\" alt-text=\"Image montrant Project menu pour sélectionner l’option Propriétés\" border=\"true\":::\n\n1. Sélectionnez **Déboguer** dans le volet gauche de la fenêtre **Propriétés** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-properties.png\" alt-text=\"Image montrant Fenêtre Propriétés\" border=\"true\":::\n\n1. Parcourez l’écran pour afficher le **Paramètres de serveur web**.\n\n1. Définissez les paramètres suivants dans le volet **Débogage** :\n    - Définissez **l’URL de l’application** sur `http://localhost:3333/`.\n    - Effacer **Activer SSL**.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-web-server-settings.png\" alt-text=\"Image montrant les paramètres du serveur web pour les propriétés du projet C#\" border=\"true\":::\n\n1. Sélectionnez **Générer la solution** dans le menu **Générer** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-build-complete.png\" alt-text=\"Image montrant la build terminée\" border=\"true\":::\n\n1. Sélectionnez la touche **F5** ou **sélectionnez Démarrer le débogage** dans le menu **Déboguer** pour exécuter l’exemple.\n\n    Lorsque l’application démarre, une fenêtre de navigateur s’ouvre. Il affiche la racine de votre application. Vous pouvez accéder aux URL suivantes pour vérifier que toutes les URL d’application sont chargées :\n\n    - `https://localhost:3333/`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-after-debug.png\" alt-text=\"Image montrant l’hôte local\" border=\"true\":::\n\n    - `https://localhost:3333/hello`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-hello.png\" alt-text=\"Image montrant la page Hello de l’application\" border=\"true\":::\n\n    - `https://localhost:3333/first`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-first-tab.png\" alt-text=\"Image montrant le premier onglet de l’application\" border=\"true\":::\n\n    - `https://localhost:3333/second`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-second-tab.png\" alt-text=\"Image montrant le deuxième onglet de l’application\" border=\"true\":::\n\n    > [!Note]\n    > Si vous recevez une erreur `Could not find a part of the path … bin\\roslyn\\csc.exe`, mettez à jour le package avec la commande `Update-Package Microsoft.CodeDom.Providers.DotNetCompilerPlatform -r`.\n\n## <a name=\"deploy-your-sample-app-locally\"></a>Déployer votre exemple d’application localement\n\nMicrosoft Teams applications sont des applications web qui fournissent une ou plusieurs fonctionnalités. Mettez votre application à disposition sur Internet afin que la plateforme Teams puisse la charger. Hébergez votre application `ngrok` pour créer un tunnel vers le processus local sur votre ordinateur.\n\nAprès avoir hébergé votre application, notez son URL racine, telle que `https://yourteamsapp.ngrok.io` ou `https://yourteamsapp.azurewebsites.net`.\n\n### <a name=\"tunnel-using-ngrok\"></a>Tunnel à l’aide de ngrok\n\nAprès avoir installé ngrok, vous pouvez créer un tunnel pour déployer votre application localement :\n\n1. Ouvrez une nouvelle fenêtre de terminal.\n1. Exécutez la commande suivante pour créer un tunnel. L’exemple d’application utilise le port 3333.\n\n    ```bash\n    ngrok http 3333 -host-header=localhost:3333\n    ````\n    Le tunnel ngrok est créé. Voici un exemple :\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-ngrok-tunnel.png\" alt-text=\"Image montrant le tunnel ngrok\" border=\"true\":::\n\n    Vous pouvez essayer d’ajouter `hello`ou `second` `first`d’accéder à l’URL du tunnel ngrok pour afficher différentes pages d’onglet de l’application.\n    \n    Ngrok écoute les demandes provenant d’Internet et les achemine vers votre application s’exécutant sur le port 3333.\n\nPour vérifier le déploiement local de l’application :\n\n1. Ouvrez le navigateur.\n1. Chargez votre application à l’aide de l’URL suivante :\n\n    `https://<forwarding address in ngrok console session>/`\n\n    Voici un exemple d’URL :\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-ngrok-verify-tunnel.png\" alt-text=\"Image montrant l’application C# s’exécutant localement sur le tunnel ngrok\" border=\"true\":::\n\n1. Notez l’adresse de transfert dans la console ngrok. Vous avez besoin de cette URL pour déployer votre application dans Teams.\n\n    > [!NOTE]\n    > Si vous avez utilisé un autre port pendant la [génération](#build-your-first-app), assurez-vous d’utiliser le même numéro de port pour configurer le `ngrok` tunnel.\n    > [!TIP]\n    > Il est judicieux de s’exécuter `ngrok` dans une autre fenêtre de terminal. Cela permet de ne pas `ngrok` interférer avec l’application, quand vous devrez arrêter, reconstruire et réexécuter l’application. La `ngrok` session fournit des informations de débogage utiles dans cette fenêtre.\n    > [!IMPORTANT]\n    > Si vous utilisez la version gratuite de ngrok, votre application sera disponible uniquement pendant la session actuelle sur votre ordinateur de développement. Elle n’est pas disponible si la machine est arrêtée ou mise en veille. Lorsque vous redémarrez le service, il retourne une nouvelle adresse. Ensuite, vous devez mettre à jour chaque emplacement qui utilise l’adresse obsolète. N’oubliez pas cette étape lors du partage de l’application à des fins de test.\n"
- title: Configurer votre première application C# à l’aide du portail des développeurs
  durationInMinutes: 1
  content: "\nVous pouvez utiliser le [portail des développeurs](https://dev.teams.microsoft.com/) pour charger le package d’application sur Teams et configurer les fonctionnalités de l’application. Le portail des développeurs est une application Teams qui simplifie la création et l’inscription d’une application. Installez à partir du magasin Teams!\n\nAprès avoir généré et testé votre application Teams, vous pouvez la configurer et la prévisualiser à l’aide du portail des développeurs.\n\nDans cette page, vous allez apprendre à [configurer le package d’application dans le portail des développeurs](#configure-the-app-package-in-developer-portal).\n\n<details>\n<summary>Option Publier dans Visual Studio 2019</summary>\n\nCe didacticiel utilise le portail des développeurs pour configurer les fonctionnalités de l’application et publier votre application. \n\nToutefois, Visual Studio 2019 offre une prise en charge intégrée du déploiement d’applications sur différents fournisseurs, notamment Azure :\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/publish-to-azure.png\" alt-text=\"Image montrant l’élément de menu Publier sur Azure dans Visual Studio 2019\" border=\"true\":::\n\nMicrosoft Azure héberge votre application .NET sur un niveau gratuit. Il utilise une infrastructure partagée suffisante pour exécuter l’exemple `Hello World` . Pour plus d’informations, consultez [la création d’un compte Azure gratuit](https://azure.microsoft.com/free/).\n\nSi vous utilisez cette option, vous pouvez entrer les détails du site Azure et des ressources Azure et publier votre application. \n\nPour ce didacticiel, vous n’avez pas besoin d’utiliser cette étape.\n\n</details>\n\n## <a name=\"configure-the-app-package-in-developer-portal\"></a>Configurer le package d’application dans le portail des développeurs\n\nVous pouvez utiliser le [portail des développeurs](https://dev.teams.microsoft.com/) pour configurer le package d’application et ses fonctionnalités. Le portail des développeurs est une application Teams qui simplifie la création et l’inscription d’une application. Installez à partir du magasin Teams!\n\nLa configuration du package d’application inclut :\n\n1. [Importation du package d’application dans le portail des développeurs](#import-the-app-package-in-developer-portal)\n1. [Configuration des fonctionnalités d’application](#configure-your-app-capabilities)\n\n### <a name=\"import-the-app-package-in-developer-portal\"></a>Importer le package d’application dans le portail des développeurs\n\nPour importer le package d’application :\n\n1. Ouvrir Microsoft Teams.\n\n1. Sélectionnez l’icône **Store** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\"::: dans la barre de gauche.\n\n1. Recherchez **le portail des développeurs** dans la barre de recherche, puis sélectionnez **Portail des développeurs**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/select-dev-portal-app.png\" alt-text=\"Sélectionner l’application Portail des développeurs\" border=\"true\":::\n\n1. Sélectionnez **Ouvrir**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/open-dev-portal.png\" alt-text=\"Image montrant l’application Portail des développeurs ouverte\" border=\"true\":::\n\n    Le portail des développeurs s’ouvre.\n\n1. Sélectionnez l’onglet **Applications** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-app.png\" alt-text=\"Application Portail des développeurs\" border=\"true\":::\n\n1. Sélectionnez **Importer l’application**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/import-app-in-dev-portal.png\" alt-text=\"Image montrant le bouton Importer l’application\" border=\"true\":::\n\n1. Sélectionnez le package `helloworldapp.zip` d’application dans le chemin d’accès suivant dans votre structure de répertoire de référentiel d’exemple C# :\n\n    `<path to cloned C# repo>/Source/Repos/Microsoft-Teams-Samples/samples/app-hello-world/csharp/Microsoft.Teams.Samples.HelloWorld.Web/bin/Debug/netcoreapp3.1`\n\n    **L’application Hello World** est importée dans le portail des développeurs.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-imported-dev-portal.png\" alt-text=\"Image montrant l’application importée dans Teams\" border=\"true\":::\n\n### <a name=\"take-a-tour-of-your-app-in-developer-portal\"></a>Visite guidée de votre application dans le portail des développeurs\n\nUne fois que vous avez importé votre application dans le portail des développeurs, vous pouvez afficher ses détails, y compris le fichier manifeste.\n\n#### <a name=\"view-app-information\"></a>Afficher les informations de l’application\n\n1. Sélectionnez **Informations de base** dans le volet gauche du portail des développeurs.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-left-pane-basic.png\" alt-text=\"Image montrant le volet gauche du portail des développeurs\" border=\"true\":::\n\n1. Notez les informations suivantes à partir des informations de base :\n    - ID de l’application\n    - Informations sur les développeurs\n    - URL d’application\n\n1. Sélectionnez **Personnalisation dans** le volet gauche pour afficher les informations de personnalisation.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-branding.png\" alt-text=\"Image montrant les informations de personnalisation de l’application\" border=\"true\":::\n\n    Ces détails sont importants si vous écrivez une nouvelle application pour la distribution.\n\n#### <a name=\"view-app-features\"></a>Afficher les fonctionnalités de l’application\n\n- Sélectionnez **les fonctionnalités de l’application** dans le volet gauche du portail des développeurs.\n\n    Les fonctionnalités de l’application apparaissent dans le volet droit. Vous pouvez afficher les cartes pour l’application personnelle, le bot et l’extension de message.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-csharp-app-features.png\" alt-text=\"Image montrant les fonctionnalités de l’application\" border=\"true\":::\n\n#### <a name=\"view-the-app-manifest\"></a>Afficher le manifeste de l’application\n\nVous utilisez le fichier manifeste pour configurer les fonctionnalités, les ressources requises et d’autres attributs importants pour votre application.\n\nPour afficher le manifeste de l’application :\n\n- Sélectionnez **Publier** dans le volet gauche pour ouvrir la liste déroulante, puis sélectionnez **Package d’application**.\n    \n    Le fichier manifeste s’affiche dans le volet droit.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-manifest-dev-portal.png\" alt-text=\"Image montrant le fichier manifeste de l’application dans le portail des développeurs\" border=\"true\":::\n\n### <a name=\"configure-your-app-capabilities\"></a>Configurer les fonctionnalités de votre application\n\nUne fois que vous avez importé votre application dans le portail des développeurs, l’étape suivante consiste à configurer les fonctionnalités de l’application. Le portail des développeurs contient toutes les informations d’application dans différentes sections. Cela facilite la configuration des fonctionnalités de l’application.\n\nÀ l’aide du portail des développeurs, vous pouvez :\n- [Configurer l’application onglet personnel](#configure-personal-tab-app)\n- [Configurer le bot](#configure-bot)\n- [Configurer l’extension de message](#configure-message-extension)\n\n#### <a name=\"configure-personal-tab-app\"></a>Configurer l’application onglet personnel\n\nPour configurer l’application onglet personnel :\n\n1. Sélectionnez l’icône :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: dans la carte **d’application personnelle** dans le volet **Fonctionnalités** de l’application, puis **sélectionnez Modifier**.\n\n    Les détails de l’onglet Hello s’affichent.\n\n1. Sélectionnez l’icône de l’onglet :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: Hello, puis **sélectionnez Modifier** pour ouvrir les détails de l’application à mettre à jour.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-edit-tab.png\" alt-text=\"Image montrant le menu onglet Hello\" border=\"true\":::\n\n1. Entrez les détails de l’application pour l’onglet Hello dans **Ajouter un onglet à votre application personnelle**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-personal-tab-details.png\" alt-text=\"Image montrant les détails de l’onglet Hello\" border=\"true\":::\n\n    Entrez les détails suivants :\n    - **Nom** : onglet Hello.\n    - **URL de contenu** et **URL du site web** : adresse de transfert dans la session de console ngrok.\n    - **Contexte** : sélectionnez **l’onglet Personnel**.\n\n1. Sélectionnez **Mettre à jour**.\n\n    Les détails de l’onglet Hello s’affichent dans le volet **Application personnelle** .\n\n1. Sélectionnez **Enregistrer**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-tab-update.png\" alt-text=\"Image montrant les détails de l’onglet Hello à enregistrer\" border=\"true\":::\n\n    Le volet **Application personnelle** affiche désormais le nouvel onglet et un onglet À propos créé automatiquement.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-about-tab-added.png\" alt-text=\"Image montrant les détails de l’onglet Hello et de l’onglet À propos de\" border=\"true\":::\n\n#### <a name=\"configure-bot\"></a>Configurer le bot\n\nIl est facile d’ajouter les fonctionnalités des bots à votre application. L’exemple d’application Hello World possède déjà un bot, mais vous devez l’inscrire auprès de Teams.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-no-id.png\" alt-text=\"Image montrant l’application de bot importée sans ID d’application\" border=\"true\":::\n\nLe bot qui a été importé à partir de l’exemple n’a pas d’ID d’application associé. Vous devez le supprimer et créer un bot. Le portail des développeurs crée un ID d’application et l’inscrit auprès de Teams.\n\nL’ajout et la configuration d’un bot impliquent les opérations suivantes :\n\n1. [Ajout d’un nouveau bot](#to-add-a-new-bot)\n1. [Ajout d’un bot à une application](#to-add-bot-to-app)\n1. [Configuration de l’étendue du bot](#to-configure-bot-scope)\n\n##### <a name=\"to-add-a-new-bot\"></a>Pour ajouter un nouveau bot\n\n1. Sélectionnez l’icône :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: dans la carte **Bot** dans le volet **Fonctionnalités de l’application** , puis **sélectionnez Supprimer**.\n\n1. Sélectionnez **Outils** pour ajouter une fonctionnalité.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/tools-option.png\" alt-text=\"Image montrant l’option Outils\" border=\"true\":::\n\n1. Sélectionnez **Gestion des bots** dans le volet **Outils** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tools-bot-card.png\" alt-text=\"Image montrant le volet de gestion des bots\" border=\"true\":::\n\n1. Sélectionnez **+ Nouveau bot** dans le volet **de gestion du bot** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-management-new-bot.png\" alt-text=\"Image montrant l’option nouveau bot\" border=\"true\":::\n\n1. Entrez un nom approprié pour votre bot, puis sélectionnez **Ajouter**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot.png\" alt-text=\"Image montrant comment ajouter un bot\" border=\"true\":::\n\n    Le volet **Configurer** s’affiche avec les détails du nouveau bot dans le volet gauche.\n\n1. Entrez l’URL de transfert à partir de la `ngrok` console, puis **sélectionnez Enregistrer**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-configure-bot-endpoint.png\" alt-text=\"Image montrant comment ajouter un point de terminaison de bot\" border=\"true\":::\n\n1. Sélectionnez **Secrets client** , puis **ajoutez une clé secrète client à votre bot** pour générer un mot de passe pour le bot.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-client-secret-pane.png\" alt-text=\"Image montrant la section Clé secrète client\" border=\"true\":::\n\n    Le portail des développeurs génère un mot de passe pour le bot.\n\n    Vous pouvez utiliser l’icône :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/copy-icon.png\"::: pour copier le mot de passe. Pour ce didacticiel, vous n’avez pas besoin de le copier.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-client-secret-generated.png\" alt-text=\"Image montrant la clé secrète client générée\" border=\"true\":::\n\n1. Sélectionnez **OK**.\n\n1. Sélectionnez **< Bots** pour revenir au volet **de gestion** des bots.\n\n    Le volet **de gestion du bot** affiche le nouveau bot ajouté avec un ID d’application.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-mgmt-pane.png\" alt-text=\"Image montrant le nouveau bot avec l’ID d’application\" border=\"true\":::\n\n1. Veillez à enregistrer l’ID de bot avec le mot de passe de la section **Clé secrète client** .\n\n##### <a name=\"to-add-bot-to-app\"></a>Pour ajouter un bot à l’application\n\n1. Ouvrez le volet **Fonctionnalités de l’application** , puis sélectionnez la carte **Bot** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-card.png\" alt-text=\"Image montrant la carte du bot\" border=\"true\":::\n\n    Le volet **Bot** s’affiche.\n\n1. Sélectionnez votre application bot dans **Sélectionner un bot existant**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-new-bot-app.png\" alt-text=\"Image montrant comment ajouter une application bot existante\" border=\"true\":::\n\n    Le nouveau bot est ajouté à votre application avec son propre ID d’application.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-new-bot-added.png\" alt-text=\"Image montrant le nouveau bot ajouté à l’application\" border=\"true\":::\n\n##### <a name=\"to-configure-bot-scope\"></a>Pour configurer l’étendue du bot\n\n1. Sélectionnez l’icône :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: sur la nouvelle carte **bot** , puis **sélectionnez Modifier**.\n\n1. Parcourez le volet **Bot** pour afficher la section **Commandes** , puis sélectionnez **+ Ajouter une commande**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-add-command.png\" alt-text=\"Image montrant la section commandes\" border=\"true\":::\n\n1. Entrez un nom et une description appropriés pour la **commande**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot-command.png\" alt-text=\"Image montrant comment ajouter des détails de commandes\" border=\"true\":::\n\n1. Sélectionnez les trois étendues de la commande, puis sélectionnez **Ajouter**.\n    - **Personnel**\n    - **Équipe**\n    - **Conversation de groupe**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-add.png\" alt-text=\"Image montrant comment enregistrer les détails des commandes\" border=\"true\":::\n\n    La nouvelle commande est ajoutée à la section **Commandes** du volet **Bot** .\n\n1. Sélectionnez **Enregistrer**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-new-bot-command.png\" alt-text=\"Image montrant les détails des commandes à enregistrer\" border=\"true\":::\n\n    Les détails de la commande sont enregistrés.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-added.png\" alt-text=\"Image montrant les détails des commandes enregistrées\" border=\"true\":::\n\n1. Ouvrez le volet **Fonctionnalités** de l’application, puis sélectionnez **Carte d’application personnelle** pour afficher les détails de l’onglet de votre application.\n\n    Vous verrez qu’un onglet pour votre nouveau bot de conversation est ajouté à votre application.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tab-chat-tab-conf.png\" alt-text=\"Image montrant le bot de conversation configuré\" border=\"true\":::\n\n#### <a name=\"configure-message-extension\"></a>Configurer l’extension de message\n\nLes extensions de message permettent aux utilisateurs de demander des informations à votre service et de publier ces informations. Les informations sont publiées sous la forme de cartes dans la conversation de canal. Les extensions de message s’affichent en bas de la zone de rédaction.\n\nPour ajouter une nouvelle extension de message :\n\n1. Sélectionnez l’icône :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: dans la carte **d’extension** de message dans le volet **Fonctionnalités de l’application** , puis **sélectionnez Supprimer**.\n\n1. Sélectionnez **Extension de message** dans le volet **fonctionnalités de l’application** .\n\n1. Sélectionnez le nom de votre application bot dans la liste déroulante **Sélectionner un bot existant** dans le volet **d’extension message** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-select-bot.png\" alt-text=\"Image montrant le volet d’extension message pour sélectionner un bot existant\" border=\"true\":::\n\n1. Sélectionnez **Enregistrer**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-save.png\" alt-text=\"Image montrant le bouton Enregistrer l’extension message\" border=\"true\":::\n\n    L’extension de message est enregistrée et la section **Commandes** s’affiche dans le volet **d’extension message** .\n\n1. Sélectionnez **+ Ajouter une commande** pour définir l’étendue de ce que votre application d’extension de message peut faire.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command.png\" alt-text=\"Image montrant la section Commande\" border=\"true\":::\n\n1. Vérifiez que **la recherche** est sélectionnée comme type de commande que vous souhaitez ajouter dans la boîte de **dialogue Ajouter une commande** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-new-command.png\" alt-text=\"Image montrant la boîte de dialogue Ajouter une commande\" border=\"true\":::\n\n1. Entrez les informations appropriées dans les détails suivants :\n    - ID de commande\n    - Titre de la commande\n    - Description de la commande\n\n1. Parcourez la boîte de dialogue pour afficher les détails restants.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command-b.png\" alt-text=\"Image montrant les détails restants dans la boîte de dialogue Ajouter une commande\" border=\"true\":::\n\n1. Vérifiez que **La valeur par défaut** est sélectionnée.\n1. Sélectionnez les contextes suivants pour la commande d’extension de message :\n    - Zone de commande\n    - Boîte de rédaction\n    - Message\n1. Entrez les informations appropriées pour les détails suivants :\n    - Nom du paramètre\n    - Titre du paramètre\n    - Description du paramètre\n\n1. Sélectionnez **Texte** comme type d’entrée.\n1. Sélectionnez **Enregistrer**.\n1. La commande d’extension de message est enregistrée et s’affiche dans la liste des commandes du volet **d’extension message** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-command-added.png\" alt-text=\"Image montrant la nouvelle commande ajoutée\" border=\"true\":::\n\n1. Sélectionnez **Enregistrer**.\n1. Ouvrir **le volet Fonctionnalités de l’application** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-capabilities-configured.png\" alt-text=\"Image montrant les fonctionnalités configurées pour Hello World application\" border=\"true\":::\n\n    Vous verrez les trois fonctionnalités (application onglet personnel, bot et extension de message) configurées pour l’application Hello World. L’étape suivante consiste à inscrire votre application dans Teams et à tester votre application.\n"
- title: Afficher un aperçu et tester votre première application C#
  durationInMinutes: 1
  content: "\nUne fois que vous avez importé votre application et configuré les fonctionnalités dans le portail des développeurs, vous pouvez afficher un aperçu et tester l’exemple d’application.\n\n## <a name=\"preview-your-app-in-teams\"></a>Afficher un aperçu de votre application dans Teams\n\nAprès avoir configuré les fonctionnalités de votre application, vous pouvez afficher un aperçu et tester votre application dans Teams dans l’environnement local.\n\nPour afficher un aperçu de votre application :\n\n1. Sélectionnez **Aperçu dans Teams** dans la barre d’outils du portail des développeurs.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/preview-in-teams.png\" alt-text=\"Image montrant le bouton Aperçu\" border=\"true\"lightbox=\"~/assets/images/teams-toolkit-v2/preview-in-teams.png\":::\n\n    Le portail des développeurs vous informe que votre application est chargée de manière indépendante.\n\n1. Sélectionnez l’icône **Du Store**:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\":::.\n1. Sélectionnez **Gérer vos applications**.\n   Votre application est répertoriée dans les applications chargées de manière indépendante. \n1. Recherchez votre application à l’aide de la zone de recherche, puis sélectionnez les trois points dans sa ligne.\n1. Sélectionnez l’option **Affichage** .\n    La page **Ajouter** s’affiche pour votre application.\n1. Sélectionnez **Ajouter** pour charger l’application sur Teams.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/add-nodejs-app-sideload.png\" alt-text=\"Image montrant la boîte de dialogue Ajouter une application\" border=\"true\":::\n\n    Votre application est désormais disponible dans Teams. Vous pouvez afficher tous les onglets et tester les fonctionnalités :\n\n    - Onglet Hello :\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-tab.png\" alt-text=\"Image montrant l’onglet Hello dans un environnement local\" border=\"true\":::\n\n    - Chat bot :\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot.png\" alt-text=\"Image montrant le bot de l’application dans un environnement local\" border=\"true\":::\n\n        Vous pouvez envoyer un message à l’aide de la conversation.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot-chat.png\" alt-text=\"Image montrant une conversation dans un environnement local\" border=\"true\":::\n\n    - Extension de message :\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext.png\" alt-text=\"Image montrant l’extension de message dans un environnement local\" border=\"true\":::\n\n        Vous pouvez essayer une recherche à l’aide de l’extension de message.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext-query.png\" alt-text=\"Image montrant la recherche à l’aide de l’extension de message dans un environnement local\" border=\"true\"lightbox=\"~/assets/images/teams-toolkit-v2/helloworld-msgext-query.png\":::\n\n    - À propos de l’onglet :\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-about.png\" alt-text=\"Image montrant l’onglet À propos de l’environnement local\" border=\"true\":::"
