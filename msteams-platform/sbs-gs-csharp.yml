### YamlMime:Tutorial
title: 'Créer votre première application à l’aide de C #'
metadata:
  title: 'Hello World avec C #'
  description: Dans ce didacticiel, vous allez apprendre à créer une application Hello World avec C#.
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: Vue d’ensemble de la mise en place
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 7928e1fbfcba87fbc5f1c5a5c8580b0969364d73
  ms.sourcegitcommit: 830fdc80556a5fde642850dd6b4d1b7efda3609d
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 03/09/2022
  ms.locfileid: "63399386"
items:
- durationInMinutes: 1
  content: >
    Démarrez Microsoft Teams développement d’applications en construisant votre première application avec un onglet, un bot et une fonctionnalité d’extension de message.


    >Cette application aura toutes les fonctionnalités et chacune aura sa propre interface utilisateur et son expérience utilisateur :


    :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png" alt-text="Le diagramme montrant cette application comporte trois fonctionnalités." border="false":::


    Dans ce didacticiel, vous allez découvrir :


    - Comment configurer un nouveau projet

    - Comment créer trois applications avec une fonctionnalité différente : onglet, bot et extension de message à l’aide de C# et Visual Studio 2019

    - Comment déployer votre application à partir du Portail du développeur
- title: Conditions préalables
  durationInMinutes: 1
  content: "Voici la liste des outils que vous devrez installer pour la création et le déploiement d’Teams appl.\n\n| &nbsp; | Installer | Pour utiliser... |\n| --- | --- | --- |\n| **Obligatoire** | &nbsp; | &nbsp; |\n| &nbsp; | [Visual Studio 2019](https://visualstudio.com/download)<br> Installez l’une des deux charges de travail suivantes :<br> • **ASP.NET développement web** <br> • **Développement .NET Core sur plusieurs plateformes** | .NET. Vous pouvez installer l’édition communautaire gratuite de Visual Studio 2019 et installer également les charges de travail. |\n| &nbsp; | [Git](https://git-scm.com/downloads) | Git pour utiliser le référentiel d’C# exemple d’application à partir GitHub. |\n| &nbsp; | [ngrok](https://ngrok.com/download) | Teams fonctionnalités de l’application (bot conversationnel et extension de messagerie) nécessitent des connexions entrantes. Vous devez exposer votre système de développement à la Teams via un tunnel. Un tunnel n’est pas requis pour les applications qui incluent uniquement des onglets. Ce package est installé dans le répertoire du projet (à l’aide de npm `devDependencies`). |\n| &nbsp; | [Toolkit Teams](#install-teams-toolkit) | Une extension Visual Studio 2019 qui crée la création d’une création de la création d’une forme de projet pour votre application. Utilisez la dernière version. |\n| &nbsp; | [Documentation pour les développeurs](https://dev.teams.microsoft.com/) | Portail web pour configurer, gérer et distribuer votre application Teams y compris à votre organisation ou au Teams store. |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/en-us/microsoft-teams/download-app) | Microsoft Teams collaborer avec tous les personnes avec qui vous travaillez via des applications de conversation, de réunions, d’appels, le tout au même endroit. |\n| **Optional** | &nbsp; | &nbsp; |\n| &nbsp; | [Outils Azure pour Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) et [Microsoft Azure CLI](/cli/azure/install-azure-cli) | Outils Azure pour accéder aux données stockées ou pour déployer un système back-end basé sur le cloud pour Teams application dans Azure. |\n\n\n## <a name=\"verify-git-installation\"></a>Vérifier l’installation de Git\n\nSi Visual Studio’installation vous invite à ajouter `git` le chemin d’accès, sélectionnez-le. \n\nPour vérifier la version de Git installée :\n\n1. Ouvrez une fenêtre terminal. \n2. Exécutez la commande suivante pour vérifier la `git` version installée sur votre ordinateur :\n\n    ```bash\n    $ git --version\n    ```\n\n    Exemple de sortie : `git version 2.17.1.windows.2`\n\n## <a name=\"install-teams-toolkit\"></a>Installer Teams Shared Computer Toolkit\n\nTeams Shared Computer Toolkit simplifier le processus de développement à l’aide d’outils permettant de créer une création de la création de la création d’une création de projet pour votre application. Il crée la structure de répertoire nécessaire pour toutes les fonctionnalités sélectionnées avec les fichiers requis en place, prêts à créer le projet.\n\nTeams Shared Computer Toolkit est disponible sous la Visual Studio 2019.\n\nPour installer Teams Shared Computer Toolkit extension :\n\n1. Ouvrez Visual Studio 2019 et sélectionnez **extensions** **ExtensionsManage** > .\n1. Dans la zone de recherche, entrez **Teams Shared Computer Toolkit**.\n1. **Sélectionnez Télécharger** en Teams Shared Computer Toolkit.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/install-teams-toolkit-vs19.png\" alt-text=\"Image  shows installation for Teams Shared Computer Toolkit\"::: \n\n    Les modifications sont disponibles après la fermeture Visual Studio 2019. Elle est requise car Visual Studio 2019 doit redémarrer après l’installation de l’extension.\n\n1. Sélectionnez **Fermer**.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/toolkit-installed.png\" alt-text=\"Image  shows installation done for Teams Shared Computer Toolkit\":::\n\n1. Fermez Visual Studio 2019.\n    \n    Le programme d’installation VSIX s’ouvre avec des instructions pour l’installation de l’extension.\n\n1. Suivez les instructions du programme d’installation de VSIX pour terminer l’installation du kit de ressources.\n1. Ouvrez Visual Studio 2019.\n\nLe Teams Apps sera disponible en tant que modèle dans Visual Studio 2019.\n\nVous pouvez également trouver les Teams Shared Computer Toolkit sur Visual Studio Code [Marketplace](https://marketplace.visualstudio.com/items?itemName=msft-vsteamstoolkit.vsteamstoolkit).\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Configurer votre client Teams développement\n\nUn **client** est comme un espace ou un conteneur pour votre organisation dans Teams, où vous discutez, partagez des fichiers et exécutez des réunions. Cet espace est également l’endroit où vous chargez et testez votre application. Nous allons vérifier si vous êtes prêt à développer avec le client.\n\n### <a name=\"check-for-sideloading-option\"></a>Vérifier l’option de chargement de version d’équipe\n\nAprès avoir créé l’application, vous devez la charger dans Teams sans la distribuer. Ce processus est appelé chargement de version d’évaluation. Connectez-vous à votre Microsoft 365 pour afficher cette option.\n\n> [!NOTE]\n> Le chargement de version test est nécessaire pour prévisualiser et tester des applications dans Teams environnement local. Si elle n’est pas activée, vous ne pourrez pas prévisualiser et tester votre application dans Teams localement.\n\nAvez-vous déjà un client et avez-vous l’accès administrateur ? Nous allons vérifier si vous le faites vraiment !\n\nVérifiez si vous pouvez télécharger une version de version de chargement de version Teams :\n\n1. Dans le Teams client, sélectionnez **l’icône Du Store**.\n1. **Sélectionnez Gérer vos applications**.\n1. Recherchez l’option pour **Télécharger une application personnalisée**. Si l’option s’offre à vous, le chargement de version de version latérale des applications est activé.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"Illustration shows the option to upload a custom app in Teams.\":::\n\n    > [!NOTE]\n    > Si Teams n’affiche pas l’option de téléchargement d’une application personnalisée, parlez-en à Teams administrateur.\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Créer un client Teams développeur gratuit (facultatif)\n\nSi vous n’avez pas de compte Teams, vous pouvez l’obtenir gratuitement. Rejoignez le Microsoft 365 développeur !\n\n1. Go to the [Microsoft 365 developer program](https://developer.microsoft.com/microsoft-365/dev-program).\n1. **Sélectionnez Rejoindre maintenant** et suivez les instructions à l’écran.\n1. Dans l’écran d’accueil, **sélectionnez Configurer l’abonnement E5**.\n1. Configurer votre compte d’administrateur. Une fois que vous avez terminé, l’écran suivant s’affiche.\n\n    :::image type=\"content\" source=\"~/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"Exemple de ce que vous voyez après vous être inscrire au programme Microsoft 365 développeur.\":::\n\n1. Connectez-vous Teams à l’aide du compte d’administrateur que vous viennent de configurer. Vérifiez que vous avez la Télécharger **une option d’application** personnalisée dans Teams.\n\n## <a name=\"get-a-free-azure-account\"></a>Obtenir un compte Azure gratuit\n\nSi vous souhaitez héberger votre application ou accéder aux ressources dans Azure, vous devez avoir un abonnement Azure. [Créez un compte gratuit](https://azure.microsoft.com/free/) avant de commencer.\n\nVous avez maintenant tous les outils et configurer vos comptes. Ensuite, nous allons configurer votre environnement de développement et commencer à créer !\n\n> [!NOTE]\n> Utilisez une fenêtre terminal appropriée sur votre plateforme. Ces exemples utilisent Git Bash, mais peuvent être exécutés sur la plupart des plateformes.\n\nOuvrez la dernière version de Visual Studio et installez les mises à jour.\n\nVous pouvez utiliser la même fenêtre terminal pour exécuter les commandes de ce didacticiel.\n\n<a name=\"DownloadSample\"></a>\n\n## <a name=\"download-the-sample\"></a>Télécharger l’exemple\n\nPour ce didacticiel, utilisez [Hello, World!](https://github.com/OfficeDev/Microsoft-Teams-Samples/tree/main/samples/app-hello-world/csharp) exemple dans C#. Vous pouvez le télécharger et le cloner à partir GitHub.\n\nPour utiliser cet exemple, clonez le repo d’exemple de l’une des manières suivantes :\n\n- [Utilisation de Git Bash](#to-use-git-bash-to-clone-the-sample-repo)\n- [Utilisation Visual Studio 2019](#to-use-visual-studio-2019-to-clone-the-sample-repo)\n\n### <a name=\"to-use-git-bash-to-clone-the-sample-repo\"></a>Pour utiliser Git Bash pour cloner l’exemple de référentiel\n\n- Exécutez la commande suivante dans une fenêtre terminal pour cloner l’exemple de référentiel sur votre ordinateur :\n\n    ```bash\n    git clone https://github.com/OfficeDev/Microsoft-Teams-Samples.git\n    ```\n    L’exemple de C#'application est cloné sur votre ordinateur à l’emplacement par défaut.\n\n    > [!TIP]\n    > Vous pouvez [bifurcation](https://help.github.com/articles/fork-a-repo/) [de ce référentiel pour](https://github.com/OfficeDev/Microsoft-Teams-Samples) modifier et enregistrer vos modifications dans GitHub.\n\n    <a name=\"BuildRun\"></a>\n\n    Vous pouvez afficher le référentiel cloné en l’ouvrant Visual Studio 2019. \n\n### <a name=\"to-use-visual-studio-2019-to-clone-the-sample-repo\"></a>Pour utiliser Visual Studio 2019 pour cloner l’exemple de repo\n\n1. Ouvrez Visual Studio 2019.\n1. **Sélectionnez Cloner un référentiel**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-clone-repo.png\" alt-text=\"Cloner un exemple de repo pour l’application Teams c#\" border=\"false\":::\n\n1. Entrez `https://github.com/OfficeDev/Microsoft-Teams-Samples.git` comme chemin d’accès pour cloner le repo :\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/repo-clone-path.png\" alt-text=\"Cloner un exemple de repo pour l’application Teams c#\" border=\"false\":::\n\n1. Entrez l’emplacement où vous souhaitez cloner le repo, puis sélectionnez **Clone**.\n\n    L’exemple de repo est cloné et Visual Studio s’ouvre. Vous pouvez afficher le repo cloné dans **l’Explorateur de solutions**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-repo-cloned.png\" alt-text=\"Exemple de repo pour c# Teams’application clonée\" border=\"false\":::\n\nMaintenant que vous avez cloné l’exemple de repo, nous allons créer votre première application C# pour Teams.\n"
- title: Créer et exécuter votre première application C# de messagerie
  durationInMinutes: 1
  content: "\nUne fois que vous avez cloné le repo pour C# exemple d’application, vous pouvez créer et exécuter l’application dans votre environnement local.\n\nDans cette page, vous allez apprendre à :\n1. [Créer votre première application](#build-your-first-app)\n1. [Déployer votre exemple d’application localement](#deploy-your-sample-app-locally)\n\n## <a name=\"build-your-first-app\"></a>Créer votre première application\n\nVous pouvez afficher la structure du projet dans **l’Explorateur de solutions** une fois l’espace de travail créé. À présent, vous devez créer et exécuter votre application.\n\n**Pour créer et exécuter l’exemple cloné**\n\n1. Ouvrez le fichier de solution **Microsoft.Teams. Samples.HelloWorld.sln** à partir du répertoire **Microsoft-Teams-Samples/samples/app-hello-world/csharp** de l’exemple.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/hello-world-sln-open.png\" alt-text=\"Image montrant la structure du répertoire des solutions Hello World\" border=\"false\":::\n\n1. Sélectionnez **Project** menu, puis **sélectionnez Microsoft.Teams. Propriétés Samples.HelloWorld.Web**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-menu.png\" alt-text=\"Image montrant Project menu pour sélectionner l’option Propriétés\" border=\"false\":::\n\n1. **Sélectionnez Déboguer** dans le volet gauche de la fenêtre **Propriétés**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-properties.png\" alt-text=\"Image montrant la fenêtre Propriétés\" border=\"false\":::\n\n1. Déplacez-vous dans l’écran pour afficher le **serveur Web Paramètres**.\n\n1. Dans le volet **Débogage** , les paramètres suivants sont les suivants :\n    - Définissez **l’URL de** l’application sur `http://localhost:3333/`.\n    - Clear **Enable SSL**.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-web-server-settings.png\" alt-text=\"Image montrant les paramètres du serveur Web pour C# propriétés du projet\" border=\"false\":::\n\n1. **Sélectionnez Build Solution** **dans le menu** Build.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-build-complete.png\" alt-text=\"Image montrant la build terminée\" border=\"false\":::\n\n1. Sélectionnez **la touche F5** ou démarrez **le débogage** dans le menu **Débogage** pour exécuter l’exemple.\n\n    Lorsque l’application démarre, une fenêtre de navigateur s’ouvre. Il affiche la racine de votre application. Vous pouvez utiliser les URL suivantes pour vérifier que toutes les URL d’application sont en cours de chargement :\n\n    - `https://localhost:3333/`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-after-debug.png\" alt-text=\"Image montrant l’hôte local\" border=\"false\":::\n\n    - `https://localhost:3333/hello`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-hello.png\" alt-text=\"Image montrant la page Hello de l’application\" border=\"false\":::\n\n    - `https://localhost:3333/first`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-first-tab.png\" alt-text=\"Image montrant le premier onglet de l’application\" border=\"false\":::\n\n    - `https://localhost:3333/second`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-second-tab.png\" alt-text=\"Image montrant le deuxième onglet de l’application\" border=\"false\":::\n\n    > [!Note]\n    > Si vous recevez une erreur `Could not find a part of the path … bin\\roslyn\\csc.exe`, mettez à jour le package avec la commande `Update-Package Microsoft.CodeDom.Providers.DotNetCompilerPlatform -r`.\n\n## <a name=\"deploy-your-sample-app-locally\"></a>Déployer votre exemple d’application localement\n\nMicrosoft Teams applications sont des applications web qui fournissent une ou plusieurs fonctionnalités. Rendez votre application disponible sur Internet afin que la plateforme Teams puisse la charger. Hébergez votre application pour `ngrok` créer un tunnel vers le processus local sur votre ordinateur.\n\nAprès avoir héberger votre application, notez son URL racine, par exemple ou `https://yourteamsapp.ngrok.io` `https://yourteamsapp.azurewebsites.net`.\n\n### <a name=\"tunnel-using-ngrok\"></a>Tunnel à l’aide de ngrok\n\nAprès avoir installé ngrok, vous pouvez créer un tunnel pour déployer votre application localement :\n\n1. Ouvrez une nouvelle fenêtre terminal.\n1. Exécutez la commande suivante pour créer un tunnel. L’exemple d’application utilise le port 3333.\n\n    ```bash\n    ngrok http 3333 -host-header=localhost:3333\n    ````\n    Le tunnel ngrok est créé. Voici un exemple :\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-ngrok-tunnel.png\" alt-text=\"Image montrant le tunnel ngrok\" border=\"false\":::\n\n    Vous pouvez essayer d’ajouter `hello`, `first`ou `second` à l’URL de tunnel ngrok pour afficher différentes pages d’onglets de l’application.\n    \n    Ngrok écoute les demandes provenant d’Internet et les approvisionnement vers votre application en cours d’exécution sur le port 3333.\n\nPour vérifier le déploiement local de l’application :\n\n1. Ouvrez le navigateur.\n1. Chargez votre application à l’aide de l’URL suivante :\n\n    `https://<forwarding address in ngrok console session>/`\n\n    Voici un exemple d’URL :\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-ngrok-verify-tunnel.png\" alt-text=\"Image montrant C#'application s’exécutant localement sur un tunnel ngrok\" border=\"false\":::\n\n1. Notez l’adresse de forwarding dans la console ngrok. Vous avez besoin de cette URL pour déployer votre application dans Teams.\n\n    > [!NOTE]\n    > Si vous avez utilisé un autre port au cours de la [build](#build-your-first-app), veillez à utiliser le même numéro de port pour configurer le `ngrok` tunnel.\n    > [!TIP]\n    > Il est bon de l’exécuter `ngrok` dans une autre fenêtre terminal. Cela permet de ne pas `ngrok` interférer avec l’application, lorsque vous devez arrêter, reconstruire et réexécuter l’application. La `ngrok` session fournit des informations de débogage utiles dans cette fenêtre.\n    > [!IMPORTANT]\n    > Si vous utilisez la version gratuite de ngrok, votre application sera disponible uniquement pendant la session en cours sur votre ordinateur de développement. Elle n’est pas disponible si l’ordinateur est arrêté ou en veille. Lorsque vous redémarrez le service, il renvoie une nouvelle adresse. Ensuite, vous devez mettre à jour chaque emplacement qui utilise l’adresse obsolète. N’oubliez pas cette étape lors du partage de l’application pour le test.\n"
- title: Configurer votre première application C# l’aide du Portail du développeur
  durationInMinutes: 1
  content: "\nVous pouvez utiliser [le portail du](https://dev.teams.microsoft.com/) développeur pour télécharger le package d’application Teams et configurer les fonctionnalités de l’application. Developer Portal est une application Teams qui simplifie la création et l’inscription d’une application. Installez à partir du Teams store !\n\nAprès avoir construit et testé votre application Teams, vous pouvez la configurer et la prévisualiser à l’aide du Portail du développeur.\n\nDans cette page, vous allez apprendre à [configurer le package d’application dans le portail du développeur](#configure-the-app-package-in-developer-portal).\n\n<details>\n<summary>Option de publication Visual Studio 2019</summary>\n\nCe didacticiel utilise le portail du développeur pour configurer les fonctionnalités de l’application et publier votre application. \n\nToutefois, Visual Studio 2019 offre une prise en charge intégrée du déploiement d’applications pour différents fournisseurs, notamment Azure :\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/publish-to-azure.png\" alt-text=\"Image montrant l’élément de menu Publier sur Azure Visual Studio 2019\" border=\"false\":::\n\nMicrosoft Azure héberge votre application .NET sur un niveau gratuit. Il utilise une infrastructure partagée suffisante pour exécuter l’exemple `Hello World` . Pour plus d’informations, [voir la création d’un compte Azure gratuit](https://azure.microsoft.com/free/).\n\nSi vous utilisez cette option, vous pouvez entrer les détails du site Azure et des ressources Azure et publier votre application. \n\nPour ce didacticiel, vous n’avez pas besoin d’utiliser cette étape.\n\n</details>\n\n## <a name=\"configure-the-app-package-in-developer-portal\"></a>Configurer le package d’application dans le portail du développeur\n\nVous pouvez utiliser [le portail du](https://dev.teams.microsoft.com/) développeur pour configurer le package d’application et ses fonctionnalités. Developer Portal est une application Teams qui simplifie la création et l’inscription d’une application. Installez à partir du Teams store !\n\nLa configuration du package d’application inclut :\n\n1. [Importation du package d’application sur le portail du développeur](#import-the-app-package-in-developer-portal)\n1. [Configuration des fonctionnalités de l’application](#configure-your-app-capabilities)\n\n### <a name=\"import-the-app-package-in-developer-portal\"></a>Importer le package d’application dans le portail du développeur\n\nPour importer le package d’application :\n\n1. Ouvrir Microsoft Teams.\n\n1. Sélectionnez **l’icône du Store** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\"::: dans la barre de gauche.\n\n1. Recherchez **Le portail du développeur** dans la barre de recherche, puis sélectionnez **Portail du développeur**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/select-dev-portal-app.png\" alt-text=\"Sélectionner l’application Portail du développeur\" border=\"false\":::\n\n1. Sélectionnez **Ouvrir**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/open-dev-portal.png\" alt-text=\"Image montrant l’application Portail du développeur ouverte\" border=\"false\":::\n\n    Le portail du développeur s’ouvre.\n\n1. Sélectionnez **l’onglet** Applications.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-app.png\" alt-text=\"Application Portail du développeur\" border=\"false\":::\n\n1. Sélectionnez **Importer l’application**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/import-app-in-dev-portal.png\" alt-text=\"Image montrant le bouton Importer une application\" border=\"false\":::\n\n1. Sélectionnez **l’exemple** helloworldapp.zippackage d’application à partir du chemin d’accès suivant dans votre C# exemple de répertoire de repo :\n\n    `<path to cloned C# repo>/Source/Repos/Microsoft-Teams-Samples/samples/app-hello-world/csharp/Microsoft.Teams.Samples.HelloWorld.Web/bin/Debug/netcoreapp3.1`\n\n    **L’application Hello World** est importée dans le Portail des développeurs.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-imported-dev-portal.png\" alt-text=\"Image montrant l’application importée dans Teams\" border=\"false\":::\n\n### <a name=\"take-a-tour-of-your-app-in-developer-portal\"></a>Faire une visite guidée de votre application dans le Portail des développeurs\n\nUne fois que vous avez importé votre application dans le Portail du développeur, vous pouvez afficher ses détails, y compris le fichier manifeste.\n\n#### <a name=\"view-app-information\"></a>Afficher les informations de l’application\n\n1. **Sélectionnez Informations de** base dans le volet gauche du Portail du développeur.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-left-pane-basic.png\" alt-text=\"Image shows the left pane of Developer Portal\" border=\"false\":::\n\n1. Notez les informations suivantes à partir des informations de base :\n    - ID de l’application\n    - Informations sur le développeur\n    - URL d’application\n\n1. **Sélectionnez Branding** dans le volet gauche pour afficher les informations de pertinence.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-branding.png\" alt-text=\"Image montrant les informations de  branding de l’application\" border=\"false\":::\n\n    Ces détails sont importants si vous écrivez une nouvelle application pour la distribution.\n\n#### <a name=\"view-app-features\"></a>Afficher les fonctionnalités de l’application\n\n- **Sélectionnez les fonctionnalités de** l’application dans le volet gauche du Portail du développeur.\n\n    Les fonctionnalités de l’application apparaissent dans le volet droit. Vous pouvez afficher des cartes pour l’application personnelle, le bot et l’extension de message.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-csharp-app-features.png\" alt-text=\"Image montrant les fonctionnalités de l’application\" border=\"false\":::\n\n#### <a name=\"view-the-app-manifest\"></a>Afficher le manifeste de l’application\n\nVous utilisez le fichier manifeste pour configurer les fonctionnalités, les ressources requises et d’autres attributs importants pour votre application.\n\nPour afficher le manifeste de l’application :\n\n- **Sélectionnez Publier** dans le panneau gauche pour ouvrir la liste liste, puis sélectionnez **Package d’application**.\n    \n    Le fichier manifeste apparaît dans le volet droit.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-manifest-dev-portal.png\" alt-text=\"Image montrant le fichier manifeste de l’application dans le portail du développeur\" border=\"false\":::\n\n### <a name=\"configure-your-app-capabilities\"></a>Configurer les fonctionnalités de votre application\n\nUne fois que vous avez importé votre application dans le Portail des développeurs, l’étape suivante consiste à configurer les fonctionnalités de l’application. Le portail du développeur contient toutes les informations d’application dans différentes sections. Cela facilite la configuration des fonctionnalités de l’application.\n\nÀ l’aide du portail du développeur, vous pouvez :\n- [Configurer l’application d’onglet personnel](#configure-personal-tab-app)\n- [Configurer le bot](#configure-bot)\n- [Configurer l’extension de message](#configure-message-extension)\n\n#### <a name=\"configure-personal-tab-app\"></a>Configurer l’application d’onglet personnel\n\nPour configurer l’application d’onglet personnel :\n\n1. Sélectionnez l’icône :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: sur la **carte d’application** Personnelle dans le volet **Fonctionnalités** de l’application, puis sélectionnez **Modifier**.\n\n    Les détails de l’onglet Hello s’affichent.\n\n1. Sélectionnez l’icône :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: de l’onglet Hello, puis **sélectionnez Modifier** pour ouvrir les détails de l’application à mettre à jour.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-edit-tab.png\" alt-text=\"Image montrant le menu onglet Hello\" border=\"false\":::\n\n1. Entrez les détails de l’application pour l’onglet Hello dans Ajouter **un onglet à votre application personnelle**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-personal-tab-details.png\" alt-text=\"Image montrant les détails de l’onglet Hello\" border=\"false\":::\n\n    Entrez les détails suivants :\n    - **Nom :** onglet Hello.\n    - **URL de contenu** et **URL du site** web : adresse de forwarding dans la session console ngrok.\n    - **Contexte :** sélectionnez **Onglet Personnel**.\n\n1. Sélectionnez **Mettre à jour**.\n\n    Les détails de l’onglet Hello apparaissent dans le **volet d’application** Personnel.\n\n1. Sélectionnez **Enregistrer**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-tab-update.png\" alt-text=\"Image montrant les détails de l’onglet Hello à enregistré\" border=\"false\":::\n\n    Le **volet d’application** Personnel affiche désormais le nouvel onglet et un onglet À propos de créé automatiquement.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-about-tab-added.png\" alt-text=\"Image montrant l’onglet Hello et les détails de l’onglet À propos de\" border=\"false\":::\n\n#### <a name=\"configure-bot\"></a>Configurer le bot\n\nIl est facile d’ajouter la fonctionnalité bots à votre application. L’exemple d’application Hello World dispose déjà d’un bot, mais vous devez l’inscrire auprès Teams.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-no-id.png\" alt-text=\"Image montrant l’application bot importée sans ID d’application\" border=\"false\":::\n\nLe bot qui a été importé à partir de l’exemple n’a pas d’ID d’application associé. Vous devez le supprimer et créer un bot. Le portail du développeur crée un ID d’application et l’inscrit auprès Teams.\n\nL’ajout et la configuration d’un bot impliquent :\n\n1. [Ajout d’un nouveau bot](#to-add-a-new-bot)\n1. [Ajout d’un bot à l’application](#to-add-bot-to-app)\n1. [Configuration de l’étendue du bot](#to-configure-bot-scope)\n\n##### <a name=\"to-add-a-new-bot\"></a>Pour ajouter un nouveau bot\n\n1. Sélectionnez l’icône :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: sur la **carte Bot** **dans le volet** Fonctionnalités de l’application, puis sélectionnez **Supprimer**.\n\n1. Sélectionnez **Outils** à ajouter.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/tools-option.png\" alt-text=\"Image montrant l’option Outils\" border=\"false\":::\n\n1. Sélectionnez **Gestion du bot** dans le volet **Outils** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tools-bot-card.png\" alt-text=\"Image montrant le volet de gestion des bots\" border=\"false\":::\n\n1. **Sélectionnez + Nouveau bot** dans le **volet de gestion du** bot.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-management-new-bot.png\" alt-text=\"Image montrant une nouvelle option de bot\" border=\"false\":::\n\n1. Entrez un nom approprié pour votre bot, puis sélectionnez **Ajouter**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot.png\" alt-text=\"Image montrant comment ajouter un bot\" border=\"false\":::\n\n    Le **volet Configurer** s’affiche avec les détails du nouveau bot dans le volet gauche.\n\n1. Entrez l’URL de forwarding à partir de la `ngrok` console, puis sélectionnez **Enregistrer**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-configure-bot-endpoint.png\" alt-text=\"Image montrant comment ajouter un point de terminaison de bot\" border=\"false\":::\n\n1. **Sélectionnez les secrets client**, puis ajoutez **une secret client à votre bot** pour générer un mot de passe pour le bot.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-client-secret-pane.png\" alt-text=\"Image montrant la section de la secret client\" border=\"false\":::\n\n    Le portail du développeur génère un mot de passe pour le bot.\n\n    Vous pouvez utiliser l’icône :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/copy-icon.png\"::: pour copier le mot de passe. Pour ce didacticiel, vous n’avez pas besoin de le copier.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-client-secret-generated.png\" alt-text=\"Image montrant la secret client générée\" border=\"false\":::\n\n1. Sélectionnez **OK**.\n\n1. **Sélectionnez< bots** pour revenir au volet **de gestion bot**.\n\n    Le **volet gestion** du bot affiche le nouveau bot ajouté avec un ID d’application.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-mgmt-pane.png\" alt-text=\"Image montrant le nouveau bot avec l’ID d’application\" border=\"false\":::\n\n1. Veillez à enregistrer l’ID du bot avec le mot de passe de la section **de la secret client** .\n\n##### <a name=\"to-add-bot-to-app\"></a>Pour ajouter un bot à l’application\n\n1. Ouvrez **le volet Fonctionnalités** de l’application, puis sélectionnez **la carte bot** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-card.png\" alt-text=\"Image montrant la carte du bot\" border=\"false\":::\n\n    Le **volet Bot** s’affiche.\n\n1. Sélectionnez votre application de bot dans **Sélectionner un bot existant**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-new-bot-app.png\" alt-text=\"Image montrant comment ajouter une application de bot existante\" border=\"false\":::\n\n    Le nouveau bot est ajouté à votre application avec son propre ID d’application.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-new-bot-added.png\" alt-text=\"Image montrant le nouveau bot ajouté à l’application\" border=\"false\":::\n\n##### <a name=\"to-configure-bot-scope\"></a>Pour configurer l’étendue du bot\n\n1. Sélectionnez l’icône :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: sur la nouvelle **carte bot** , puis sélectionnez **Modifier**.\n\n1. Déplacez-vous dans **le volet Bot** pour afficher la section **Commandes** , puis **sélectionnez + Ajouter une commande**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-add-command.png\" alt-text=\"Image montrant la section commandes\" border=\"false\":::\n\n1. Entrez un nom et une description appropriés pour la **commande**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot-command.png\" alt-text=\"Image montrant comment ajouter des détails de commandes\" border=\"false\":::\n\n1. Sélectionnez les trois étendues de la commande, puis sélectionnez **Ajouter**.\n    - **Personnel**\n    - **Équipe**\n    - **Conversation de groupe**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-add.png\" alt-text=\"Image montrant comment enregistrer les détails des commandes\" border=\"false\":::\n\n    La nouvelle commande est ajoutée à la section **Commandes** du **volet** Bot.\n\n1. Sélectionnez **Enregistrer**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-new-bot-command.png\" alt-text=\"Image montrant les détails des commandes à enregistrées\" border=\"false\":::\n\n    Les détails de la commande sont enregistrés.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-added.png\" alt-text=\"Image montrant les détails des commandes enregistrés\" border=\"false\":::\n\n1. **Ouvrez le volet Fonctionnalités** de l’application, puis sélectionnez **Carte** d’application personnelle pour afficher les détails de l’onglet de votre application.\n\n    Vous verrez qu’un onglet pour votre nouveau bot de conversation est ajouté à votre application.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tab-chat-tab-conf.png\" alt-text=\"Image montrant le bot de conversation configuré\" border=\"false\":::\n\n#### <a name=\"configure-message-extension\"></a>Configurer l’extension de message\n\nLes extensions de messagerie permet aux utilisateurs de demander des informations à votre service et de publier ces informations. Les informations sont publiées sous forme de cartes dans la conversation de canal. Les extensions de messagerie apparaissent en bas de la zone de composition.\n\nPour ajouter une nouvelle extension de message :\n\n1. Sélectionnez l’icône :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: sur la **carte d’extension de message** dans le volet **Fonctionnalités** de l’application, puis sélectionnez **Supprimer**.\n\n1. Sélectionnez **Extension de message** dans le volet **Fonctionnalités de l’application** .\n\n1. Sélectionnez le nom de votre application bot dans  la liste de listes listes des bots existantes dans le **volet d’extension** de message.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-select-bot.png\" alt-text=\"Image montrant le volet d’extension de message pour sélectionner un bot existant\" border=\"false\":::\n\n1. Sélectionnez **Enregistrer**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-save.png\" alt-text=\"Image montrant le bouton Enregistrer l’extension de message\" border=\"false\":::\n\n    L’extension de message est enregistrée et la section **Commandes** apparaît dans le **volet Extension** de message.\n\n1. **Sélectionnez + Ajoutez une commande** pour définir l’étendue de ce que votre application d’extension de message peut faire.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command.png\" alt-text=\"Image montrant la section Command\" border=\"false\":::\n\n1. **Assurez-vous que la** recherche est sélectionnée comme type de commande que vous souhaitez ajouter dans la boîte de dialogue Ajouter **une** commande.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-new-command.png\" alt-text=\"Image montrant la boîte de dialogue Ajouter une commande\" border=\"false\":::\n\n1. Entrez les informations appropriées dans les détails suivants :\n    - ID de commande\n    - Titre de la commande\n    - Description de la commande\n\n1. Déplacez-vous dans la boîte de dialogue pour afficher les détails restants.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command-b.png\" alt-text=\"Image montrant les détails restants dans la boîte de dialogue Ajouter une commande\" border=\"false\":::\n\n1. **Assurez-vous que La valeur** par défaut est sélectionnée.\n1. Sélectionnez les contextes suivants pour la commande d’extension de message :\n    - Zone de commande\n    - Zone de composition\n    - Message\n1. Entrez les informations appropriées pour les détails suivants :\n    - Nom du paramètre\n    - Titre du paramètre\n    - Description du paramètre\n\n1. **Sélectionnez Texte** comme type d’entrée.\n1. Sélectionnez **Enregistrer**.\n1. La commande d’extension de message est enregistrée et apparaît dans la liste des commandes dans le **volet Extension** de message.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-command-added.png\" alt-text=\"Image montrant la nouvelle commande ajoutée\" border=\"false\":::\n\n1. Sélectionnez **Enregistrer**.\n1. Volet **Des fonctionnalités d’ouverture de** l’application.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-capabilities-configured.png\" alt-text=\"Image montrant les fonctionnalités configurées pour l’application Hello World\" border=\"false\":::\n\n    Les trois fonctionnalités (application d’onglet personnel, bot et extension de message) sont configurées pour l’application Hello World. L’étape suivante consiste à inscrire votre application dans Teams et à tester votre application.\n"
- title: Prévisualiser et tester votre première C# application
  durationInMinutes: 1
  content: "\nUne fois que vous avez importé votre application et configuré les fonctionnalités dans le portail du développeur, vous pouvez afficher un aperçu et tester l’exemple d’application.\n\n## <a name=\"preview-your-app-in-teams\"></a>Afficher un aperçu de votre application dans Teams\n\nAprès avoir configuré les fonctionnalités de votre application, vous pouvez prévisualiser et tester votre application dans Teams l’environnement local.\n\nPour afficher un aperçu de votre application :\n\n1. **Sélectionnez Aperçu dans Teams** la barre d’outils du Portail du développeur.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/preview-in-teams.png\" alt-text=\"Image montrant le bouton Aperçu\" border=\"false\":::\n\n    Le portail du développeur vous informe que votre application est correctement rechargée.\n\n1. Sélectionnez **l’icône Du Store**:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\":::.\n1. **Sélectionnez Gérer vos applications**.\n   Votre application est répertoriée dans les applications téléchargées de côté. \n1. Recherchez votre application à l’aide de la zone de recherche, sélectionnez les trois points dans sa ligne.\n1. Sélectionnez **l’option** Afficher.\n    La page **Ajouter** s’affiche pour votre application.\n1. **Sélectionnez Ajouter** pour charger l’application sur Teams.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/add-nodejs-app-sideload.png\" alt-text=\"Image montrant la boîte de dialogue Ajouter une application\" border=\"false\":::\n\n    Votre application est désormais disponible dans Teams. Vous pouvez afficher tous les onglets et tester les fonctionnalités :\n\n    - Onglet Hello :\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-tab.png\" alt-text=\"Image montrant l’onglet Hello dans l’environnement local\" border=\"false\":::\n\n    - Bot de conversation :\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot.png\" alt-text=\"Image montrant le bot de l’application dans un environnement local\" border=\"false\":::\n\n        Vous pouvez envoyer un message à l’aide de la conversation.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot-chat.png\" alt-text=\"Image montrant la conversation dans un environnement local\" border=\"false\":::\n\n    - Extension de message :\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext.png\" alt-text=\"Image montrant l’extension de message dans l’environnement local\" border=\"false\":::\n\n        Vous pouvez essayer une recherche à l’aide de l’extension de message.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext-query.png\" alt-text=\"Image montrant la recherche à l’aide de l’extension de message dans l’environnement local\" border=\"false\":::\n\n    - À propos de l’onglet :\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-about.png\" alt-text=\"Image montrant l’onglet À propos de dans l’environnement local\" border=\"false\":::"
