### YamlMime:Tutorial
title: Envoyer des messages proactifs
metadata:
  title: Envoyer des messages proactifs
  description: Dans cet article, vous allez apprendre à envoyer des messages proactifs, tels que des messages de bienvenue, des messages planifiés et des notifications à partir d’un bot.
  audience: Developer
  level: Beginner
  ms.date: 06/23/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ./bots/how-to/conversations/send-proactive-messages.md
  nextTutorialTitle: En savoir plus sur les messages proactifs
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 9c763e584bcd574c2fc511000f6470d7608e3ac0
  ms.sourcegitcommit: b72f51377f41be18ee9b70b042f736605f755cf1
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 10/21/2022
  ms.locfileid: "68670116"
items:
- durationInMinutes: 1
  content: "Un message proactif est tout message envoyé par un bot qui n’est pas en réponse à une demande d’un utilisateur qui inclut des messages, tels que :\n - Les messages de bienvenue\n - Notifications\n - Messages planifiés\n \nCe guide pas à pas vous aide à envoyer un message proactif à partir d’un bot. Vous verrez les sorties suivantes :\n\n* Message hello proactif dans la conversation.  \n\n  :::image type=\"content\" source=\"~/assets/images/proactive-scenario/proactive-helo1.png\" alt-text=\"Message Hello proactif\":::\n\n* Message hello proactif sous forme de carte adaptative.\n\n  :::image type=\"content\" source=\"~/assets/images/proactive-scenario/proactive-helo-in-adaptive-card.png\" alt-text=\"Message Hello proactif dans la carte adaptative\"::: \n"
- title: Configuration requise
  durationInMinutes: 2
  content: "Veillez à installer les éléments suivants :    \n\n| &nbsp; | Installer | Pour l’utilisation... |\n | --- | --- | --- |\n | **Obligatoire** | &nbsp; | &nbsp; |\n | &nbsp; | [Visual Studio 2022 version 17.3](https://visualstudio.microsoft.com)<br> Installez l’une des deux charges de travail suivantes :<br> • développement ASP.NET et web <br> • Développement multiplateforme .NET Core | Vous pouvez installer la version entreprise dans Visual Studio 2022 et installer les charges de travail. |\n | &nbsp; | [ngrok](https://ngrok.com/download) | Les fonctionnalités d’application Teams (bots conversationnels, extensions de message et webhooks entrants) nécessitent des connexions entrantes. Un tunnel connecte votre système de développement à Teams. Elle n’est pas obligatoire pour les applications qui incluent uniquement des onglets. Ce package est installé dans le répertoire du projet (à l’aide de npm `devDependencies`). |\n | &nbsp; | [Compte de développeur Microsoft 365](/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) | Accès au compte Teams avec les autorisations appropriées pour installer une application. |\n | &nbsp; | [Documentation pour les développeurs](https://dev.teams.microsoft.com/) | Portail web pour configurer, gérer et distribuer votre application Teams, y compris à votre organisation ou au magasin Teams. |\n"
- title: Configurer l’environnement local
  durationInMinutes: 3
  content: "1.  Téléchargez [l’exemple de code](https://github.com/MicrosoftDocs/msteams-docs/tree/master/msteams-platform/assets/downloads/SendProactiveMessages.zip) (fichier zip) et extrayez les fichiers.\n1.  Accédez aux fichiers extraits et double-cliquez sur **ProactiveBot.csproj**. La solution s’ouvre dans Visual Studio.\n1.  Dans Visual Studio, cliquez avec le bouton droit sur le projet (**ProactiveBot**) et sélectionnez **Générer** pour générer la solution.\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/proactivebot-project1.png\" alt-text=\"Projet de bot proactif\":::\n\n    <br>\n\n    <details>\n\n    <summary><b>Résolution des problèmes</b></summary>\n\n    Si vous obtenez l’erreur **de package Impossible de trouver** , procédez comme suit :\n\n    1.  Accédez à **Outils Paramètres** >  du **Gestionnaire** >  de **package NuGet**.\n    1.  Dans la fenêtre **Options** qui s’affiche, sélectionnez **Sources de package** **du Gestionnaire** >  de package NuGet.\n    1.  Sélectionnez **Ajouter**.\n    1.  Entrez `nuget.org` le **Nom** et `https://api.nuget.org/v3/index.json` les champs **Source** .\n    1.  Sélectionnez **Mettre à jour** et **OK**.\n    1.  Régénérez votre projet.\n    <br>\n\n    </details>\n    \n1. Décompressez pour installer ngrok.\n   * Windows : double-cliquez sur `ngrok.zip`.\n   * Linux ou OS X : décompressez ngrok à partir du terminal et exécutez la `unzip /path/to/ngrok.zip` commande .\n1. Utilisez ngrok pour créer un tunnel vers les points de terminaison HTTPS de votre serveur web en cours d’exécution localement. Exécutez la commande suivante dans ngrok :\n\n    ```bash\n    ngrok http --host-header=localhost 3978\n    ```\n    \n1. À partir de ngrok, copiez l’URL HTTPS. \n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/ngrok-base-url1.png\" alt-text=\"URL de base ngrok.\"lightbox=\"~/assets/images/proactive-scenario/ngrok-base-url1.png\":::   \n"
- title: Activer l’aperçu pour les développeurs
  durationInMinutes: 1
  content: >
    1. Activez le chargement d’applications dans la console d’administration de votre locataire.
        1. Connectez-vous à [Centre d’administration Microsoft 365](https://admin.microsoft.com/Adminportal/Home?source=applauncher#/homepage#/) avec vos informations d’identification d’administrateur.
        1. Dans le volet gauche, sélectionnez **Afficher tout**.
        1. Sélectionnez **Teams**.

           :::image type="content" source="./assets/images/meeting-token-generator/meeting-token-generator-admincenter_1.png" alt-text="Menu du Centre d’administration" border="true":::
- title: Créer et installer une application Teams
  durationInMinutes: 5
  content: "1. Ouvrez [le Portail des développeurs pour Teams](https://dev.teams.microsoft.com).\n\n   La page suivante s’affiche :\n\n   :::image type=\"content\" source=\"~/assets/images/proactive-scenario/developer-portal-intro.png\" alt-text=\"Présentation du portail des développeurs\":::\n\n1. Sélectionnez **Applications** > **Importer l’application**.\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/upload-app-package.png\" alt-text=\"Sélectionner-charger le package\":::  \n\n1. Sélectionnez **AppManifest** , puis **Ouvrir**.\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-app-package.png\" alt-text=\"Sélectionner le package d’application\":::\n\n1. Sélectionnez **Importer**.\n\n     :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-import.png\" alt-text=\"Sélectionnez Importer.\":::\n\n    La page suivante s’affiche :\n\n     :::image type=\"content\" source=\"~/assets/images/proactive-scenario/proactive-message.png\" alt-text=\"Message proactif.\"lightbox=\"~/assets/images/proactive-scenario/proactive-message.png\"::: \n\n1. Sélectionnez **Bot** fonctionnalités  > **de l’application**.\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-app-features.png\" alt-text=\"Sélectionner les fonctionnalités de l’application\":::\n\n1. Sélectionnez **Créer un bot**.\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-bot.png\" alt-text=\"Sélectionner un bot\":::     \n    \n1. Sélectionnez **Nouveau bot**. \n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/create-new-bot.png\" alt-text=\"Créer un bot\":::\n\n    La fenêtre **Ajouter un bot** s’affiche.\n\n1. Entrez **Proactive Message bot** , puis sélectionnez **Ajouter**.\n\n     :::image type=\"content\" source=\"~/assets/images/proactive-scenario/enter-proactive-message.png\" alt-text=\"Entrer un message proactif\":::\n\n    À présent, le bot Bot Proactive Message est correctement ajouté à l’application. Vous pouvez voir le **nom du bot** et **l’ID du bot**.\n\n     :::image type=\"content\" source=\"~/assets/images/proactive-scenario/bot-name.png\" alt-text=\"Nom et ID du bot\":::\n\n   > [!TIP]\n   > Enregistrez **l’ID de bot** pour référence ultérieure.\n\n1. Double-cliquez sur le **bot de messages proactifs**.\n\n   La page **De démonstration des messages proactifs** s’affiche.\n\n1. Sélectionnez **Configurer** et définissez **l’adresse de point de terminaison** sous la forme .`https://your ngrok/api/messages`\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-configure.png\" alt-text=\"Sélectionnez Configurer.\":::\n\n1. Sélectionnez **Clés secrètes** > **client Ajouter une clé secrète client pour votre bot**.\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/secret.png\" alt-text=\"Sélectionner un secret\":::\n\n1. La fenêtre **Nouvelle clé secrète client générée** s’affiche et sélectionnez **OK**.    \n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/new-secret.png\" alt-text=\"Nouveau secret\":::\n\n    > [!TIP]\n    > Enregistrez la valeur **Nouvelle clé secrète client** pour référence ultérieure.\n\n1. Sélectionnez l’icône Applications :::image type=\"icon\" source=\"~/assets/images/proactive-scenario/apps-icon.png\"::: et sélectionnez **Démonstration de message proactif**.\n\n     :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-apps.png\" alt-text=\"Sélectionner des applications\":::\n\n    La page suivante s’affiche :\n\n     :::image type=\"content\" source=\"~/assets/images/proactive-scenario/overview-page.png\" alt-text=\"Page Vue d’ensemble\":::\n\n1. Sélectionnez **Fonctionnalités de l’application** sous **Configurer** , puis **bot**.\n\n     :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-app-features1.png\" alt-text=\"Sélectionner les fonctionnalités de l’application\":::\n\n1. Sélectionnez **Proactive Message bot** dans la liste déroulante **Sélectionner un bot existant** .\n\n     :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-send-proactive-message.png\" alt-text=\"Sélectionner Envoyer des messages proactifs\":::\n\n1. Sélectionnez **Enregistrer personnellement** > .\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-personal.png\" alt-text=\"Sélectionner le personnel\":::\n\n1. Ouvrez le fichier **appsettings.json** dans Visual Studio et mettez à jour les informations suivantes :\n\n    * Définissez **MicrosoftAppID** sur votre ID de bot.\n    * Définissez **MicrosoftAppPassword** sur la valeur de votre ID de clé secrète client.\n\n   :::image type=\"content\" source=\"~/assets/images/proactive-scenario/appsettings.png\" alt-text=\"Fichier de paramètres de l’application\":::\n\n1. Sélectionnez **Déboguer** > **Démarrer le débogage**.\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/debug.png\" alt-text=\"Sélectionner Déboguer\":::\n\n   L’exemple de message proactif correspondant s’affiche :\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/proactive-confirm.png\" alt-text=\"Confirmation proactive\":::\n\n1. Retour au Portail des développeurs, sélectionnez **Préversion dans Teams**.\n    \n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/preview-teams.png\" alt-text=\"Aperçu de Teams\":::\n\n1. Sélectionnez **Ajouter**.\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-add.png\" alt-text=\"Sélectionnez Ajouter.\":::\n\n   La page suivante s’affiche.\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/teams-open1.png\" alt-text=\"Teams Open\":::\n\n   Ouvrez le navigateur.\n\n1. Copiez et collez l’URL dans le `http://localhost:3978/api/notify` navigateur pour obtenir un message hello proactif dans la conversation.\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/url-paste.png\" alt-text=\"Coller l’URL\":::\n\n1. Accédez à Teams. Vous recevez un message hello proactif du bot lorsque l’installation réussit.\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/proactive-reply.png\" alt-text=\"Réponse proactive\":::\n"
- title: Ajouter une carte adaptative à un message proactif
  durationInMinutes: 10
  content: "1. Dans Visual Studio, arrêtez le processus de débogage.\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/stop-debugging.png\" alt-text=\"Arrêter le débogage\":::\n\n1. Cliquez avec le bouton droit sur **Dépendances**, puis sélectionnez **Gérer les packages NuGet**.\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/dependencies.png\" alt-text=\"Dépendances proactives\":::\n\n1. Dans **NuGet ProactiveBot**, sélectionnez **Parcourir** et **recherchez AdaptiveCards**. \n1. Sélectionnez **Installer**. \n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-adaptive cards.png\" alt-text=\"sélectionner Cartes adaptatives\":::\n\n1. Dans **la fenêtre Aperçu des modifications** , sélectionnez **OK**.\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-ok.png\" alt-text=\"sélectionnez OK.\":::\n\n1. Ouvrez le fichier **NotifyController.cs** sous **Contrôleurs**.\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-notify.png\" alt-text=\"Sélectionnez Notifier.\":::\n\n1. Remplacez le code existant `BotCallback` par le code suivant pour envoyer le message de carte adaptative :     \n    \n   ```csharp\n   private async Task BotCallback(ITurnContext turnContext, CancellationToken cancellationToken)\n    {\n                AdaptiveCard card = new AdaptiveCard(new AdaptiveSchemaVersion(1, 0));\n\n                card.Body.Add(new AdaptiveTextBlock()\n                {\n                    Text = \"Proactive Hello\",\n                    Size = AdaptiveTextSize.ExtraLarge\n                });\n\n                card.Body.Add(new AdaptiveImage()\n                {\n                    Url = new Uri(\"http://adaptivecards.io/content/cats/1.png\")\n                });\n\n                Attachment attachment = new Attachment()\n                {\n                    ContentType = AdaptiveCard.ContentType,\n                    Content = card\n                };\n\n                await turnContext.SendActivityAsync(MessageFactory.Attachment(attachment));\n    }\n   ```  \n\n1. Appuyez sur **F5** pour exécuter le code.\n\n   L’exemple de message proactif correspondant s’affiche :\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/proactive-confirm.png\" alt-text=\"Confirmation proactive\":::\n\n1. Accédez à Teams et désinstallez votre application. \n\n1. Réinstallez la même application pour obtenir l’événement `conversationUpdate` .   \n\n1. Copiez et collez l’URL dans le `http://localhost:3978/api/notify` navigateur pour obtenir un message hello proactif dans la carte adaptative.     \n"
- title: Relever le défi
  durationInMinutes: 3
  content: >
    Tu as trouvé quelque chose comme ça ? Voici comment s’affiche le message hello proactif dans la carte adaptative :


    :::image type="content" source="~/assets/images/proactive-scenario/proactive-helo-in-adaptive-card.png" alt-text="Message Hello proactif dans la carte adaptative":::
- content: >-
    Vous avez terminé le scénario.

    * Vous pouvez envoyer des notifications quotidiennement ou demander des commentaires à l’utilisateur régulièrement.

    * Gérez les limites de limitation pour éviter plusieurs notifications.
