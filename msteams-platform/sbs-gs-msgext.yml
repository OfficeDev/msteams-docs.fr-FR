### YamlMime:Tutorial
title: Créer votre première application d’extension de message à l’aide de JavaScript
metadata:
  title: Hello World avec JavaScript
  description: Dans ce didacticiel, vous allez apprendre à créer une application Hello World avec JavaScript.
  audience: Developer
  level: Beginner
  ms.date: 05/26/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: Vue d’ensemble de Retour à la prise en main
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 23ed42fbc30c3e5c8afc772e3f006c2ed2536c81
  ms.sourcegitcommit: 4bf2565e3958e6f85854801680d43ee344092a87
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 05/26/2022
  ms.locfileid: "65887822"
items:
- durationInMinutes: 1
  content: "Démarrez le développement d’applications Microsoft Teams avec votre première application Teams. Vous allez créer une application Teams d’extension de message. \n\nVotre application dispose d’une fonctionnalité, qui est fournie avec sa propre interface utilisateur et son expérience utilisateur :\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png\" alt-text=\"Diagramme montrant que cette application comporte trois fonctionnalités.\" border=\"false\":::\n\n\nDans ce didacticiel, vous allez apprendre :\n\n- Comment configurer un nouveau projet avec le Kit de ressources Teams.\n- Comment créer une application d’extension de message.\n- Comment déployer votre application.\n"
- title: Configuration requise
  durationInMinutes: 1
  content: "\nVoici la liste des outils dont vous aurez besoin pour créer et déployer vos applications.\n\n| &nbsp; | Installer | Pour l’utilisation... |\n| --- | --- | --- |\n| **Obligatoire** | &nbsp; | &nbsp; |\n| &nbsp; | [Toolkit Teams](#install-the-teams-toolkit) | Extension Microsoft Visual Studio Code qui crée une structure de projet pour votre application. Utilisez la version 4.0.0. |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams pour collaborer avec toutes les personnes avec lesquelles vous travaillez via les applications pour les conversations, les réunions, les appels, le tout au même endroit.|\n| &nbsp; | [Node.js](https://nodejs.org/en/download/) | Environnement runtime JavaScript principal. Utilisez la dernière version de LTS v16.|\n| &nbsp; | [Microsoft&nbsp; Edge](https://www.microsoft.com/edge) (recommandé) ou [Google Chrome](https://www.google.com/chrome/) | Un navigateur avec des outils de développement. |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | Environnements de build JavaScript, TypeScript ou SharePoint Framework (SPFx). Utilisez la version 1.55 ou ultérieure. |\n| **Optional** | &nbsp; | &nbsp; |\n| &nbsp; | [Azure Tools pour Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) et [Azure CLI](/cli/azure/install-azure-cli) | Outils Azure pour accéder aux données stockées ou déployer un backend cloud pour votre application Teams dans Azure. |\n| &nbsp; | [Outils de développement React pour Chrome](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi) OR [React Developer Tools pour Microsoft&nbsp;Edge](https://microsoftedge.microsoft.com/addons/detail/react-developer-tools/gpphkfbcpidddadnkolkpfckpihlkkil) | Extension DevTools du navigateur pour la bibliothèque JavaScript React open source. |\n| &nbsp; | [Afficheur Microsoft Graph](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graph Explorer, un outil basé sur un navigateur qui vous permet d’exécuter une requête à partir de données Microsoft Graph. |\n| &nbsp; | [Documentation pour les développeurs](https://dev.teams.microsoft.com/) | Portail web pour configurer, gérer et distribuer votre application Teams, y compris à votre organisation ou au magasin Teams. |\n\n\n> [!TIP]\n> Si vous utilisez des données Microsoft Graph, vous devez en savoir plus sur l’Explorateur Microsoft Graph et créer un signet. Cet outil basé sur un navigateur vous permet d’interroger Microsoft Graph en dehors d’une application.\n\n\n## <a name=\"prepare-development-environment\"></a>Préparer l’environnement de développement\n\nUne fois que vous avez installé les outils requis, configurez l’environnement de développement.\n\n\n### <a name=\"install-the-teams-toolkit\"></a>Installer le Kit de ressources Teams\n\nLe Kit de ressources Teams simplifie le processus de développement avec des outils permettant de provisionner et de déployer des ressources cloud pour votre application, de publier sur le magasin Teams, etc. \n \nVous pouvez utiliser le kit de ressources avec Visual Studio Code, ou CLI (interface de ligne de commande), appelé `TeamsFx`.\n\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Ouvrez Visual Studio Code et sélectionnez la vue **Extensions** (**Ctrl+Maj+X** / **⌘⇧-X** ou **Afficher > extensions**).\n1. Dans la zone de recherche, entrez **le Kit de ressources Teams**.\n1. Sélectionnez **Installer** en regard du Kit de ressources Teams.\n\n :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/install-toolkit-vscodeversion.png\" alt-text=\"Illustration montrant l’installation de l’extension Teams Toolkit.\" border=\"false\":::\n\n L’icône du Kit de ressources Teams apparaît dans la barre latérale de Visual Studio Code après son installation.\n\n :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/hw-teams-toolkit-sidebar-icon.png\" alt-text=\"L’illustration montre l’icône du Kit de ressources Teams dans la barre latérale de Visual Studio Code.\" border=\"false\":::\n\nVous trouverez également le Kit de ressources Teams sur la [Place de marché Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=TeamsDevApp.ms-teams-vscode-extension).\n\n# <a name=\"command-line\"></a>[Ligne de commande](#tab/cli)\n\nPour installer l’interface CLI TeamsFx, utilisez le gestionnaire de `npm` package :\n\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\n\nSelon votre configuration, vous devrez peut-être l’utiliser `sudo` pour installer l’interface CLI :\n\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\n\nCette condition est plus courante sur les systèmes Linux et macOS.\n\nVeillez à ajouter le cache global npm à votre chemin d’accès. Cette étape est normalement effectuée dans le cadre du programme d’installation Node.js.  \n\nVous pouvez utiliser l’interface CLI avec la `teamsfx` commande. Vérifiez que la commande fonctionne en exécutant `teamsfx -h`.\n\n> [!CAUTION]\n> Avant de pouvoir exécuter TeamsFx dans les terminaux PowerShell, vous devez activer la stratégie d’exécution « signée à distance » pour PowerShell.\n\n---\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Configurer votre locataire de développement Teams\n\nUn **locataire** est comme un espace ou un conteneur pour votre organisation dans Teams, où vous discutez, partagez des fichiers et exécutez des réunions. Cet espace est également l’endroit où votre chargement indépendant et testez votre application. Vérifions si vous êtes prêt à développer avec le locataire.\n\n### <a name=\"check-for-sideloading-option\"></a>Rechercher l’option de chargement indépendant\n\nAprès avoir créé l’application, vous devez charger votre application dans Teams sans la distribuer. Ce processus est appelé chargement indépendant. Connectez-vous à votre compte Microsoft 365 pour afficher cette option.\n\n > [!NOTE]\n > Le chargement indépendant est nécessaire pour afficher un aperçu et tester des applications dans l’environnement local Teams. S’il n’est pas activé, vous ne pourrez pas afficher un aperçu et tester votre application dans Teams localement.\n\nAvez-vous déjà un locataire et disposez-vous de l’accès administrateur ? Vérifions si c’est vraiment le cas !\n\nVérifiez si vous pouvez charger des applications de version test dans Teams :\n\n 1. Dans le client Teams, sélectionnez l’icône **Du Store** .\n 1. Sélectionnez **Gérer vos applications**.\n 1. Sélectionnez **Publier une application**.\n 1. Recherchez l’option permettant de **charger une application personnalisée**. Si vous voyez l’option, le chargement indépendant des applications est activé.\n\n     :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"L’illustration montre l’option permettant de charger une application personnalisée dans Teams.\":::\n\n     > [!NOTE]\n     > Si vous n’avez pas la possibilité de charger une application personnalisée, contactez votre administrateur Teams.\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Créer un locataire de développeur Teams gratuit (facultatif)\n\nSi vous n’avez pas de compte de développeur Teams, vous pouvez l’obtenir gratuitement. Rejoignez le programme développeur Microsoft 365 !\n\n1. Accédez au[Programme pour les développeurs Microsoft 365](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Sélectionnez **Joindre maintenant** et suivez les instructions à l’écran.\n1. Dans l’écran d’accueil, **sélectionnez Configurer l’abonnement E5**.\n1. Configurez votre compte d’administrateur. Une fois que vous avez terminé, l’écran suivant s’affiche.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/microsoft-365.png\" alt-text=\"Microsoft\" border=\"true\":::\n\n1. Connectez-vous à Teams à l’aide du compte d’administrateur que vous venez de configurer. Vérifiez que vous disposez de l’option **Charger une application personnalisée** dans Teams.\n\n## <a name=\"get-a-free-azure-account\"></a>Obtenir un compte Azure gratuit\n\nSi vous souhaitez héberger votre application ou accéder aux ressources dans Azure, vous devez disposer d’un abonnement Azure. [Créez un compte gratuit](https://azure.microsoft.com/free/) avant de commencer.\n\nVous disposez maintenant de tous les outils et configurez votre compte. Ensuite, nous allons configurer votre environnement de développement et commencer à créer ! Sélectionnez l’application que vous souhaitez faire en premier.\n"
- title: Créer un espace de travail de projet pour votre application d’extension de message
  durationInMinutes: 1
  content: "\nVous avez créé votre application bot. À présent, nous allons créer votre première application d’extension de message.\n\nLa fonctionnalité d’extension de message vous permet d’interagir avec un service web. Utilisez la zone de composition, la zone de commande ou une messagerie dans le client Teams pour rechercher et lancer des actions dans un système externe.\n\n  :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-msgext/your-helloworld-app-msgext.png\" alt-text=\"Diagramme montrant que cette application comporte trois fonctionnalités. l’extension de message est mise en surbrillance.\" border=\"false\":::\n\nIl existe deux types **d’extensions de message** Teams :\n\n- [Commandes de recherche](../msteams-platform/messaging-extensions/how-to/search-commands/define-search-command.md) : vous pouvez rechercher dans des systèmes externes. Ensuite, vous pouvez insérer ses résultats dans un message sous la forme d’une carte.\n- [Commandes d’action](../msteams-platform/messaging-extensions/how-to/action-commands/define-action-command.md) : vous pouvez présenter une fenêtre contextuelle modale à vos utilisateurs pour collecter ou afficher des informations. Vous pouvez ensuite traiter leur interaction et renvoyer des informations à Teams.\n\nNous allons créer une application d’extension de message avec une *commande de recherche*. Utilisez-le pour rechercher des données externes et insérer les résultats dans un message dans le client Teams.\n\nComme vous avez déjà préparé la création de ces applications, vous pouvez configurer un nouveau projet Teams pour la création de l’application d’extension de message.\n\n> [!NOTE]\n> Les extensions de message s’appuient sur les bots pour fournir une boîte de dialogue entre l’utilisateur et votre code.\n\n\nDans ce didacticiel, vous allez apprendre :\n\n1. [Comment configurer un nouveau projet d’extension de message avec le Kit de ressources Teams.](#create-your-message-extension-project-workspace)\n1. [À propos de la structure de répertoires de votre projet d’application.](#take-a-tour-of-the-message-extension-app-source-code)\n\n## <a name=\"create-your-message-extension-project-workspace\"></a>Créer votre espace de travail de projet d’extension de message\n\nSi les prérequis sont en place, commençons !\n\n> [!NOTE]\n> L’interface utilisateur de Visual Studio Code affichée est à partir de Mac. Elle peut varier en fonction de votre système d’exploitation, de votre version du Kit de ressources et de votre environnement.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vsc)\n\n1. Ouvrez Visual Studio Code.\n1. Sélectionnez l’icône :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: du kit de ressources Teams dans la barre latérale Visual Studio Code.\n\n1. Sélectionnez **Créer une application Teams**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project.png\" alt-text=\"Emplacement du lien Création d’un projet dans la barre latérale du Kit de ressources Teams.\" border=\"false\":::\n\n1. Sélectionnez **Créer une application Teams** pour créer une application à l’aide du Kit de ressources Teams.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/create-new-app.png\" alt-text=\"Démarrage de l’Assistant pour la Création d’un projet\" border=\"false\":::\n\n1. Sélectionnez **Extension de message**, Désélectionnez **Tab**, puis sélectionnez **OK**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/select-capabilities-mex1.png\" alt-text=\"Capture d’écran présentant comment ajouter des fonctionnalités à votre nouvelle application.\" border=\"false\":::\n\n1. Sélectionnez **JavaScript** comme langage de programmation.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/select-language-mex.png\" alt-text=\"Capture d’écran présentant comment sélectionner le langage de programmation.\" border=\"false\":::\n\n1. Sélectionnez votre **dossier d’espace de travail** en choisissant votre dossier requis.  \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/select-folder.png\" alt-text=\"Capture d’écran montrant comment sélectionner le dossier.\" border=\"false\":::\n\n1. Entrez un nom approprié pour votre application. Vérifiez que le nom de l’application est alphanumérique. Ensuite, sélectionnez **Entrée**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/enter-name-mex.png\" alt-text=\"Capture d’écran montrant comment entrer le nom de l’application.\" border=\"false\":::\n\n    Teams Toolkit crée l’application en quelques secondes.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/app-created-mex.png\" alt-text=\"Capture d’écran montrant l’application créée.\" border=\"false\":::\n\n    Une fois votre application créée, le Kit de ressources Teams affiche le message suivant : \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/preview-project.png\" alt-text=\"Localdebug\":::\n\n    Vous pouvez sélectionner **Le débogage local** pour afficher un aperçu de votre projet. \n\n  <details>\n  <summary>Récapitulatif rapide de la création d’une application Teams.</summary>\n  Regardez ce bref récapitulatif pour la création d’une application Teams.\n\n  ![Créer une application Teams](~/assets/videos/javascript-msg-ext-app1.gif)\n  </details>\n\n# <a name=\"command-line\"></a>[Ligne de commande](#tab/cli)\n\nUtilisez le CLI `teamsfx` pou créer votre premier projet. Commencez à partir du dossier dans lequel vous souhaitez créer le dossier du projet.\n\n``` bash\nteamsfx new\n```\n\nVous pouvez utiliser l’interface CLI pour créer une application Teams. L’interface CLI vous guide tout au long d’une série de questions. Chaque question inclut une instruction pour y répondre.\n\nPar exemple, utilisez des touches de direction pour sélectionner une option. Une fois que vous avez fait le choix, **sélectionnez Entrée** pour le confirmer.\n\n\n1. Sélectionnez **Créer une application Teams**.\n1. Sélectionnez **Extension de message** et désélectionnez **l’onglet**.\n1. Sélectionnez **JavaScript** comme langage de programmation.\n1. Sélectionnez **Entrée** pour sélectionner le dossier d’espace de travail par défaut.\n1. Entrez un nom approprié pour votre application, tel que `HelloMsgExtn`.  Le nom de l’application doit contenir des caractères alphanumériques uniquement.\n\n  Une fois que toutes les questions ont été répondues, votre projet est créé.\n\n---\n\n## <a name=\"take-a-tour-of-the-message-extension-app-source-code\"></a>Visite guidée du code source de l’application d’extension de message\n\nUne extension de message utilise Bot Framework. Vous l’utilisez pour interagir avec votre service via une conversation. Une fois la génération automatique terminée, affichez les répertoires et fichiers du projet dans la zone Explorateur de Visual Studio Code.\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-msgext/hw-folder-structure-mex12.png\" alt-text=\"folder msg\" border=\"true\":::\n\n| Nom du dossier | Sommaire |\n| --- | --- |\n| `.fx/configs` | Fichiers de configuration que l’utilisateur peut personnaliser pour l’application Teams. |\n| `.fx/configs/config.<envName>.json` | Fichier de configuration pour chaque environnement. |\n| `.fx/configs/azure.parameters.<envName>.json` | Fichier de paramètres pour l’approvisionnement Azure BICEP pour chaque environnement. |\n| `.fx/configs/projectSettings.json` | Paramètres de projet globaux qui s’appliquent à tous les environnements. |\n| `.fx/states` | Provisionnez la sortie générée par le Kit de ressources.  Le kit de ressources crée ce dossier après avoir approvisionné des ressources pour votre application. |\n| `.fx/states/state.<envName>.json` | Provisionnez le fichier de sortie pour chaque environnement. |\n| `.fx/states/<env>.userdata` | Données utilisateur sensibles pour la sortie de provisionnement pour chaque environnement. |\n| `bot` |  Code du bot nécessaire au moment de l’exécution. |\n| `bot/messageExtensionBot.js` | Point d’entrée principal de l’application d’extension de message. |\n| `templates/appPackage` | Fichiers de modèle de manifeste d’application, icônes d’application, color.png et outline.png. |\n| `templates/appPackage/manifest.template.json` | Manifeste d’application pour l’exécution de l’application dans un environnement local et distant.  |\n| `templates/azure` | Fichiers de modèle BICEP |\n\n> [!Tip]\n> Familiarisez-vous avec les bots et l’extension de message en dehors de Teams avant d’intégrer votre application dans Teams.\n"
- title: Générer et exécuter votre première application d’extension de message
  durationInMinutes: 1
  content: "\nAprès avoir configuré votre espace de travail de projet avec le Kit de ressources Teams, générez votre projet. Vous devez vous connecter à votre compte Microsoft 365.\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>Connectez-vous à votre compte Microsoft 365\n\nUtilisez ce compte pour vous connecter à Teams. Si vous utilisez un locataire de programme pour développeurs Microsoft 365, le compte d’administrateur que vous avez configuré lors de l’inscription est votre compte Microsoft 365.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vcode)\n\n1. Ouvrez Visual Studio Code.\n1. Sélectionnez l’icône du Kit de ressources  :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: Teams dans la barre latérale.\n1. Sélectionnez **Se connecter à M365**.\n\n    Votre navigateur web par défaut s’ouvre pour vous permettre de vous connecter au compte.\n\n1. Connectez-vous à votre compte Microsoft 365.\n1. Fermez le navigateur lorsque vous y êtes invité et revenez à Visual Studio Code.\n1. Revenez au Kit de ressources Teams dans Visual Studio Code.\n\n    La section **COMPTES** de la barre latérale affiche le nom de votre compte Microsoft 365. Le Kit de ressources Teams affiche **le chargement indépendant activé** si le chargement indépendant est activé pour votre compte Microsoft 365.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/m365-sideloading-enabled-msg.png\" alt-text=\"Capture d’écran montrant où se connecter à Microsoft 365 et Azure.\" border=\"false\":::\n\n    Vous êtes maintenant prêt à générer l’application et à l’exécuter localement !\n\n# <a name=\"command-line\"></a>[Ligne de commande](#tab/cline)\n\n1. Connectez-vous à Microsoft 365 avec l’interface CLI TeamsFx :\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Votre navigateur web par défaut s’ouvre pour vous permettre de vous connecter au compte. Connectez-vous à votre compte Azure à l’aide de vos informations d’identification. Fermez le navigateur lorsque vous y êtes invité.\n\n2. Connectez-vous à Azure avec l’interface CLI TeamsFx :\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Votre navigateur web par défaut s’ouvre pour vous permettre de vous connecter au compte. Connectez-vous à votre compte Azure à l’aide de vos informations d’identification. Fermez le navigateur lorsque vous y êtes invité.\n\n    Les connexions de compte sont partagées entre Visual Studio Code et l’interface CLI TeamsFx.\n\n    Maintenant que l’environnement de développement est configuré, vous pouvez créer, générer et déployer votre première application Teams.\n\n---\n\n## <a name=\"build-and-run-your-app-in-the-local-environment\"></a>Générer et exécuter votre application dans l’environnement local\n\nUne extension de message vous permet d’interagir avec un service web. Il tire parti de la fonctionnalité de messagerie et de la communication sécurisée d’un bot. L’application d’extension de message est ajoutée à un service web inscrit en tant que bot. \n\n### <a name=\"build-and-run-your-app-locally\"></a>Générer et exécuter votre application localement\n\n1. Sélectionnez **F5** dans Visual Studio Code pour exécuter votre application en mode débogage.\n    <!-- markdownlint-disable MD033 -->\n    <details>\n    <summary>Découvrez ce qui se produit lorsque vous exécutez votre application localement dans le débogueur.</summary>\n\n    Lorsque vous sélectionnez **F5**, le Kit de ressources Teams :\n\n    1. Vérifie toutes les conditions préalables suivantes :\n      - Vous êtes connecté avec un compte Microsoft 365.\n      - Le chargement indépendant est activé pour votre compte Microsoft 365.\n      - La version Node.js prise en charge est installée.\n      - Les packages NPM pour l’application bot sont installés.\n      - Ngrok est installé.\n      - Le port requis par l’application bot est disponible.\n\n      > [!NOTE]\n      > Si teams Toolkit ne parvient pas à vérifier un prérequis particulier, il vous invite à le vérifier.\n\n    2. Démarre Ngrok pour créer un tunnel HTTP.\n    3. Inscrit l’application dans Azure AD et configure l’application.\n    4. Inscrit l’application bot dans Bot Framework et configure l’application.\n    5. Inscrit l’application dans le portail des développeurs Teams et configure l’application.\n    6. Démarre l’application d’extension de message hébergée localement.\n    7. Démarre Teams dans un navigateur web et charge l’application Teams de manière indépendante.\n    \n    </details>\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/f5-build-and-run-mex.png\" alt-text=\"Capture d’écran montrant quand la touche F5 est enfoncée pour déboguer.\":::\n\n    > [!NOTE]\n    > Lorsque vous exécutez l’application pour la première fois, toutes les dépendances sont téléchargées et l’application est générée. Une fenêtre de navigateur s’ouvre une fois la génération terminée. Ce processus peut prendre 3 à 5 minutes.\n\n    Teams exécute votre application dans un navigateur web.\n    \n1. Connectez-vous avec votre compte Microsoft 365, si vous y êtes invité.\n1. Sélectionnez **Ajouter** pour ajouter l’application à votre compte.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/add-mex-app-local-debug.png\" alt-text=\"Capture d’écran montrant le message permettant d’ajouter l’application\" border=\"false\":::\n\n    Le kit de ressources affiche un message indiquant que l’application est ajoutée à Teams.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-added-local-debug.png\" alt-text=\"Capture d’écran montrant le message permettant d’essayer l’application maintenant ou ultérieurement\" border=\"true\":::\n\n    - Si vous sélectionnez **Obtenir**, vous pouvez essayer l’application ultérieurement dans la liste des applications chargées de manière indépendante.\n    - Si vous sélectionnez **Essayer**, Teams charge votre application.\n\n1. Sélectionnez **Essayer**.\n\n    L’application Extension de message est chargée dans une application de bot de conversation.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2//first-msgext/app-added-mex-local-debug.png\" alt-text=\"Capture d’écran montrant l’application chargée de manière indépendante dans Teams\" border=\"false\":::\n\n    À mesure que les applications d’extension de message s’appuient sur des bots pour activer la communication entre l’utilisateur et le service web, votre application se charge dans une fonctionnalité de conversation d’un bot.\n\n    - Si vous avez créé une application bot avant de créer l’application d’extension de message, vous pouvez voir qu’elle est chargée dans la même application de bot que celle que vous avez créée. Les messages de conversation précédents sont visibles.\n    - Si vous avez créé une extension de message en premier, votre application est chargée dans n’importe quelle conversation ouverte sur Teams.\n\n### <a name=\"test-your-app\"></a>Tester votre application\n\nLa première fois que votre application se charge, l’application d’extension de message est ouverte pour vous permettre de le tester. Cet exemple d’application vous permet de rechercher des packages npm open source à partir du registre de logiciels.\n\n#### <a name=\"to-run-a-search-query\"></a>Pour exécuter une requête de recherche\n\n1. Nous allons entrer une chaîne de recherche dans la zone de recherche, telle que « cli ». Vous obtenez la liste des éléments correspondants :\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2//first-msgext/mex-search-string.png\" alt-text=\"Capture d’écran montrant comment utiliser l’application pour la recherche\" border=\"true\":::\n\n1. Sélectionnez-en un dans les résultats de la recherche. Il s’affiche dans la zone de composition afin que vous puissiez envoyer le résultat au canal.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-search-result.png\" alt-text=\"Capture d’écran montrant le résultat de la recherche\" border=\"false\":::\n\n1. Sélectionnez les instructions **Envoyer** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-search-sent.png\" alt-text=\"Capture d’écran montrant le résultat de la recherche envoyé sur la conversation\" border=\"false\":::\n\n    Maintenant, vous avez appris à créer et exécuter une application d’extension de message de base !         \n\n## <a name=\"optional-scenarios\"></a>Scénarios facultatifs\n\nVous avez testé la fonctionnalité de recherche d’une application d’extension de message de base. Vous pouvez maintenant essayer d’autres fonctionnalités de cette application. Il s’agit de scénarios facultatifs dans cette application.\n<br>\n<br>\n<details>\n<summary>Pour créer une carte</summary>\n\n1. Sélectionnez **Créer une carte**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/app-added-mex-local-debug.png\" alt-text=\"Capture d’écran montrant comment créer une carte\" border=\"false\":::\n\n1. Entrez les détails de la carte comme indiqué, puis **sélectionnez Envoyer**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-card-details.png\" alt-text=\"Capture d’écran montrant comment ajouter des détails de carte\" border=\"true\":::\n\n    Les détails de votre carte s’affichent dans la zone de composition.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-card-added.png\" alt-text=\"Capture d’écran montrant comment ajouter des détails de carte\" border=\"true\":::\n\n1. Sélectionnez l’icône **Envoyer** dans la zone de composition.\n\n    L’application envoie la carte sur la conversation du bot.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-card-sent.png\" alt-text=\"Capture d’écran montrant la carte envoyée\" border=\"false\":::\n</details>\n<br>\n<details>\n<summary>Pour ouvrir votre application à partir de la zone de composition</summary>\n\nChoisissez l’une des méthodes suivantes pour ouvrir votre application.\n\n* **Utilisation de `@mention`:**\n\n1. Entrez `@your-app-name` dans la zone de commande de votre application.\n    \n    L’application ouvre la zone de recherche et vous pouvez l’utiliser pour exécuter une requête.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mention-mex-app.png\" alt-text=\"Capture d’écran montrant comment @mention l’application d’extension de message\" border=\"false\":::\n\n1. Entrez une chaîne de recherche, puis sélectionnez-en une dans le résultat de la recherche.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/command-box-search.png\" alt-text=\"Capture d’écran montrant comment exécuter une recherche à l’aide de l’application d’extension de message\" border=\"false\":::\n\n    Il s’affiche dans la zone de commande sous forme de carte.\n\n1. Copiez la carte pour la coller dans la zone de composition.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/command-search-card.png\" alt-text=\"Capture d’écran montrant le résultat de la recherche dans une carte\" border=\"false\":::\n    \n1. Envoyez la carte à l’aide de la zone de composition.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/command-search-card-sent.png\" alt-text=\"Capture d’écran montrant le résultat de la recherche dans une conversation\" border=\"false\":::\n\n* **Utilisation de l’icône à trois points :**\n\n1. Lancez l’extension de message à partir de trois points en bas de la zone de composition.\n1. Sélectionnez votre application d’extension de message.       \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/three-dot-mex.png\" alt-text=\"Capture d’écran montrant comment ouvrir l’exemple d’application d’extension de message\" border=\"false\":::\n\n    L’application d’extension de message se charge avec les options permettant d’exécuter une recherche et de créer des cartes adaptatives.\n</details>\n<br>\n<details>\n<summary>Exécuter l’application à partir d’applications chargées de manière indépendante</summary>\n\nVous pouvez ouvrir une application Teams chargée de manière indépendante à partir de la liste des applications chargées de manière indépendante. \n\n1. Sélectionnez l’icône **Store** dans la barre latérale Teams.\n1. Sélectionnez **gérer les applications**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/sideloaded-apps.png\" alt-text=\"Capture d’écran montrant les applications chargées de manière indépendante\" border=\"false\":::\n\n1. Sélectionnez l’icône en trois points pour votre application, puis sélectionnez **Afficher les détails**. Vous pouvez également copier le lien vers l’application et l’utiliser pour ouvrir l’application.\n1. Sélectionnez **Ouvrir** pour charger l’application, puis **sélectionnez Essayer**. \n    \n    L’application se charge dans Teams.\n\n</details>\n<br>\n<br>\n<!-- markdownlint-disable MD033 -->\n<details>\n<summary>Découvrez comment résoudre les problèmes si votre application ne s’exécute pas localement.</summary>\n\nPour exécuter votre application dans Teams, vous devez disposer d’un compte de développement Microsoft 365 qui permet le chargement indépendant des applications. Vous pouvez en savoir plus sur le chargement indépendant dans la section Prérequis.\n</details>\n"
- title: Déployer votre première application Teams
  durationInMinutes: 1
  content: "\nVous avez appris à créer, générer et exécuter une application Teams avec des fonctionnalités d’extension de message. La dernière étape consiste à déployer votre application sur Azure.\n\nDéployons la première application avec la fonctionnalité Tab sur Azure à l’aide du Kit de ressources Teams.\n\n## <a name=\"sign-in-to-your-azure-account\"></a>Connectez-vous à votre compte Azure\n\nUtilisez ce compte pour accéder au portail Microsoft Azure et provisionner de nouvelles ressources cloud pour prendre en charge votre application.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Ouvrez Visual Studio Code.\n1. Ouvrez le dossier du projet dans lequel vous avez créé l’application onglet.\n1. Sélectionnez l’icône du Kit de ressources  :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: Teams dans la barre latérale.\n1. Sélectionnez **Se connecter à Azure**.\n\n    > [!TIP]\n    > Si l’extension de compte Azure est installée et que vous utilisez le même compte, vous pouvez ignorer cette étape. Utilisez le même compte que celui que vous utilisez dans d’autres extensions.\n\n    Votre navigateur web par défaut s’ouvre pour vous permettre de vous connecter au compte.\n1. Connectez-vous à votre compte Azure à l’aide de vos informations d’identification.\n1. Fermez le navigateur lorsque vous y êtes invité et revenez à Visual Studio Code.\n\n    La section **COMPTES** de la barre latérale affiche les deux comptes séparément. Il répertorie également le nombre d’abonnements Azure utilisables disponibles. Vérifiez que vous disposez d’au moins un abonnement Azure utilisable. Si ce n’est pas le cas, déconnectez-vous et utilisez un autre compte.\n\n    Vous êtes maintenant prêt à déployer votre application sur Azure !\n\n    Félicitations, vous avez créé une application Teams ! \n    À présent, nous allons apprendre à déployer l’une des applications sur Azure à l’aide du Kit de ressources Teams.\n\n# <a name=\"command-line\"></a>[Ligne de commande](#tab/cline)\n\n1. Connectez-vous à Microsoft 365 avec l’interface CLI TeamsFx :\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Votre navigateur web par défaut s’ouvre pour vous permettre de vous connecter au compte. Connectez-vous à votre compte Azure à l’aide de vos informations d’identification. Fermez le navigateur lorsque vous y êtes invité.\n\n2. Connectez-vous à Azure avec l’interface CLI TeamsFx :\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Votre navigateur web par défaut s’ouvre pour vous permettre de vous connecter au compte. Connectez-vous à votre compte Azure à l’aide de vos informations d’identification. Fermez le navigateur lorsque vous y êtes invité.\n\n    Les connexions de compte sont partagées entre Visual Studio Code et l’interface CLI TeamsFx.\n\n    Félicitations, vous avez créé une application Teams ! \n    À présent, nous allons apprendre à déployer l’une des applications sur Azure à l’aide du Kit de ressources Teams.\n\n---\n\n  [!INCLUDE [Provision and Deploy your app on Azure](~/includes/get-started/azure-provisioning-instructions.md)]\n\n  <!-- markdownlint-disable MD033 -->\n  <details>\n  <summary>Découvrir ce qui se produit lorsque vous avez déployé votre application vers Azure</summary>\n\n  Avant le déploiement, l’application s’est exécutée localement :\n\n  * Le serveur principal s’exécute en utilisant **Azure Functions Core Tools**.\n  * Le point de terminaison HTTP de l’application, dans lequel Microsoft Teams charge l’application, s’exécute localement.\n\n  Le déploiement est un processus en deux étapes. Vous provisionnez les ressources sur un abonnement Azure actif, puis vous déployez ou chargez le code principal et frontal de l’application dans Azure.\n\n  * Le serveur principal, s’il est configuré, utilise différents services Azure, notamment Azure App Service et Stockage Azure.\n  * L’application frontale sera déployée sur un compte de stockage Azure configuré pour l’hébergement web statique.\n\n  </details>\n"
- title: Félicitations !
  durationInMinutes: 1
  content: "\nTu l’as fait !\n\nVous avez créé une application d’extension de message.\n\nMaintenant que vous avez appris à créer une application de base, vous pouvez passer à la création d’applications plus complexes. Pour commencer, essayez d’ajouter des fonctionnalités à vos applications existantes.\n\nPour ajouter des fonctionnalités à votre application existante :\n\n1. Sélectionnez **Ajouter une fonctionnalité** dans la section **Développement** de la barre latérale du Kit de ressources Teams.\n\n1. Sélectionnez la fonctionnalité que vous souhaitez ajouter à votre application.\n\nVoilà ! Teams Toolkit ajoute la structure automatique de la nouvelle fonctionnalité à la structure d’annuaires de votre application. Suivez les procédures pour générer et déployer l’application, et votre application aura plusieurs fonctionnalités. \n\nVous avez terminé le didacticiel pour créer une application d’extension de messagerie avec JavaScript.\n"
