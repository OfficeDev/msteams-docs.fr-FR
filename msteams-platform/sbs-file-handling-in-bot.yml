### YamlMime:Tutorial
title: Charger un fichier dans Teams à l’aide d’un bot
metadata:
  title: Charger un fichier dans Teams à l’aide d’un bot
  description: Découvrez comment charger des fichiers dans Teams à partir d’un bot et comment recevoir un fichier envoyé à un bot en tant que pièce jointe.
  audience: Developer
  level: Beginner
  ms.date: 28/12/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/how-to/bots-filesv4.md
  nextTutorialTitle: En savoir plus sur l’envoi et la réception de fichiers via le bot
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 8ea4bb70c0acb8eb646b214e19adb134e54b420c
  ms.sourcegitcommit: 6926cf5eee55d5047c11ca13afc7f6f23e270396
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 10/27/2022
  ms.locfileid: "68740496"
items:
- durationInMinutes: 1
  content: "Le bot utilise l’API Teams pour envoyer et recevoir des fichiers avec des utilisateurs dans les conversations personnelles. Les fichiers partagés dans Teams peuvent apparaître sous forme de cartes et permettre un affichage enrichi dans l’application. Le bot aide également à implémenter des fonctionnalités telles que les notes de frais, la reconnaissance d’images, l’archivage de fichiers et les signatures électroniques qui impliquent la modification du contenu des fichiers. \n\n**Principales fonctionnalités du chargement d’un fichier dans Teams à l’aide d’un bot :** \n\n  * Chargez des fichiers dans Teams à l’aide d’un bot.\n  * Recevoir un fichier envoyé au bot en tant que pièce jointe.\n  * Récupérer les images inline envoyées dans le message.\n\nCe guide pas à pas vous aide à charger un fichier dans Teams à l’aide d’un bot. Vous verrez la sortie suivante :\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/output-sbs.png\" alt-text=\"Capture d’écran montrant la sortie finale\":::\n"
- title: Configuration requise
  durationInMinutes: 1
  content: "Veillez à installer les outils suivants et à configurer votre environnement de développement : \n\n | &nbsp; | Installer | Pour l’utilisation... |\n | --- | --- | --- |\n | **Obligatoire** | &nbsp; | &nbsp; |\n | &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams pour collaborer avec toutes les personnes avec lesquelles vous travaillez via des applications pour la conversation, les réunions, les appels et le tout au même endroit.|\n | &nbsp; | [Visual Studio 2022 version 17.3](https://visualstudio.microsoft.com)<br> Installez l’une des deux charges de travail suivantes :<br> • développement ASP.NET et web <br> • Développement multiplateforme .NET Core | Vous pouvez installer la version entreprise dans Visual Studio 2022 et installer les charges de travail. |\n | &nbsp; | [SDK .NET Core version 3.1](https://dotnet.microsoft.com/en-us/download) | Liaisons personnalisées pour le débogage local et les déploiements d’applications Azure Functions. Si vous n’avez pas installé le SDK .NET 3.1 (ou version ultérieure) globalement, la version portable peut être installée. |\n | &nbsp; | [ngrok](https://ngrok.com/download) | Les fonctionnalités d’application Teams (bots conversationnels, extensions de message et webhooks entrants) nécessitent des connexions entrantes. Un tunnel connecte votre système de développement à Teams. Elle n’est pas obligatoire pour les applications qui incluent uniquement des onglets. Ce package est installé dans le répertoire du projet (à l’aide de npm `devDependencies`). |\n\n  > [!NOTE]\n  > Après avoir téléchargé ngrok, inscrivez-vous et installez [authtoken](https://ngrok.com/download).\n"
- title: Configurer l’environnement local
  durationInMinutes: 1
  content: "\n1. Ouvrez [BotBuilder-Samples](https://github.com/Microsoft/BotBuilder-Samples).\n1. Sélectionnez **Code**.\n1. Dans le menu déroulant, sélectionnez **Ouvrir avec GitHub Desktop**.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/botbuilder-sample_1.png\" alt-text=\"Capture d’écran montrant le clonage du dépôt\":::\n\n1. Sélectionnez **Cloner**. \n"
- title: Créer et inscrire votre bot
  durationInMinutes: 5
  content: "Les étapes suivantes vous aident à créer et à inscrire votre bot dans Portail Azure :\n\n* Créez une ressource Azure Bot pour inscrire le bot auprès d’Azure Bot Service.\n* Créez une clé secrète client pour activer l’authentification unique du bot.\n* Ajoutez un canal Teams pour déployer le bot.\n* Créez un tunnel vers les points de terminaison de votre serveur web à l’aide de ngrok.\n* Ajoutez un point de terminaison de messagerie au tunnel ngrok que vous avez créé.\n\n**Pour créer une ressource Azure Bot**\n\n1. Accédez au [Portail Azure](https://portal.azure.com/).\n1. Sélectionnez **Créer une ressource**.\n1. Dans la zone de recherche, entrez **Bot Azure**.\n1. Ensuite, sélectionnez **Entrée**.\n1. Sélectionnez **Azure Bot**.\n\n   :::image type=\"content\" source=\"./assets/images/azure-bot_1.png\" alt-text=\"Bot Azure.\":::\n\n1. Sélectionnez **Créer**.\n1. Entrez le nom de handle de bot requis dans **Handle de bot**.\n1. Dans la liste déroulante **Abonnement** , sélectionnez votre abonnement.\n1. Dans la liste déroulante **Groupe de** ressources, sélectionnez votre groupe de ressources existant.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/selection-of-resource_1.png\" alt-text=\"sélection de ressources azure\":::\n   \n   Pour créer un groupe de ressources, sélectionnez **Créer** un nouveau > entrez le nom de la ressource > sélectionnez **OK**. Sélectionnez l’emplacement requis dans la liste déroulante **Nouvel emplacement du groupe de ressources** .\n   \n    :::image type=\"content\" source=\"../msteams-platform/assets/images/bots/newresource.png\" alt-text=\"sélection de l’emplacement de la nouvelle ressource\":::\n\n1. Dans la section **ID d’application Microsoft** , par défaut **, l’option Créer un ID d’application Microsoft** est sélectionnée. \n\n    Vous pouvez également sélectionner **Utiliser l’inscription d’application existante** et entrer **l’ID d’application**, **l’ID de locataire de l’application** et **l’ID de ressource MSI** existants.\n\n    > [!NOTE]\n    > Vous ne pouvez pas créer plusieurs bots avec le même **ID d’application Microsoft**.\n\n1. Sélectionnez **Type d’application** **multilocataire**.\n\n1. Sélectionnez **Examiner et créer**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/review-create_1.png\" alt-text=\"création d’un bot\":::   \n\n1. Si la validation réussit, sélectionnez **Créer**. \n\n    L’approvisionnement de votre service de bot prend quelques instants.\n\n1. Sélectionnez **Accéder à la ressource**. \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/deployment_1.png\" alt-text=\"sélectionner une ressource\":::\n    \n    Votre bot Azure est créé.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/azure-bot-created_1.png\" alt-text=\"création d’un bot\":::\n\n **Pour créer une clé secrète client**\n\n   Si vous avez créé un **ID d’application Microsoft**, procédez comme suit :\n\n1. Dans le volet gauche, sélectionnez **Configuration**. \n\n   > [!TIP]\n   > Enregistrez **l’ID d’application Microsoft ou l’ID** **client** pour référence ultérieure.\n\n1. En regard de **Id d’application Microsoft**, sélectionnez **Gérer**.\n\n   :::image type=\"content\" source=\"~/assets/images/manage-bot-label_1.png\" alt-text=\"gérer le bot\":::\n\n1. Dans la section **Clés secrètes client** , sélectionnez **Nouvelle clé secrète client**. \n\n   :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/newclientsecret_2.png\" alt-text=\"ajout d’une clé secrète client\" border=\"true\":::\n\n        \n   La fenêtre **Ajouter une clé secrète client** s’affiche.\n\n1. Entrez **Description**.\n\n1. Sélectionnez **Ajouter**.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-client-secret_1.png\" alt-text=\"ajout d’une clé secrète client et d’une description\"::: \n\n   \n1. Dans la colonne **Valeur** , sélectionnez **Copier dans le Presse-papiers**.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/copy-value_1.png\" alt-text=\"copier la valeur dans le Presse-papiers\":::\n\n         \n   > [!TIP]\n   > Enregistrez la valeur **Des secrets client** ou le mot de passe de l’application pour référence ultérieure.\n\n**Pour ajouter le canal Teams**\n\n1. Sélectionnez **Accueil**.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/go-to-home_1.png\" alt-text=\"sélectionner la page d’accueil\":::    \n\n   \n1. Sélectionnez votre bot dans **Ressources récentes**.\n\n1. Sélectionnez **Canaux** dans le volet gauche, puis **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n   :::image type=\"content\" source=\"~/assets/images/adaptive-cards/channel-teams_1.png\" alt-text=\"Sélectionner Teams dans les canaux\":::\n  \n1. Cochez la case pour accepter les **conditions d’utilisation du service**.\n\n1. Sélectionnez **Accepter**.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/terms_1.png\" alt-text=\"sélectionner des termes\":::\n\n  \n1. Sélectionnez **Appliquer**.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/apply-teams_1.png\" alt-text=\"microsoft teams\":::\n\n  \n**Pour créer un tunnel pour le serveur web local**\n\nUtilisez ngrok ou l’invite de commandes pour créer un tunnel vers les points de terminaison HTTPS de votre serveur web en cours d’exécution localement. Exécutez la commande suivante dans ngrok :\n\n ```bash\n ngrok http --host-header=localhost 3978\n ```\n\n> [!TIP]\n> Si vous rencontrez **ERR_NGROK_4018**, suivez les étapes fournies dans l’invite de commandes pour vous inscrire et authentifier ngrok. Exécutez ensuite la commande `ngrok http --host-header=localhost 3978`.\n\n**Pour ajouter un point de terminaison de messagerie**\n\n   1. À partir de ngrok, copiez l’URL HTTPS.\n   \n      :::image type=\"content\" source=\"../msteams-platform/assets/images/ngrok-url_3.png\" alt-text=\"URL HTTPS ngrok\":::\n      \n      > [!NOTE]\n      > L’URL HTTPS dans votre ngrok est votre nom de domaine complet.\n      > est `WebAppDomain` un nom de domaine complet qui n’est pas inclus `https://` dans celui-ci.\n\n   1.  Dans **Paramètres** du bot Azure que vous avez créé, sélectionnez **Configuration**.\n\n   1.  Dans **Point de terminaison de messagerie**, utilisez l’URL HTTPS disponible à partir de ngrok et à la fin de l’URL, ajoutez **/api/messages**.\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-api-teams-bot_1.png\" alt-text=\"ajout d’api\":::\n    \n   1. Sélectionnez **Appliquer**.\n\n      Vous avez correctement configuré un bot dans Azure Bot Service.\n"
- title: Mettre à jour l’inscription de l’application Azure AD
  durationInMinutes: 5
  content: "1. Accédez au [Portail Azure](https://portal.azure.com/).\n\n1. Sélectionnez **Azure Active Directory**.\n\n1. Dans le volet gauche, sélectionnez **Inscriptions d’applications**.\n\n1. Sélectionnez votre bot.\n   \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/select-your-bot_1.png\" alt-text=\"sélection du bot\":::\n\n1. Sélectionnez **Exposer une API**.\n\n1. Sélectionnez **Définir**.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/set-api_1.png\" alt-text=\"api de paramétrage\":::\n\n1. Définissez **l’URI de l’ID d’application** sous la forme .`api://your ngrok/botid-{your AppID}`\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/app-id-uri1_1.png\" alt-text=\"URI de redirection\":::\n\n   L’image suivante montre le nom de domaine :\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/expose-api_1.png\" alt-text=\"api\":::\n\n    > [!NOTE]\n    > Si vous utilisez un service de tunneling tel que ngrok, veillez à mettre à jour la valeur chaque fois que votre sous-domaine ngrok change.\n    > Par exemple : `api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`, où `f631****.ngrok.io` est le nouveau nom de sous-domaine ngrok.\n\n1. Sélectionnez **Ajouter une étendue**. \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/selectscope_2.png\" alt-text=\"sélection de l’étendue\":::\n\n1. Dans le panneau qui s’affiche, entrez `access_as_user` comme **nom de l’étendue**.\n\n1. Définissez **Qui peut donner votre consentement ?** sur `Admins and users`.\n\n1. Pour configurer les invites de consentement de l’administrateur et de l’utilisateur avec les valeurs appropriées pour `access_as_user` l’étendue, fournissez les informations suivantes dans les champs :</br>\n\n     * Entrez `Teams can access the user’s profile` **comme nom d’affichage Administration consentement**.\n\n     * Entrez `Allows Teams to call the app’s web APIs as the current user` **comme Administration description du consentement**.\n\n     * Entrez `Teams can access the user profile and make requests on the user’s behalf` en tant que **Nom d’affichage du consentement de l’utilisateur**.\n\n     * Entrez `Enable Teams to call this app’s APIs with the same rights as the user` la **description du consentement de l’utilisateur**.\n\n1. Vérifiez que **State** est défini comme **Enabled**.\n\n1. Sélectionnez **Ajouter une étendue** à enregistrer.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-a-scope_1.png\" alt-text=\"ajout d’une étendue\":::\n\n    > [!NOTE]\n    > Le **nom de l’étendue** doit correspondre à l’URI **d’ID d’application** avec `/access_as_user` ajouté à la fin.</br>\n       `api://9179****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/access-as-user_1.png\" alt-text=\"afficher l’accès en tant qu’utilisateur\":::\n\n1. Dans la section **Applications clientes autorisées**, identifiez les applications que vous souhaitez autoriser pour l'application Web de votre application.\n\n1. Sélectionnez **Ajouter une application cliente**. \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/selectclientapp_1.png\" alt-text=\"application cliente\":::\n\n1. Entrez **l’ID client** : `1fec8e78-bce4-4aaf-ab1b-5451cc387264` pour l’application mobile ou de bureau Teams.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/client-id-mobile_1.png\" alt-text=\"client mobile\":::  \n\n   Vous pouvez entrer **l’ID client** : `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` pour l’application web Teams.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/client-web_1.png\" alt-text=\"id client web\":::\n\n   L’image suivante affiche **l’ID client** :\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/client-id-teams-bot.png\" alt-text=\"affiche les id\":::   \n\n1. Dans le volet gauche, sélectionnez **Autorisations d’API**. \n\n   > [!NOTE]\n   > Les utilisateurs doivent donner leur consentement aux autorisations d’API uniquement si l’application Azure Active Directory est inscrite dans un autre locataire.\n\n1. Sélectionnez **Ajouter une autorisation**.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-permission_1.png\" alt-text=\"autorisation ajoutée\":::\n\n1. Sélectionnez **Microsoft Graph**.\n\n1. Sélectionnez **Autorisations déléguées**.\n\n1. Ajouter **l’autorisation User.Read** in.\n\n1. Sélectionnez **Ajouter des autorisations**.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-permissions_1.png\" alt-text=\"autorisations déléguées ajoutées\":::\n\n1. Dans le volet gauche, sélectionnez **Authentification** pour définir un URI de redirection.\n\n   > [!NOTE]\n   > Si une application ne reçoit pas le consentement de l’administrateur informatique, les utilisateurs doivent fournir le consentement la première fois qu’ils utilisent une application.\n\n     1. Sélectionnez **Ajouter une plateforme**.\n    \n     1. Sélectionnez **Web**.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/configure-web_1.png\" alt-text=\"configuration web\"::: \n\n     1. Entrez l’URI de redirection de votre application en ajoutant au nom de `auth-end` domaine complet :</br> \n       `https://your ngrok/auth-end`. </br>\n\n     1. Activez **l’octroi implicite et les flux hybrides** en cochant les cases suivantes :\n         * **Jetons d’ID**\n         * **Jetons d’accès**\n\n     1. Sélectionnez **Configurer**.  \n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/configuration-web_1.png\" alt-text=\"configuration\":::\n\n  **Pour mettre à jour le manifeste**\n\n  1. Sélectionnez **Manifeste** dans le volet gauche.\n\n  1. Définissez l’élément de configuration **« accessTokenAcceptedVersion »:2**. S’il n’est `2` pas défini, remplacez sa valeur par et sélectionnez **Enregistrer**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/manifest-value.png\" alt-text=\"ouvrir le fichier manifeste\":::\n    \n     > [!NOTE]\n     > Si vous testez déjà votre bot dans Teams, déconnectez-vous de cette application et déconnectez-vous de Teams. Pour voir cette modification, reconnectez-vous.\n\n  **Pour configurer Bot Service connexion**\n\n  1. Accédez à **la page** >  Configuration **Ajouter des paramètres de connexion OAuth**.\n\n  1. Sélectionnez le bouton **Ajouter des paramètres de connexion OAuth**.\n\n  1. Dans **Nouveau paramètre de connexion**, entrez les informations suivantes :\n\n      * **Nom** entrez `name for your new connection setting. You can use the name in the settings of your bot service code`.\n      * **Fournisseur de services** , sélectionnez `Azure Active Directory V2`.\n      * **ID client que** vous êtes `Microsoft App ID`.\n      * **Clé secrète** `Value of the client secret ID`client .\n      * **L’URL d’échange de jetons** utilise le `Application ID URI` obtenu précédemment lors de l’exposition du point de terminaison d’API.\n      * Entrez `common`**l’ID de locataire**.\n      * **Les étendues** entrent `User.Read`.\n \n  1. Sélectionnez **Enregistrer**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/new-connection-setting_1.png\" alt-text=\"définition d’une nouvelle connexion\":::\n"
- title: Configurer les paramètres d’application et les fichiers manifestes
  durationInMinutes: 2
  content: "1. Accédez à **appsettings.json** dans le dépôt cloné.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/appsettings-file_1.png\" alt-text=\"manifeste des paramètres d’application\":::\n                  \n1. Ouvrez **appsettings.json** dans Visual Studio.\n\n1. Mettez à jour les informations suivantes :\n\n     * Définissez `\"MicrosoftAppType\"` **sur Multi-locataire**.\n     * Définissez sur `\"MicrosoftAppId\"` **l’ID d’application Microsoft** de votre bot.\n     * Définissez sur `\"MicrosoftAppPassword\"` la valeur de l’ID de clé secrète client de votre bot.\n     * Définissez `\"MicrosoftAppTenantId\"` comme vide pour le bot MultiTenant.\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/appsettings-json1_1.png\" alt-text=\"fichier appsettings dans Visual Studio\":::\n       \n1. Accédez à **manifest.json** dans le dépôt cloné.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/teams-app-manifest_1.png\" alt-text=\"ouvrir le fichier manifeste\":::\n     \n1. Ouvrez **manifest.json** dans Visual Studio et apportez les modifications suivantes :\n\n   Remplacez toutes les occurrences de `<<YOUR-MICROSOFT-APP-ID>>` par **l’ID d’application Microsoft** de votre bot.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/bot-id_1.png\" alt-text=\"remplacer l’ID du bot.\"lightbox=\"../msteams-platform/assets/images/teams-file-upload-bot/bot-id_1.png\"::: \n"
- title: Générer et exécuter le service
  durationInMinutes: 2
  content: "**Pour générer et exécuter le service à l’aide de Visual Studio ou de la ligne de commande**\n\n# <a name=\"visual-studio\"></a>[Visual Studio](#tab/visualstudio)\n\n  1. Lancez Visual Studio.\n  \n  1. Accédez à **Fichier** > **Ouvrir le** > **projet/la solution**.\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/VS-open-file_1.png\" alt-text=\"visual studio\":::      \n   \n  1. Sélectionnez **Le fichier TeamsFileUpload.csproj** dans le dossier **56.teams-file-upload** .\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/csproj-folder_1.png\" alt-text=\"dossier\":::        \n\n  1. Ouvrez **Explorateur de solutions** à partir de **l’affichage**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-task-module/solutionexplorer_1.png\" alt-text=\"view\":::\n\n  1. Cliquez avec le bouton droit sur **TeamsFileUpload**.\n\n  1. Sélectionnez **Définir comme projet de démarrage**.\n     \n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/teams-file-upload_1.png\" alt-text=\"démarrer le projet\":::\n     \n  1. Appuyez sur **F5** pour exécuter le projet.\n\n  1. Sélectionnez **Oui** si la boîte de dialogue suivante s’affiche :\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/certificate_1.png\" alt-text=\"ca\":::\n\n     \n     Une page web **s’ouvre avec un message Votre bot est prêt!**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/file-bot.png\" alt-text=\"votre bot est prêt\":::\n\n  \n\n# <a name=\"command-line\"></a>[Ligne de commande](#tab/cli)\n\nAccédez à **BotBuilder-Samples > samples > csharp_dotnetcore > 50.teams-messaging-extensions-search** dans la fenêtre d’invite de commandes et entrez la commande suivante :\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/Teams-Messaging-Extensions-Search/dotnetruncmd.png)\n"
- title: Ajouter un bot de chargement de fichiers dans Teams
  durationInMinutes: 2
  content: "1. Dans votre dépôt cloné, accédez à **csharp_dotnetcore** > **56.teams-file-upload** > **TeamsAppManifest**.\n\n1. Créez un .zip avec les fichiers suivants présents dans le dossier **TeamsAppManifest** : \n  * manifest.json\n  * icon-outline.png\n  * icon-color.png \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/teams-upload-manifest_1.png\" alt-text=\"dossier manifeste\":::\n\n 1. Accédez à **Microsoft Teams**.\n\n 1. Dans le volet gauche, sélectionnez **Applications** > **Gérer vos applications**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/AppStore1_1.png\" alt-text=\"ajout d’une application\":::\n\n 1. Sélectionnez **Charger une application personnalisée**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/upload-custom-app_1.png\" alt-text=\"applications personnalisées\":::\n\n 1. Sélectionnez **Ouvrir** pour charger le fichier .zip que vous avez créé dans le dossier **TeamsAppManifest** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/teams-manifest_1.png\" alt-text=\"manifeste ouvert\"::: \n\n 1. Sélectionnez **Ajouter**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-file-bot_1.png\" alt-text=\"ajouter\"::: \n\n  1. Dans la zone de rédaction du message, tapez **hi** et attendez quelques secondes qu’il réponde avec une carte.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/respond-bot.png\" alt-text=\"envoi de carte par bot\":::\n"
- title: Interaction avec le bot dans Teams
  durationInMinutes: 2
  content: "1. Envoyez un message au bot. Il répond avec une carte pour l’autorisation de charger le fichier.\n   \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/sbs-1.png\" alt-text=\"bot d’envoi de la carte\":::\n\n1. Sélectionnez **Autoriser**. Un `teams-logo.png` fichier est chargé dans le répertoire de fichiers, qui est prêt pour le téléchargement.\n     \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/sbs-2.png\" alt-text=\"logo teams\":::\n\n1. Envoyez un fichier au bot en tant que pièce jointe dans Teams. Il répond avec un message `Received and Saved`. Vous pouvez afficher la pièce jointe à partir de l’onglet **Fichiers** .\n    \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/sbs-3.png\" alt-text=\"envoyer le fichier\":::\n\n1. Envoyer une image en tant que pièce jointe. Il répond avec un message `Received and saved`. Vous pouvez afficher l’image dans la fenêtre de conversation et à partir de **l’onglet Fichiers** .\n   \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/sbs-4.png\" alt-text=\"received\":::\n  \n    > [!NOTE]\n    >  Une fois le bot installé dans l’étendue personnelle, l’utilisateur entre dans une conversation en face à face avec le bot.\n  \n"
- title: Relever le défi
  durationInMinutes: 1
  content: "Tu as trouvé quelque chose comme ça ?\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/output-sbs.png\" alt-text=\"image finale\"::: \n"
- content: Vous avez terminé le tutoriel. Vous pouvez désormais charger des fichiers dans Teams à l’aide d’un bot.
