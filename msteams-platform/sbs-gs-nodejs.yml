### YamlMime:Tutorial
title: Créer votre première application à l’aide de Node.js
metadata:
  title: Hello World avec Node.js
  description: Dans ce didacticiel, vous allez apprendre à créer Hello World application avec Node.js en configurant un nouveau projet, en créant et en déployant des applications d’extension d’onglet, de bot et de message.
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: Vue d’ensemble de Retour à la prise en main
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 0a57b3e1af0e38a9ff4f2c6b319ccad6700e4a7d
  ms.sourcegitcommit: c7fbb789b9654e9b8238700460b7ae5b2a58f216
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 06/29/2022
  ms.locfileid: "66485180"
items:
- durationInMinutes: 1
  content: >
    Démarrez le développement d’applications Microsoft Teams en créant votre première application avec un onglet, un bot et une fonctionnalité d’extension de message.


    > Cette application aura toutes les fonctionnalités et chacune possède sa propre interface utilisateur et son expérience utilisateur :


    :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png" alt-text="Diagramme montrant que cette application comporte trois fonctionnalités." border="true":::


    Dans ce didacticiel, vous allez apprendre :


    - Comment configurer un nouveau projet à l’aide d’outils en ligne de commande.

    - Comment créer trois applications avec une fonctionnalité différente chacune : onglet, bot et extension de message.

    - Comment déployer votre application à partir du portail des développeurs.
- title: Configuration requise
  durationInMinutes: 1
  content: "\nVoici la liste des outils que vous devez installer pour créer et déployer une application Teams.\n\n| &nbsp; | Installer | Pour l’utilisation... |\n| --- | --- | --- |\n| **Obligatoire** | &nbsp; | &nbsp; |\n| &nbsp; | [Node.js et NPM](https://nodejs.org/) | Environnement runtime JavaScript principal. Utilisez la dernière version de LTS v16.|\n| &nbsp; | [ngrok](https://ngrok.com/download) | Les fonctionnalités de l’application Teams (bots conversationnels, extensions de message et webhooks entrants) nécessitent des connexions entrantes. Un tunnel connecte votre système de développement à Teams. Il n’est pas nécessaire pour les applications qui incluent uniquement des onglets. Ce package est installé dans le répertoire du projet (à l’aide de npm `devDependencies`). |\n| &nbsp; | [Microsoft&nbsp; Edge](https://www.microsoft.com/edge) (recommandé) ou [Google Chrome](https://www.google.com/chrome/) | Un navigateur avec des outils de développement. |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | Environnements de build JavaScript, TypeScript ou SharePoint Framework (SPFx). Utilisez la version 1.55 ou ultérieure. |\n| &nbsp; | [Git](https://git-scm.com/downloads) | Git pour utiliser l’exemple de dépôt d’application Node.js à partir de GitHub. |\n| &nbsp; |  [Gulp](https://gulpjs.com/docs/en/getting-started/quick-start) | Kit de ressources JavaScript open source. Installez la version 4.0.0 ou ultérieure. |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams pour collaborer avec toutes les personnes avec lesquelles vous travaillez via les applications pour les conversations, les réunions, les appels, le tout au même endroit. | \n| **Optional** | &nbsp; | &nbsp; |\n| &nbsp; | [Azure Tools pour Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) et [Microsoft Azure CLI](/cli/azure/install-azure-cli) | Outils Azure pour accéder aux données stockées ou déployer un backend cloud pour votre application Teams dans Azure. |\n| &nbsp; | [outils de développement React pour Chrome](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi) OU [outils de développement React pour Microsoft&nbsp;Edge](https://microsoftedge.microsoft.com/addons/detail/react-developer-tools/gpphkfbcpidddadnkolkpfckpihlkkil) | Outils de navigateur pour le développement d’onglets avec JavaScript. |\n| &nbsp; | [Afficheur Microsoft Graph](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graph Explorer, un outil basé sur un navigateur qui vous permet d’exécuter une requête à partir de données Microsoft Graph. |\n| &nbsp; | [Documentation pour les développeurs](https://dev.teams.microsoft.com/) | Portail web pour configurer, gérer et distribuer votre application Teams, y compris à votre organisation ou au magasin Teams. |\n| &nbsp; | **Visual Studio Code Extensions** | &nbsp; |\n| &nbsp; | [Azure Functions Core Tools](/azure/azure-functions/functions-run-local) | Composants principaux localement pendant une exécution de débogage local, y compris les assistances d’authentification requises lors de l’exécution de vos services dans Azure. Il est installé dans le répertoire du projet (à l’aide du npm `devDependencies`). |\n| &nbsp; | [Kit de développement logiciel .NET](/dotnet/core/install/) | Liaisons personnalisées pour le débogage local et les déploiements d’applications Azure Functions. Si vous n’avez pas installé le Kit de développement logiciel (SDK) .NET 3.1 (ou version ultérieure) globalement, la version portable peut être installée. |\n\n## <a name=\"verify-version-numbers-for-installed-tools\"></a>Vérifier les numéros de version des outils installés\n\nUtilisez les commandes suivantes pour vérifier que les versions installées pour les outils sont nécessaires.\n\n> [!NOTE]\n> Utilisez la fenêtre de terminal avec laquelle vous êtes le plus à l’aise sur votre plateforme. Ces exemples utilisent Git Bash (inclus dans l’installation de Git), mais ces scripts s’exécutent sur la plupart des plateformes.\n\nPour vérifier les numéros de version des outils installés :\n\n1. Ouvrez une fenêtre de terminal. \n2. Exécutez la commande suivante pour vérifier la `git` version installée sur votre ordinateur :\n\n    ```bash\n    $ git --version\n    ```\n\n    Exemple de sortie : `git version 2.19.0.windows.1`\n    \n3. Exécutez la commande suivante pour vérifier la `node.js` version :\n    \n    ```bash\n    $ node -v\n    ```\n\n    Exemple de sortie : `v8.9.3`\n\n4. Vérifiez le numéro de version de `npm`:\n\n    ```bash\n    $ npm -v\n    ```\n\n    Exemple de sortie : `5.5.1`\n\n5. Vérifiez le numéro de version de `gulp`:\n    \n    ```bash\n    $ gulp -v\n    ```\n\n    Exemple de sortie :  `CLI version 2.3.0`\n    \n    `Local version 4.0.2`\n\n6. Exécutez la commande suivante pour vérifier le numéro de version de Visual Studio Code :\n\n    ```bash\n    code --version\n    ```\n\n    Exemple de sortie :  `1.28.2`\n    \n    `929bacba01ef658b873545e26034d1a8067445e9`\n\nVous pouvez utiliser une autre version de ces applications sans problème.\n\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Configurer votre locataire de développement Teams\n\nUn **locataire** est comme un espace ou un conteneur pour votre organisation dans Teams, où vous discutez, partagez des fichiers et exécutez des réunions.\nCet espace est également l’endroit où vous chargez et testez votre application. \n\nVérifions si vous êtes prêt à développer avec le locataire.\n\n### <a name=\"enable-sideloading-option\"></a>Activer l’option de chargement indépendant\n\nAprès avoir créé l’application, vous devez charger votre application dans Teams sans la distribuer. Ce processus est appelé chargement indépendant. Connectez-vous à votre compte Microsoft 365 pour afficher cette option.\n  \n> [!NOTE]\n> Le chargement indépendant est nécessaire pour afficher un aperçu et tester des applications dans l’environnement local Teams. S’il n’est pas activé, vous ne pourrez pas afficher un aperçu et tester votre application dans Teams localement.\n\nAvez-vous déjà un locataire et disposez-vous de l’accès administrateur ? Vérifions si c’est vraiment le cas !\n\nVérifiez si vous pouvez charger des applications de version test dans Teams :\n\n1. Dans le client Teams, sélectionnez l’icône **Du Store** .\n1. Sélectionnez **Gérer vos applications**.\n1. Recherchez l’option permettant de **charger une application personnalisée**. Si vous voyez l’option, le chargement indépendant des applications est activé.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"L’illustration montre l’option permettant de charger une application personnalisée dans Teams.\":::\n\n    > [!NOTE]\n    > Si Teams n’affiche pas l’option de chargement d’une application personnalisée, contactez votre administrateur Teams.\n\n### <a name=\"create-a-free-teams-developer-tenant\"></a>Créer un locataire de développeur Teams gratuit\n\nSi vous n’avez pas de compte de développeur Teams, vous pouvez l’obtenir gratuitement. Rejoignez le programme développeur Microsoft 365 !\n\n1. Accédez au[Programme pour les développeurs Microsoft 365](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Sélectionnez **Joindre maintenant** et suivez les instructions à l’écran.\n1. Dans l’écran d’accueil, **sélectionnez Configurer l’abonnement E5**.\n1. Configurez votre compte d’administrateur. Une fois que vous avez terminé, l’écran suivant s’affiche.\n\n    :::image type=\"content\" source=\"~/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"Exemple de ce que vous voyez après vous être inscrit au programme de développement Microsoft 365.\":::\n\n1. Connectez-vous à Teams à l’aide du compte d’administrateur que vous venez de configurer. Vérifiez que vous disposez de l’option **Charger une application personnalisée** dans Teams.\n\n## <a name=\"get-a-free-azure-account\"></a>Obtenir un compte Azure gratuit\n\nSi vous souhaitez héberger votre application ou accéder aux ressources dans Azure, vous devez disposer d’un abonnement Azure. [Créez un compte gratuit](https://azure.microsoft.com/free/) avant de commencer.\n\nVous disposez maintenant de tous les outils et configurez vos comptes. Ensuite, nous allons configurer votre environnement de développement et commencer à créer !\n\nVous pouvez continuer à utiliser cette fenêtre de terminal pour exécuter les commandes qui suivent dans ce didacticiel.\n\n<a name=\"DownloadSample\"></a>\n\n## <a name=\"download-the-sample\"></a>Télécharger l’exemple\n\nPour ce didacticiel, utilisez [Hello, World!](https://github.com/OfficeDev/Microsoft-Teams-Samples/tree/main/samples/app-hello-world/nodejs) exemple de prise en main. Vous pouvez le télécharger et le cloner à partir de GitHub.\n\n**Pour utiliser Git Bash pour cloner l’exemple de référentiel** :\n\n1. Ouvrez une fenêtre de terminal.\n1. Exécutez la commande suivante pour cloner l’exemple de référentiel sur votre ordinateur :\n\n    ```bash\n    git clone https://github.com/OfficeDev/Microsoft-Teams-Samples.git\n    ```\n\n> [!TIP]\n> Vous pouvez [dupliquer](https://help.github.com/articles/fork-a-repo/) ce [dépôt](https://github.com/OfficeDev/Microsoft-Teams-Samples) si vous souhaitez modifier et vérifier vos modifications apportées à votre référentiel GitHub pour référence ultérieure.\n"
- title: Créer votre première application Node.js
  durationInMinutes: 1
  content: "\nUne fois que vous avez cloné le référentiel pour Node.js exemple d’application, vous pouvez générer et tester l’application dans votre environnement local.\n\nDans cette page, vous allez apprendre à :\n1. [Générer et exécuter votre première application](#build-and-run-the-sample)\n1. [Tester votre exemple d’application](#test-your-sample-app-in-local-environment)\n\n\n## <a name=\"build-and-run-the-sample\"></a>Création et exécution de l’exemple\n\nUne fois le référentiel cloné, vous pouvez générer l’exemple d’application.\n\n1. Ouvrez une fenêtre de terminal.\n1. Exécutez la commande modifier le répertoire dans le terminal pour passer à l’exemple de répertoire d’application :\n\n    ```bash\n    cd Microsoft-Teams-Samples/samples/app-hello-world/nodejs/\n    ```\n\n1. Installez toutes les dépendances à l’aide de la commande suivante :\n\n    ```bash\n    npm install\n    ```\n\n    Vous devriez voir un ensemble de dépendances installées.\n\n1. Exécutez l’application à l’aide de la commande suivante une fois l’installation terminée :\n\n    ```bash\n    npm start\n    ```\n\n    Lorsque l’application Hello World démarre, elle s’affiche `App started listening on port 3333` dans la fenêtre du terminal.\n\n    > [!NOTE]\n    > Si un autre numéro de port s’affiche dans le message ci-dessus, c’est que vous avez défini une variable d’environnement PORT. Vous pouvez continuer à utiliser ce port ou remplacer votre variable d’environnement par 3333.\n\n1. Ouvrez une fenêtre de navigateur et utilisez les URL suivantes pour vérifier que toutes les URL d’application Hello World sont en chargement :\n\n    - `http://localhost:3333`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host.png\" alt-text=\"Image montrant Node.js hôte local\" border=\"false\":::\n\n    - `http://localhost:3333/hello`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-hello-nodejs.png\" alt-text=\"Image montrant Node.js page d’accueil de l’hôte local\" border=\"false\":::\n\n    - `http://localhost:3333/first`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-first-nodejs.png\" alt-text=\"Image montrant Node.js premier onglet de l’hôte local\" border=\"false\":::\n\n    - `http://localhost:3333/second`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-second-nodejs.png\" alt-text=\"Image montrant Node.js deuxième onglet de l’hôte local\" border=\"false\":::\n\n## <a name=\"test-your-sample-app-in-local-environment\"></a>Tester votre exemple d’application dans un environnement local\n\nN’oubliez pas que les applications dans Microsoft Teams sont des applications web qui exposent une ou plusieurs fonctionnalités. Mettez votre application à disposition sur Internet afin que la plateforme Teams puisse la charger. Pour rendre votre application accessible à partir d’Internet, vous devez *héberger* votre application.\n\nPour les tests locaux, vous pouvez exécuter l’application sur votre ordinateur local et y créer un tunnel avec un point de terminaison web. [ngrok](https://ngrok.com) est un outil gratuit qui vous permet de le faire. Avec *ngrok*, vous pouvez obtenir une adresse web telle que `https://d0ac14a5.ngrok.io` (cette URL n’est qu’un exemple). Vous pouvez [télécharger et installer](https://ngrok.com/download) *ngrok* pour votre environnement. Veillez à l’ajouter à un emplacement dans le `PATH`.\n\n### <a name=\"create-ngrok-tunnel\"></a>Créer un tunnel ngrok\n\nAprès avoir installé ngrok, vous pouvez créer un tunnel pour déployer votre application localement.\n\n1. Ouvrez une nouvelle fenêtre de terminal.\n1. Exécutez la commande suivante pour créer un tunnel. L’exemple d’application utilise le port 3333 :\n\n    ```bash\n    ngrok http 3333 -host-header=localhost:3333\n    ```\n    Le tunnel ngrok est créé. Voici un exemple de tunnel ngrok.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nodejs-ngrok-tunnel.png\" alt-text=\"Image montrant le tunnel ngrok\" border=\"false\":::\n\n    *Ngrok* écoute les demandes provenant d’Internet et les route vers votre application s’exécutant sur le port 3333.\n\nPour vérifier le déploiement local de l’application :\n\n1. Ouvrez le navigateur.\n1. Chargez votre application à l’aide de l’URL suivante :\n\n    `https://<forwarding address in ngrok console session>/`\n\n    Voici un exemple d’URL :\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nodejs-ngrok-tunnel-verify.png\" alt-text=\"Image montrant node.js application s’exécutant localement sur le tunnel ngrok\" border=\"false\":::\n\n    Vous pouvez essayer d’ajouter `hello`ou `second` `first`d’accéder à l’URL du tunnel ngrok pour afficher différentes pages d’onglet de l’application.\n\n    Ngrok écoute les demandes provenant d’Internet et les achemine vers votre application s’exécutant sur le port 3333.        \n\n1. Notez l’adresse de transfert dans la console ngrok. Vous avez besoin de cette URL pour déployer votre application dans Teams.\n\n    > [!NOTE]\n    > Si vous avez utilisé un autre port pendant la [génération et l’exécution](#build-and-run-the-sample), veillez à utiliser le même numéro de port pour configurer le tunnel *ngrok* .\n    \n    > [!TIP]\n    > Il est judicieux d’exécuter *ngrok* dans une autre fenêtre de terminal pour la maintenir en cours d’exécution sans interférer avec l’application de nœud, que vous devrez peut-être arrêter, reconstruire et réexécuter ultérieurement. La session *ngrok* retourne des informations de débogage utiles dans cette fenêtre. La version payante de *ngrok* autorise les noms persistants.\n\n    >[!IMPORTANT] \n    > Si vous utilisez la version gratuite de ngrok, votre application sera disponible uniquement pendant la session actuelle sur votre ordinateur de développement. Elle n’est pas disponible si la machine est arrêtée ou mise en veille. Lorsque vous redémarrez le service, il retourne une nouvelle adresse. Ensuite, vous devez mettre à jour chaque emplacement qui utilise l’adresse obsolète. N’oubliez pas cette étape lors du partage de l’application à des fins de test.\n\n<a name=\"DeployToTeams\"></a>\n\n## <a name=\"build-nodejs-app-package\"></a>Créer Node.js package d’application\n\nVous pouvez l’utiliser `gulp CLI` pour générer le package d’application pour Node.js.\n\n1. Ouvrez une fenêtre de terminal.\n1. Vérifiez que vous êtes dans le répertoire où le `node.js` clone est cloné. Il s’agit du dossier dans lequel `gulpfile.js` il est placé. \n1. Exécutez la commande suivante pour générer le package d’application Node.js.\n\n    ```$ gulp```\n\n    Voici un exemple de sortie de commande :\n\n    `[13:39:27] Using gulpfile ~\\documents\\github\\msteams-samples-hello-world-nodejs\\gulpfile.js`\n\n    `[13:39:27] Starting 'clean'...`\n\n    `[13:39:27] Starting generate-manifest'...`\n\n    `[13:39:27] Finished 'generate-manifest' after 11 ms`\n\n    `[13:39:27] Finished 'clean after 21 ms`\n\n    `[13:39:27] Starting 'default'...\n    Build completed. Output in manifest folder`\n\n    `[13:39:27] Finished 'default' after 62 μs`\n\n    Le package d’application helloworldapp.zip est créé. Vous trouverez le fichier de package au chemin d’accès suivant.\n\n    `<path to the cloned repo>/Microsoft-Teams-Samples/samples/app-hello-world/nodejs/manifest`\n\n    > [!NOTE]\n    > Recherchez le fichier de package d’application, helloworldapp.zip, si l’emplacement n’est pas clair dans l’outil que vous utilisez.\n"
- title: Configurer votre première application Node.js à l’aide du portail des développeurs
  durationInMinutes: 1
  content: "\nVous pouvez utiliser [le portail des développeurs](https://dev.teams.microsoft.com/) pour charger le package d’application dans Teams et configurer les fonctionnalités de l’application. Le portail des développeurs est une application Teams qui simplifie la création et l’inscription d’une application. Installez à partir du magasin Teams !\n\nAprès avoir généré et testé votre application Teams, vous pouvez la configurer et la prévisualiser à l’aide du portail des développeurs.\n\nLa mise à jour du package d’application inclut :\n\n1. [Importation du package d’application dans le portail des développeurs](#import-the-app-package-to-developer-portal)\n1. [Configuration des fonctionnalités d’application](#configure-your-apps-capabilities)\n\n### <a name=\"import-the-app-package-to-developer-portal\"></a>Importer le package d’application dans le portail des développeurs\n\nPour importer le package d’application :\n\n1. Ouvrir Microsoft Teams.\n\n1. Sélectionnez l’icône **Store** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\"::: dans la barre de gauche.\n\n1. Recherchez **le portail des développeurs** dans la barre de recherche, puis sélectionnez **Portail des développeurs***.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/select-dev-portal-app.png\" alt-text=\"Sélectionner l’application Portail des développeurs\" border=\"false\":::\n\n1. Sélectionnez **Ouvrir**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/open-dev-portal.png\" alt-text=\"Image montrant l’application Portail des développeurs ouverte\" border=\"false\":::\n\n    Le portail des développeurs s’ouvre.\n\n1. Sélectionnez l’onglet **Applications** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-app.png\" alt-text=\"Application Portail des développeurs\" border=\"false\":::\n\n1. Sélectionnez **Importer l’application**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/import-app-in-dev-portal.png\" alt-text=\"Image montrant le bouton Importer l’application\" border=\"false\":::\n\n1. Ouvrez le package `helloworldapp.zip` d’application à partir du chemin d’accès suivant dans votre structure d’exemple de répertoire de dépôt C# :\n\n    `<path to cloned node.js sample repo>\\Source\\Repos\\Microsoft-Teams-Samples\\samples\\app-hello-world\\nodejs\\manifest`\n\n    **L’application Hello World** est importée dans le portail des développeurs.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-imported-dev-portal.png\" alt-text=\"Image montrant l’application importée dans Teams\" border=\"false\":::\n\n    Une fois que vous avez importé votre application dans le portail des développeurs, vous pouvez afficher ses détails dans le portail des développeurs.\n\n### <a name=\"take-a-tour-of-your-app-in-developer-portal\"></a>Visite guidée de votre application dans le portail des développeurs\n\nUne fois que vous avez importé votre application dans le portail des développeurs, vous pouvez afficher ses détails, y compris le fichier manifeste.\n\n#### <a name=\"view-app-information\"></a>Afficher les informations de l’application\n\n1. Sélectionnez **Informations de base** dans le volet gauche du portail des développeurs.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-left-pane-basic.png\" alt-text=\"Image montrant le volet gauche du portail des développeurs\" border=\"false\":::\n\n1. Notez les informations suivantes à partir des informations de base :\n    - ID de l’application\n    - Informations sur les développeurs\n    - URL d’application\n\n1. Sélectionnez **Personnalisation dans** le volet gauche pour afficher les informations de personnalisation.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-branding.png\" alt-text=\"Image montrant les informations de personnalisation de l’application\" border=\"false\":::\n\n    Ces détails sont importants si vous écrivez une nouvelle application pour la distribution.\n\n#### <a name=\"view-app-features\"></a>Afficher les fonctionnalités de l’application\n\n- Sélectionnez **les fonctionnalités de l’application** dans le volet gauche du portail des développeurs.\n\n    Les fonctionnalités de l’application apparaissent dans le volet droit. Vous pouvez afficher les cartes pour l’application personnelle, le bot et l’extension de message.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-csharp-app-features.png\" alt-text=\"Image montrant les fonctionnalités de l’application\" border=\"false\":::\n\n#### <a name=\"view-the-app-manifest\"></a>Afficher le manifeste de l’application\n\nVous utilisez le fichier manifeste pour configurer les fonctionnalités, les ressources requises et d’autres attributs importants pour votre application.\n\n- Sélectionnez **Publier** dans le volet gauche pour ouvrir la liste déroulante, puis sélectionnez **Package d’application**.\n\n    Le manifeste de l’application s’affiche dans le volet droit.\n    \n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-app-manifest.png\" alt-text=\"Image montrant le fichier manifeste de l’application dans le portail des développeurs\" border=\"false\":::\n\n    Le fichier manifeste s’affiche dans le volet droit.\n\n### <a name=\"configure-your-apps-capabilities\"></a>Configurer les fonctionnalités de votre application\n\nUne fois que vous avez importé votre application dans le portail des développeurs, l’étape suivante consiste à configurer les fonctionnalités de l’application. Le portail des développeurs contient toutes les informations d’application dans différentes sections. Cela facilite la configuration des fonctionnalités de l’application.\n\nÀ l’aide du portail des développeurs, vous pouvez :\n1. [Configurer l’application onglet personnel](#configure-personal-tab-app).\n1. [Configurez le bot](#configure-bot).\n1. [Configurer l’extension de message](#configure-message-extension).\n\n#### <a name=\"configure-personal-tab-app\"></a>Configurer l’application onglet personnel\n\nPour configurer l’application onglet personnel :\n\n1. Sélectionnez l’icône :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: dans la carte **d’application personnelle** dans le volet **Fonctionnalités** de l’application, puis **sélectionnez Modifier**.\n\n    Les détails de l’onglet Hello s’affichent.\n\n1. Sélectionnez l’icône de l’onglet :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: Hello, puis **sélectionnez Modifier** pour ouvrir les détails de l’application à mettre à jour.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-edit-tab.png\" alt-text=\"Image montrant le menu onglet Hello\" border=\"false\":::\n\n1. Entrez les détails de l’application pour l’onglet Hello dans **Ajouter un onglet à votre application personnelle**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-add-tab.png\" alt-text=\"Image montrant les détails de l’onglet Hello\" border=\"false\":::\n\n    Entrez les détails suivants :\n    - **Nom** : onglet Hello.\n    - **URL de contenu** et **URL du site web** : adresse de transfert dans la session de console ngrok.\n    - **Contexte** : sélectionnez **l’onglet Personnel**.\n\n1. Sélectionnez **Mettre à jour**.\n\n    Les détails de l’onglet Hello s’affichent dans le volet **Application personnelle** .\n\n1. Sélectionnez **Enregistrer**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-save.png\" alt-text=\"Image montrant les détails de l’onglet Hello à enregistrer\" border=\"false\":::\n\n    Le volet **Application personnelle** affiche désormais le nouvel onglet et un onglet À propos créé automatiquement.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-saved.png\" alt-text=\"Image montrant les détails de l’onglet Hello et de l’onglet À propos de\" border=\"false\":::\n\n#### <a name=\"configure-bot\"></a>Configurer le bot\n\nIl est facile d’ajouter les fonctionnalités des bots à votre application. L’exemple d’application Hello World contient déjà un bot dans l’exemple, mais vous devez l’inscrire auprès de Teams.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-no-id.png\" alt-text=\"Image montrant l’application de bot importée sans ID d’application\" border=\"false\":::\n\nLe bot qui a été importé à partir de l’exemple n’a pas d’ID d’application associé. Vous devez le supprimer et créer un bot. Le portail des développeurs crée un ID d’application et l’inscrit auprès de Teams.\n\nL’ajout et la configuration d’un bot impliquent les opérations suivantes :\n\n1. [Ajout d’un nouveau bot](#to-add-a-new-bot).\n1. [Ajout d’un bot à l’application](#to-add-bot-to-app).\n1. [Configuration de l’étendue du bot](#to-configure-bot-scope).\n\n##### <a name=\"to-add-a-new-bot\"></a>Pour ajouter un nouveau bot\n\n1. Sélectionnez l’icône :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: dans la carte **Bot** dans le volet **Fonctionnalités de l’application** , puis **sélectionnez Supprimer**.\n\n1. Sélectionnez **Outils** pour ajouter une fonctionnalité.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/tools-option.png\" alt-text=\"Image montrant l’option Outils\" border=\"false\":::\n\n1. Sélectionnez **Gestion des bots** dans le volet **Outils** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tools-bot-card.png\" alt-text=\"Image montrant le volet de gestion des bots\" border=\"false\":::\n\n1. Sélectionnez **+ Nouveau bot** dans le volet **de gestion du bot** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-management-new-bot.png\" alt-text=\"Image montrant l’option nouveau bot\" border=\"false\":::\n\n1. Entrez un nom approprié pour votre bot, puis sélectionnez **Ajouter**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot.png\" alt-text=\"Image montrant comment ajouter un bot\" border=\"false\":::\n\n    Le volet **Configurer** s’affiche avec les détails du nouveau bot dans le volet gauche.\n\n1. Entrez l’URL de transfert à partir de la `ngrok` console, puis **sélectionnez Enregistrer**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-endpoint.png\" alt-text=\"Image montrant comment ajouter un point de terminaison de bot\" border=\"false\":::\n\n1. Sélectionnez **Secrets client**, puis **ajoutez une clé secrète client à votre bot** pour générer un mot de passe pour le bot.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-client-secrets.png\" alt-text=\"Image montrant la section Clé secrète client\" border=\"false\":::\n\n    Le portail des développeurs génère un mot de passe pour le bot.\n\n    Vous pouvez utiliser l’icône :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/copy-icon.png\"::: pour copier le mot de passe. Pour ce didacticiel, vous n’avez pas besoin de le copier.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-client-secret-generated.png\" alt-text=\"Image montrant la clé secrète client générée\" border=\"false\":::\n\n1. Sélectionnez **OK**.\n\n1. Sélectionnez **< Bots** pour revenir au volet **de gestion** des bots.\n\n    Le volet **de gestion du bot** affiche le nouveau bot ajouté avec un ID d’application.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-added.png\" alt-text=\"Image montrant le nouveau bot avec l’ID d’application\" border=\"false\":::\n\n1. Veillez à enregistrer l’ID de bot avec le mot de passe de la section **Clé secrète client** .\n\n##### <a name=\"to-add-bot-to-app\"></a>Pour ajouter un bot à l’application\n\n1. Ouvrez le volet **Fonctionnalités de l’application** , puis sélectionnez la carte **Bot** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-card.png\" alt-text=\"Image montrant la carte du bot\" border=\"false\":::\n\n    Le volet **Bot** s’affiche.\n\n1. Sélectionnez votre application de bot dans **Sélectionner un bot existant**, puis **sélectionnez Enregistrer**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-select-bot-app.png\" alt-text=\"Image montrant comment sélectionner une application bot existante\" border=\"false\":::\n\n    Le nouveau bot est ajouté à votre application avec son propre ID d’application.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-new-bot-added.png\" alt-text=\"Image montrant le nouveau bot ajouté à l’application\" border=\"false\":::\n\n##### <a name=\"to-configure-bot-scope\"></a>Pour configurer l’étendue du bot\n\n1. Sélectionnez l’icône :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: sur la nouvelle carte **bot** , puis **sélectionnez Modifier**.\n\n1. Parcourez le volet **Bot** pour afficher la section **Commandes** , puis sélectionnez **+ Ajouter une commande**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-add-command.png\" alt-text=\"Image montrant la section commandes\" border=\"false\":::\n\n1. Entrez un nom et une description appropriés pour la **commande**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot-command.png\" alt-text=\"Image montrant comment ajouter des détails de commandes\" border=\"false\":::\n\n1. Sélectionnez les trois étendues de la commande, puis sélectionnez **Ajouter**.\n    - **Personnel**\n    - **Équipe**\n    - **Conversation de groupe**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-add.png\" alt-text=\"Image montrant comment enregistrer les détails des commandes\" border=\"false\":::\n\n    La nouvelle commande est ajoutée à la section **Commandes** du volet **Bot** .\n\n1. Sélectionnez **Enregistrer**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-new-bot-command.png\" alt-text=\"Image montrant les détails des commandes à enregistrer\" border=\"false\":::\n\n    Les détails de la commande sont enregistrés.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-added.png\" alt-text=\"Image montrant les détails des commandes enregistrées\" border=\"false\":::\n\n1. Ouvrez le volet **Fonctionnalités** de l’application, puis sélectionnez **Carte d’application personnelle** pour afficher les détails de l’onglet de votre application.\n\n    Vous verrez qu’un onglet pour votre nouveau bot de conversation est ajouté à votre application.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-chat-tab-configured.png\" alt-text=\"Image montrant l’onglet conversation configuré\" border=\"false\":::\n\n#### <a name=\"configure-message-extension\"></a>Configurer l’extension de message\n\nLes extensions de message permettent aux utilisateurs de demander des informations à votre service et de publier ces informations. Les informations sont publiées sous la forme de cartes dans la conversation de canal. Les extensions de message s’affichent en bas de la zone de rédaction.\n\nPour ajouter une nouvelle extension de message :\n\n1. Sélectionnez l’icône :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: dans la carte **d’extension** de message dans le volet **Fonctionnalités de l’application** , puis **sélectionnez Supprimer**.\n\n1. Sélectionnez **Extension de message** dans le volet **fonctionnalités de l’application** .\n\n1. Sélectionnez le nom de votre application bot dans la liste déroulante **Sélectionner un bot existant** dans le volet **d’extension message** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-select-bot.png\" alt-text=\"Image montrant le volet d’extension message pour sélectionner le bot\" border=\"false\":::\n\n1. Sélectionnez **Enregistrer**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-select-msgext-bot.png\" alt-text=\"Image montrant le volet Extension de message\" border=\"false\":::\n\n    L’extension de message est enregistrée et la section **Commandes** s’affiche dans le volet **d’extension message** .\n\n1. Sélectionnez **+ Ajouter une commande** pour définir l’étendue de ce que votre application d’extension de message peut faire.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command.png\" alt-text=\"Image montrant la section Commande\" border=\"false\":::\n\n    Boîte **de dialogue Ajouter une commande** .\n\n1. Vérifiez que **la recherche** est sélectionnée comme type de commande que vous souhaitez ajouter dans la boîte de **dialogue Ajouter une commande** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-new-command.png\" alt-text=\"Image montrant la boîte de dialogue Ajouter une commande\" border=\"false\":::\n\n1. Entrez les informations appropriées pour les détails suivants :\n    - ID de commande\n    - Titre de la commande\n    - Description de la commande\n\n1. Parcourez la boîte de dialogue pour afficher les détails restants.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command-b.png\" alt-text=\"Image montrant les détails restants dans la boîte de dialogue Ajouter une commande\" border=\"false\":::\n\n1. Vérifiez que **La valeur par défaut** est sélectionnée.\n1. Sélectionnez les contextes suivants pour la commande d’extension de message :\n    - Zone de commande\n    - Boîte de rédaction\n    - Message\n1. Entrez les informations appropriées pour les détails suivants :\n    - Nom du paramètre\n    - Titre du paramètre\n    - Description du paramètre\n\n1. Sélectionnez **Texte** comme type d’entrée.\n1. Sélectionnez **Enregistrer**.\n1. La commande d’extension de message est enregistrée et s’affiche dans la liste des commandes du volet **d’extension message** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-command-added.png\" alt-text=\"Image montrant la commande ajoutée\" border=\"false\":::\n\n1. Sélectionnez **Enregistrer**.\n1. Ouvrir **le volet Fonctionnalités de l’application** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-app-capabilities-configured.png\" alt-text=\"Image montrant les fonctionnalités configurées pour Hello World application\" border=\"false\":::\n\n    Vous verrez les trois fonctionnalités (application onglet personnel, bot et extension de message) configurées pour l’application Hello World.\n"
- title: Afficher un aperçu et tester votre application Node.js
  durationInMinutes: 1
  content: "\nUne fois que vous avez importé votre application et configuré les fonctionnalités dans le portail des développeurs, vous pouvez afficher un aperçu et tester l’exemple d’application.\n\n## <a name=\"preview-your-app-in-teams\"></a>Afficher un aperçu de votre application dans Teams\n\nAprès avoir configuré les fonctionnalités de votre application, vous pouvez afficher un aperçu et tester votre application dans Teams dans l’environnement local.\n\nPour afficher un aperçu de votre application :\n\n1. Sélectionnez **Aperçu dans Teams dans** la barre d’outils du portail des développeurs.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/preview-in-teams.png\" alt-text=\"Image montrant le bouton Aperçu\" border=\"false\":::\n\n    Le portail des développeurs vous informe que votre application est chargée de manière indépendante.\n\n1. Sélectionnez **Gérer vos applications**.\n   Votre application est répertoriée dans les applications chargées de manière indépendante. \n1. Recherchez votre application à l’aide de la zone de recherche, puis sélectionnez les trois points dans sa ligne.\n1. Sélectionnez l’option **Affichage** .\n    La page **Ajouter** s’affiche pour votre application.\n1. Sélectionnez **Ajouter** pour charger l’application sur Teams.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/add-nodejs-app-sideload.png\" alt-text=\"Image montrant la boîte de dialogue Ajouter une application\" border=\"false\":::\n\n    Votre application est désormais disponible dans Teams. Vous pouvez afficher tous les onglets et tester les fonctionnalités :\n\n    - Onglet Hello :\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-tab.png\" alt-text=\"Image montrant l’onglet Hello dans un environnement local\" border=\"false\":::\n\n    - Chat bot :\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot.png\" alt-text=\"Image montrant le bot de l’application dans un environnement local\" border=\"false\":::\n\n        Vous pouvez envoyer un message à l’aide de la conversation.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot-chat.png\" alt-text=\"Image montrant une conversation dans un environnement local\" border=\"false\":::\n\n    - Extension de message :\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext.png\" alt-text=\"Image montrant l’extension de message dans un environnement local\" border=\"false\":::\n\n        Vous pouvez essayer une recherche à l’aide de l’extension de message.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext-query.png\" alt-text=\"Image montrant la recherche à l’aide de l’extension de message dans un environnement local\" border=\"false\":::\n\n    - À propos de l’onglet :\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-about.png\" alt-text=\"Image montrant l’onglet À propos de l’environnement local\" border=\"false\":::"
