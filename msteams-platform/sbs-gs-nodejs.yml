### YamlMime:Tutorial
title: Créer votre première application à l’aide de Node.js
metadata:
  title: Hello World avec Node.js
  description: Dans ce didacticiel, vous allez apprendre à créer une application Hello World avec Node.js.
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: Vue d’ensemble de la mise en place
  ms.custom: mvc
  ms.localizationpriority: none
  ms.openlocfilehash: 56c4d0e5f0730ab5b21b45daa3832c0dd2edd560
  ms.sourcegitcommit: 22c9e44437720d30c992a4a3626a2a9f745983c1
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 11/03/2021
  ms.locfileid: "60721037"
items:
- durationInMinutes: 1
  content: >
    Démarrez Microsoft Teams développement d’applications en construisant votre première application avec un onglet, un bot et une fonctionnalité d’extension de message.


    >Cette application aura toutes les fonctionnalités et chacune aura sa propre interface utilisateur et son expérience utilisateur :


    :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png" alt-text="Le diagramme montrant cette application comporte trois fonctionnalités." border="false":::


    Dans ce didacticiel, vous allez découvrir :


    - Comment configurer un nouveau projet à l’aide des outils de ligne de commande.

    - Comment créer trois applications avec une fonctionnalité différente : onglet, bot et extension de message.

    - Comment déployer votre application à partir du portail du développeur
- title: Configuration requise
  durationInMinutes: 1
  content: "\nVoici une liste des outils que vous devrez installer pour créer et déployer une application Teams web.\n\n| &nbsp; | Installer | Pour utiliser... |\n| --- | --- | --- |\n| **Obligatoire** | &nbsp; | &nbsp; |\n| &nbsp; | [Node.js et NPM](https://nodejs.org/) | Environnement d’runtime JavaScript back-end. Utilisez la dernière version de LTS v14.|\n| &nbsp; | [ngrok](https://ngrok.com/download) | Teams fonctionnalités d’application (bots de conversation, extensions de messagerie et webhooks entrants) nécessitent des connexions entrantes. Un tunnel connecte votre système de développement à Teams. Il n’est pas obligatoire pour les applications qui incluent uniquement des onglets. Ce package est installé dans le répertoire du projet (à l’aide de npm `devDependencies` ). |\n| &nbsp; | [Microsoft Edge](https://www.microsoft.com/edge) (recommandé) ou [Google Chrome](https://www.google.com/chrome/) | Navigateur avec outils de développement. |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | Environnements de build JavaScript, TypeScript SharePoint Framework (SPFx). Utilisez la version 1.55 ou ultérieure. |\n| &nbsp; | [Installer Git](https://git-scm.com/downloads) | Exemple de Node.js d’application à partir GitHub |\n| &nbsp; |  [gulp](https://gulpjs.com/docs/en/getting-started/quick-start) | Kit de ressources JavaScript open source. Installez la version 4.0.0 ou ultérieure. |\n| **Optional** | &nbsp; | &nbsp; |\n| &nbsp; | [Outils Azure pour Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) [et Azure CLI](/cli/azure/install-azure-cli) | Outils Azure permettant d’accéder aux données stockées ou de déployer un système d’arrière-Teams cloud dans Azure. |\n| &nbsp; | [React outils de développement pour Chrome](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi) OR [React Developer Tools for Edge](https://microsoftedge.microsoft.com/addons/detail/react-developer-tools/gpphkfbcpidddadnkolkpfckpihlkkil) | Outils de navigateur pour le développement d’onglets avec JavaScript. |\n| &nbsp; | [Afficheur Microsoft Graph](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graph Explorer, un outil basé sur un navigateur qui vous permet d’exécuter une requête à partir de microsoft Graph données. |\n| &nbsp; | [Documentation pour les développeurs](https://dev.teams.microsoft.com/) | Portail web pour configurer, gérer et distribuer votre application Teams y compris à votre organisation ou au Teams store. |\n| &nbsp; | **Visual Studio Code Extensions** | &nbsp; |\n| &nbsp; | [Outils azure Functions Core](/azure/azure-functions/functions-run-local) | Composants principaux localement pendant une exécution de débogage local, y compris les services d’aide à l’authentification requis lors de l’exécution de vos services dans Azure. Il est installé dans le répertoire du projet (à l’aide de npm `devDependencies` ). |\n| &nbsp; | [Kit de développement logiciel .NET](/dotnet/core/install/) | Liaisons personnalisées pour le débogage local et les déploiements d’applications Azure Functions. Si vous n’avez pas installé le SDK .NET 3.1 (ou version ultérieure) globalement, la version portable peut être installée. |\n\n## <a name=\"verify-version-numbers-for-installed-tools\"></a>Vérifier les numéros de version des outils installés\n\nVérifiez que les outils sont disponibles en exécutant ce qui suit dans une fenêtre terminal :\n\n> [!NOTE]\n> Utilisez la fenêtre terminal avec qui vous êtes le plus à l’aise sur votre plateforme. Ces exemples utilisent Git Bash (qui est inclus dans l’installation de Git), mais ces scripts s’exécuteront sur la plupart des plateformes.\n\n```bash\n$ git --version\ngit version 2.19.0.windows.1\n\n$ node -v\nv8.9.3\n\n$ npm -v\n5.5.1\n\n$ gulp -v\nCLI version 2.3.0\nLocal version 4.0.2\n```\nVous pouvez utiliser une version différente de ces applications sans problème.\n\nSi vous avez installé Visual Studio Code, vous pouvez vérifier l’installation en exécutant :\n\n```bash\ncode --version\n1.28.2\n929bacba01ef658b873545e26034d1a8067445e9\n```\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Configurer votre client Teams développement\n\nUn **client** est comme un espace ou un conteneur pour votre organisation dans Teams, où vous discutez, partagez des fichiers et exécutez des réunions.\nCet espace est également l’endroit où vous chargez et testez votre application. \n\nNous allons vérifier si vous êtes prêt à développer avec le client.\n\n### <a name=\"enable-sideloading-option\"></a>Activer l’option de chargement de version secondaire\n\nAprès avoir créé l’application, vous devez charger votre application dans Teams sans la distribuer. Ce processus est appelé chargement de version d’évaluation. Connectez-vous à votre Microsoft 365 pour afficher cette option.\n  \nAvez-vous déjà un client et avez-vous l’accès administrateur ? Nous allons vérifier si vous le faites vraiment !\n\nVérifiez si vous pouvez télécharger une version de version Teams :\n\n1. Dans le Teams client, sélectionnez **l’icône Du Store.**\n1. Sélectionnez **Gérer vos applications.**\n1. Recherchez l’option pour **Télécharger une application personnalisée.** Si l’option s’offre à vous, le chargement de version latéral des applications est activé.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"Illustration shows the option to upload a custom app in Teams.\":::\n\n    > [!NOTE]\n    > Si Teams n’affiche pas l’option de téléchargement d’une application personnalisée, parlez-en à Teams administrateur.\n\n### <a name=\"create-a-free-teams-developer-tenant\"></a>Créer un client Teams développeur gratuit\n\nSi vous n’avez pas de compte Teams développeur, vous pouvez l’obtenir gratuitement. Rejoignez le Microsoft 365 développeur !\n\n1. Go to the [Microsoft 365 developer program](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Sélectionnez **Rejoindre maintenant** et suivez les instructions à l’écran.\n1. Dans l’écran d’accueil, **sélectionnez Configurer l’abonnement E5.**\n1. Configurer votre compte d’administrateur. Une fois que vous avez terminé, l’écran suivant s’affiche.\n\n    :::image type=\"content\" source=\"~/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"Exemple de ce que vous voyez après vous être inscrire au programme Microsoft 365 développeur.\":::\n\n1. Connectez-vous Teams à l’aide du compte d’administrateur que vous viennent de configurer. Vérifiez que vous avez la Télécharger une option **d’application** personnalisée dans Teams.\n\n## <a name=\"get-a-free-azure-account\"></a>Obtenir un compte Azure gratuit\n\nSi vous souhaitez héberger votre application ou accéder aux ressources dans Azure, vous devez avoir un abonnement Azure. [Créez un compte gratuit](https://azure.microsoft.com/free/) avant de commencer.\n\nVous avez maintenant tous les outils et configurer vos comptes. Ensuite, nous allons configurer votre environnement de développement et commencer à créer !\n\nVous pouvez continuer à utiliser cette fenêtre terminal pour exécuter les commandes qui suivent dans ce didacticiel.\n\n<a name=\"DownloadSample\"></a>\n\n## <a name=\"download-the-sample\"></a>Télécharger l’exemple\n\nVous pouvez utiliser [Hello, World!](https://github.com/OfficeDev/Microsoft-Teams-Samples/tree/main/samples/app-hello-world/nodejs) pour commencer. Dans une fenêtre terminal, exécutez la commande suivante pour cloner l’exemple de référentiel sur votre ordinateur local :\n\n```bash\ngit clone https://github.com/OfficeDev/Microsoft-Teams-Samples.git\n```\n\n> [!TIP]\n> Vous pouvez [bifurcation](https://help.github.com/articles/fork-a-repo/) [de ce repo](https://github.com/OfficeDev/Microsoft-Teams-Samples) si vous souhaitez modifier et vérifier vos modifications apportées à votre GitHub de données pour référence ultérieure.\n"
- title: Créer votre première application Node.js de messagerie
  durationInMinutes: 1
  content: "\nUne fois que vous avez cloné le repo pour Node.js exemple d’application, vous pouvez créer et tester l’application dans votre environnement local.\n\nDans cette page, vous allez apprendre à :\n1. [Créer et exécuter votre première application](#build-and-run-the-sample)\n1. [Tester votre exemple d’application](#test-your-sample-app-in-local-environment)\n\n\n## <a name=\"build-and-run-the-sample\"></a>Création et exécution de l’exemple\n\nUne fois le référentiel cloné, vous pouvez créer l’exemple d’application.\n\n1. Ouvrez une fenêtre terminal.\n1. Exécutez la commande modifier le répertoire dans le terminal pour modifier le répertoire de l’exemple d’application :\n\n    ```bash\n    cd Microsoft-Teams-Samples/samples/app-hello-world/nodejs/\n    ```\n\n1. Installez toutes les dépendances à l’aide de la commande suivante :\n\n    ```bash\n    npm install\n    ```\n\n    Vous devriez voir un grand nombre de dépendances installées.\n\n1. Exécutez l’application à l’aide de la commande suivante une fois l’installation terminée :\n\n    ```bash\n    npm start\n    ```\n\n    Lorsque l’application Hello World démarre, elle s’affiche `App started listening on port 3333` dans la fenêtre du terminal.\n\n    > [!NOTE]\n    > Si vous voyez un autre numéro de port affiché dans le message ci-dessus, c’est parce que vous avez un ensemble de variables d’environnement PORT. Vous pouvez continuer à utiliser ce port ou modifier votre variable d’environnement en 3333.\n\n1. Ouvrez une fenêtre de navigateur et utilisez les URL suivantes pour vérifier que toutes les URL d’application Hello World sont en cours de chargement :\n\n    - `http://localhost:3333`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host.png\" alt-text=\"Image montrant Node.js hôte local\" border=\"false\":::\n\n    - `http://localhost:3333/hello`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-hello-nodejs.png\" alt-text=\"Image montrant Node.js page hello de l’hôte local\" border=\"false\":::\n\n    - `http://localhost:3333/first`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-first-nodejs.png\" alt-text=\"Image montrant Node.js premier onglet de l’hôte local\" border=\"false\":::\n\n    - `http://localhost:3333/second`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-second-nodejs.png\" alt-text=\"Image montrant Node.js deuxième onglet de l’hôte local\" border=\"false\":::\n\n## <a name=\"test-your-sample-app-in-local-environment\"></a>Tester votre exemple d’application dans un environnement local\n\nN’oubliez pas que Microsoft Teams sont des applications web qui exposent une ou plusieurs fonctionnalités. Rendez votre application disponible sur Internet afin que la plateforme Teams la charge. Pour rendre votre application accessible à partir d’Internet, vous devez *l’héberger.*\n\nPour les tests locaux, vous pouvez exécuter l’application sur votre ordinateur local et créer un tunnel vers celui-ci avec un point de terminaison web. [ngrok est](https://ngrok.com) un outil gratuit qui vous permet de le faire. Avec *ngrok,* vous pouvez obtenir une adresse web telle que `https://d0ac14a5.ngrok.io` (cette URL n’est qu’un exemple). Vous pouvez [télécharger et installer](https://ngrok.com/download) *ngrok* pour votre environnement. Veillez à l’ajouter à un emplacement dans `PATH` le .\n\n### <a name=\"create-ngrok-tunnel\"></a>Créer un tunnel ngrok\n\nAprès avoir installé ngrok, vous pouvez créer un tunnel pour déployer votre application localement.\n\n1. Ouvrez une nouvelle fenêtre terminal.\n1. Exécutez la commande suivante pour créer un tunnel. L’exemple d’application utilise le port 3333 :\n\n    ```bash\n    ngrok http 3333 -host-header=localhost:3333\n    ```\n    Le tunnel ngrok est créé. Voici un exemple de tunnel ngrok.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nodejs-ngrok-tunnel.png\" alt-text=\"Image montrant le tunnel ngrok\" border=\"false\":::\n\n    *Ngrok écoute* les demandes provenant d’Internet et les route vers votre application en cours d’exécution sur le port 3333.\n\nPour vérifier le déploiement local de l’application :\n\n1. Ouvrez le navigateur.\n1. Chargez votre application à l’aide de l’URL suivante :\n\n    `https://<forwarding address in ngrok console session>/hello`\n\n    Voici un exemple d’URL :\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nodejs-ngrok-tunnel-verify.png\" alt-text=\"Image montrant node.js'application s’exécutant localement sur un tunnel ngrok\" border=\"false\":::\n\n1. Notez l’adresse de forwarding dans la console ngrok. Vous avez besoin de cette URL pour déployer votre application dans Teams.\n\n    > [!NOTE]\n    > Si vous avez utilisé un autre port lors de la [build](#build-and-run-the-sample)et de l’utilisation, veillez à utiliser le même numéro de port pour configurer le tunnel *ngrok.*\n    > [!TIP]\n    > Il est bon d’exécuter *ngrok* dans une autre fenêtre terminal pour la maintenir en cours d’exécution sans interférer avec l’application de nœud, que vous de devez peut-être arrêter, reconstruire et réexécuter par la suite. La session *ngrok* retourne des informations de débogage utiles dans cette fenêtre. La version payante *de ngrok* autorise les noms persistants.\n\n    >[!IMPORTANT] \n    > Si vous utilisez la version gratuite de ngrok, votre application sera disponible uniquement pendant la session en cours sur votre ordinateur de développement. Elle n’est pas disponible si l’ordinateur est arrêté ou en veille. Lorsque vous redémarrez le service, il renvoie une nouvelle adresse. Ensuite, vous devez mettre à jour chaque emplacement qui utilise l’adresse obsolète. N’oubliez pas cette étape lors du partage de l’application pour le test.\n\n<a name=\"DeployToTeams\"></a>\n\n## <a name=\"build-nodejs-app-package\"></a>Créer Node.js package d’application\n\nVous pouvez `gulp CLI` l’utiliser pour créer le package d’application Node.js.\n\n1. Ouvrez une fenêtre terminal.\n1. Assurez-vous que vous êtes dans le répertoire où `node.js` le clonage est fait. Il s’agit du dossier `gulfile.js` dans lequel il est placé. \n1. Exécutez la commande suivante pour créer le package Node.js'application.\n\n    ```$ gulp```\n\n    Voici un exemple de sortie de commande :\n\n    `[13:39:27] Using gulpfile ~\\documents\\github\\msteams-samples-hello-world-nodejs\\gulpfile.js`\n\n    `[13:39:27] Starting 'clean'...`\n\n    `[13:39:27] Starting generate-manifest'...`\n\n    `[13:39:27] Finished 'generate-manifest' after 11 ms`\n\n    `[13:39:27] Finished 'clean after 21 ms`\n\n    `[13:39:27] Starting 'default'...\n    Build completed. Output in manifest folder`\n\n    `[13:39:27] Finished 'default' after 62 μs`\n\n    Le package d'helloworldapp.zip est créé. Vous trouverez le fichier de package à l’aide du chemin d’accès suivant.\n\n    `<path to the cloned repo>/Microsoft-Teams-Samples/samples/app-hello-world/nodejs/manifest`\n\n    > [!NOTE]\n    > Recherchez le fichier de package d’application, helloworldapp.zip, si l’emplacement n’est pas clair dans l’outil que vous utilisez.\n"
- title: Déployer votre première application Node.js l’aide du portail de dév
  durationInMinutes: 1
  content: "\nVous pouvez utiliser [le portail du](https://dev.teams.microsoft.com/) développeur pour télécharger le package d’application vers Teams. Developer Portal est une application Teams qui simplifie la création et l’inscription d’une application. Installez à partir du Teams store !\n\nLa mise à jour du package d’application inclut :\n\n1. [Importation du package d’application sur le portail du développeur](#import-the-app-package-to-developer-portal)\n1. [Configuration des fonctionnalités de l’application](#configure-your-apps-capabilities)\n\n### <a name=\"import-the-app-package-to-developer-portal\"></a>Importer le package d’application sur le portail du développeur\n\nPour importer le package d’application :\n\n1. Ouvrir Microsoft Teams.\n\n1. Sélectionnez **l’icône** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\"::: du Store dans la barre de gauche.\n\n1. Recherchez **Le portail du développeur** dans la barre de recherche, puis sélectionnez **Portail du développeur***.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/select-dev-portal-app.png\" alt-text=\"Sélectionner l’application Portail du développeur\" border=\"false\":::\n\n1. Sélectionnez **Ouvrir**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/open-dev-portal.png\" alt-text=\"Image montrant l’application Portail du développeur ouverte\" border=\"false\":::\n\n    Le portail du développeur s’ouvre.\n\n1. Sélectionnez **l’onglet** Applications.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-app.png\" alt-text=\"Application Portail du développeur\" border=\"false\":::\n\n1. Sélectionnez **Importer une application existante.**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/import-app-in-dev-portal.png\" alt-text=\"Image montrant le bouton Importer une application\" border=\"false\":::\n\n1. Ouvrez le package **d'helloworldapp.zip** à partir du chemin d’accès suivant dans votre C# exemple de répertoire de repo :\n\n    `<path to cloned node.js sample repo>\\\\Source\\Repos\\Microsoft-Teams-Samples\\samples\\app-hello-world\\nodejs\\manifest`\n\n    **L’application Hello World** est importée dans le Portail des développeurs.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-imported-dev-portal.png\" alt-text=\"Image montrant l’application importée dans Teams\" border=\"false\":::\n\n    Une fois que vous avez importé votre application dans le Portail du développeur, vous pouvez afficher ses détails dans le Portail des développeurs.\n\n### <a name=\"take-a-tour-of-your-app-in-developer-portal\"></a>Faire une visite guidée de votre application dans le Portail des développeurs\n\nUne fois que vous avez importé votre application dans le Portail du développeur, vous pouvez afficher ses détails, y compris le fichier manifeste.\n\n#### <a name=\"view-app-information\"></a>Afficher les informations de l’application\n\n1. Sélectionnez **Informations de** base dans le volet gauche du Portail du développeur.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-left-pane-basic.png\" alt-text=\"Image shows the left pane of Developer Portal\" border=\"false\":::\n\n1. Notez les informations suivantes à partir des informations de base :\n    - ID de l’application\n    - Informations sur le développeur\n    - URL d’application\n\n1. Sélectionnez **Branding** dans le volet gauche pour afficher les informations de pertinence.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-branding.png\" alt-text=\"Image montrant les informations de branding de l’application\" border=\"false\":::\n\n    Ces détails sont importants si vous écrivez une nouvelle application pour la distribution.\n\n#### <a name=\"view-app-features\"></a>Afficher les fonctionnalités de l’application\n\n- Sélectionnez **les fonctionnalités de** l’application dans le volet gauche du Portail du développeur.\n\n    Les fonctionnalités de l’application apparaissent dans le volet droit. Vous pouvez afficher des cartes pour l’application personnelle, le bot et l’extension de message.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-csharp-app-features.png\" alt-text=\"Image montrant les fonctionnalités de l’application\" border=\"false\":::\n\n#### <a name=\"view-the-app-manifest\"></a>Afficher le manifeste de l’application\n\nVous utilisez le fichier manifeste pour configurer les fonctionnalités, les ressources requises et d’autres attributs importants pour votre application.\n\n- Sélectionnez **Publier** dans le panneau gauche pour ouvrir la liste liste, puis sélectionnez **Package d’application.**\n\n    Le manifeste de l’application apparaît dans le volet droit.\n    \n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-app-manifest.png\" alt-text=\"Image montrant le fichier manifeste de l’application dans le portail du développeur\" border=\"false\":::\n\n    Le fichier manifeste apparaît dans le volet droit.\n\n### <a name=\"configure-your-apps-capabilities\"></a>Configurer les fonctionnalités de votre application\n\nUne fois que vous avez importé votre application dans le Portail des développeurs, l’étape suivante consiste à configurer les fonctionnalités de l’application. Le portail du développeur contient toutes les informations d’application dans différentes sections. Cela facilite la configuration des fonctionnalités de l’application.\n\nÀ l’aide du portail du développeur, vous pouvez :\n1. [Configurer l’application d’onglet personnel](#configure-personal-tab-app)\n1. [Configurer le bot](#configure-bot)\n1. [Configurer l’extension de message](#configure-message-extension)\n\n#### <a name=\"configure-personal-tab-app\"></a>Configurer l’application d’onglet personnel\n\nPour configurer l’application d’onglet personnel :\n\n1. Sélectionnez :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: l’icône sur la **carte d’application** personnelle dans le volet **Fonctionnalités** de l’application, puis sélectionnez **Modifier.**\n\n    Les détails de l’onglet Hello s’affichent.\n\n1. Sélectionnez :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: l’icône de l’onglet Hello, puis **sélectionnez Modifier** pour ouvrir les détails de l’application à mettre à jour.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-edit-tab.png\" alt-text=\"Image montrant le menu onglet Hello\" border=\"false\":::\n\n1. Entrez les détails de l’application pour l’onglet Hello dans Ajouter **un onglet à votre application personnelle.**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-add-tab.png\" alt-text=\"Image montrant les détails de l’onglet Hello\" border=\"false\":::\n\n    Entrez les détails suivants :\n    - Nom : onglet Hello\n    - URL de contenu et URL du site web : adresse de forwarding dans la session console ngrok\n\n1. Sélectionnez **Mettre à jour**.\n\n    Les détails de l’onglet Hello apparaissent dans le **volet d’application** Personnel.\n\n1. Sélectionnez **Enregistrer**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-save.png\" alt-text=\"Image montrant les détails de l’onglet Hello à enregistré\" border=\"false\":::\n\n    Le **volet d’application** Personnel affiche désormais le nouvel onglet et un onglet À propos de créé automatiquement.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-saved.png\" alt-text=\"Image montrant l’onglet Hello et les détails de l’onglet À propos de\" border=\"false\":::\n\n#### <a name=\"configure-bot\"></a>Configurer le bot\n\nIl est facile d’ajouter la fonctionnalité bots à votre application. L’exemple d’application Hello World possède déjà un bot dans le cadre de l’exemple, mais vous devez l’inscrire auprès Teams.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-no-id.png\" alt-text=\"Image montrant l’application bot importée sans ID d’application\" border=\"false\":::\n\nLe bot qui a été importé à partir de l’exemple n’a pas d’ID d’application associé. Vous devez la supprimer et créer un bot. Le portail du développeur crée un ID d’application et l’inscrit auprès Teams.\n\nL’ajout et la configuration d’un bot impliquent :\n\n1. [Ajout d’un nouveau bot](#to-add-a-new-bot)\n1. [Ajout d’un bot à l’application](#to-add-bot-to-app)\n1. [Configuration de l’étendue du bot](#to-configure-bot-scope)\n\n##### <a name=\"to-add-a-new-bot\"></a>Pour ajouter un nouveau bot\n\n1. Sélectionnez l’icône sur la carte bot dans le volet Fonctionnalités de :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: l’application, puis sélectionnez   **Supprimer.**\n\n1. Sélectionnez **Bot** dans le **volet Fonctionnalités de l’application.**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-card.png\" alt-text=\"Image montrant la carte du bot\" border=\"false\":::\n\n1. Sélectionnez **Créer un bot** dans le **volet** Bot.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-page.png\" alt-text=\"Image montrant le volet bot\" border=\"false\":::\n\n    La section **Gestion du** bot s’ouvre.\n\n1. Sélectionnez **+ Nouveau bot** dans le volet de gestion **du** bot.\n1. Entrez un nom approprié pour votre bot, puis sélectionnez **Ajouter.**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot.png\" alt-text=\"Image montrant comment ajouter un bot\" border=\"false\":::\n\n    Le **volet Configurer** s’affiche avec les détails du nouveau bot dans le volet gauche.\n\n1. Entrez l’URL de forwarding à partir de la `ngrok` console, puis sélectionnez **Enregistrer**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-endpoint.png\" alt-text=\"Image montrant comment ajouter un point de terminaison de bot\" border=\"false\":::\n\n1. Sélectionnez **les secrets client,** puis ajoutez **une secret client à votre bot** pour générer un mot de passe pour le bot.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-client-secrets.png\" alt-text=\"Image montrant la section de la secret client\" border=\"false\":::\n\n    Le portail du développeur génère un mot de passe pour le bot.\n\n1. Sélectionnez :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/copy-icon.png\"::: l’icône pour copier le mot de passe et enregistrez-le dans un fichier texte.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-client-secret-generated.png\" alt-text=\"Image montrant la secret client générée\" border=\"false\":::\n\n1. Sélectionnez **OK**.\n\n1. Sélectionnez **< bots** pour revenir au volet **de gestion bot.**\n\n    Le **volet gestion** du bot affiche le nouveau bot ajouté avec un ID d’application.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-added.png\" alt-text=\"Image montrant le nouveau bot avec l’ID d’application\" border=\"false\":::\n\n1. Veillez à enregistrer l’ID du bot avec le mot de passe de la section **de la secret client.**\n\n##### <a name=\"to-add-bot-to-app\"></a>Pour ajouter un bot à l’application\n\n1. Ouvrez **le volet Fonctionnalités** de l’application, puis sélectionnez **la carte bot.**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-card.png\" alt-text=\"Image montrant la carte du bot\" border=\"false\":::\n\n    Le **volet Bot** s’affiche.\n\n1. Sélectionnez votre application de bot à partir **d’un bot existant,** puis sélectionnez **Enregistrer.**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-select-bot-app.png\" alt-text=\"Image montrant comment sélectionner une application de bot existante\" border=\"false\":::\n\n    Le nouveau bot est ajouté à votre application avec son propre ID d’application.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-new-bot-added.png\" alt-text=\"Image montrant le nouveau bot ajouté à l’application\" border=\"false\":::\n\n##### <a name=\"to-configure-bot-scope\"></a>Pour configurer l’étendue du bot\n\n1. Sélectionnez :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: l’icône sur la nouvelle **carte bot,** puis sélectionnez **Modifier.**\n\n1. Déplacez-vous dans **le volet Bot** pour afficher la section **Commandes,** puis **sélectionnez + Ajouter une commande.**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-add-command.png\" alt-text=\"Image montrant la section commandes\" border=\"false\":::\n\n1. Entrez un nom et une description appropriés pour la **commande.**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot-command.png\" alt-text=\"Image montrant comment ajouter des détails de commandes\" border=\"false\":::\n\n1. Sélectionnez les trois étendues de la commande, puis sélectionnez **Ajouter.**\n    - **Personnel**\n    - **Équipe**\n    - **Conversation de groupe**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-add.png\" alt-text=\"Image montrant comment enregistrer les détails des commandes\" border=\"false\":::\n\n    La nouvelle commande est ajoutée à la section **Commandes** du **volet** Bot.\n\n1. Sélectionnez **Enregistrer**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-new-bot-command.png\" alt-text=\"Image montrant les détails des commandes à enregistrées\" border=\"false\":::\n\n    Les détails de la commande sont enregistrés.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-added.png\" alt-text=\"Image montrant les détails des commandes enregistrés\" border=\"false\":::\n\n1. Ouvrez **le volet Fonctionnalités** de l’application, puis sélectionnez **Carte** d’application personnelle pour afficher les détails de l’onglet de votre application.\n\n    Vous verrez qu’un onglet pour votre nouveau bot de conversation est ajouté à votre application.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-chat-tab-configured.png\" alt-text=\"Image montrant l’onglet de conversation configuré\" border=\"false\":::\n\n#### <a name=\"configure-message-extension\"></a>Configurer l’extension de message\n\nLes extensions de messagerie permet aux utilisateurs de demander des informations à votre service et de publier ces informations. Les informations sont publiées sous forme de cartes dans la conversation de canal. Les extensions de messagerie apparaissent en bas de la zone de composition.\n\nPour ajouter une nouvelle extension de message :\n\n1. Sélectionnez :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: l’icône sur la **carte d’extension** de message dans le volet **Fonctionnalités** de l’application, puis sélectionnez **Supprimer.**\n\n1. Sélectionnez **Extension de message** dans le volet **Fonctionnalités de l’application.**\n\n1. Sélectionnez le nom de  votre application bot dans la liste de listes listes des bots existantes dans le **volet d’extension** de message.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-select-bot.png\" alt-text=\"Image montrant le volet d’extension de message pour sélectionner un bot\" border=\"false\":::\n\n1. Sélectionnez **Enregistrer**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-select-msgext-bot.png\" alt-text=\"Image montrant le volet d’extension de message\" border=\"false\":::\n\n    L’extension de message est enregistrée et la section **Commandes apparaît** dans le **volet Extension** de message.\n\n1. Sélectionnez **+ Ajoutez une commande** pour définir l’étendue de ce que votre application d’extension de message peut faire.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command.png\" alt-text=\"Image montrant la section Command\" border=\"false\":::\n\n    Boîte **de dialogue Ajouter une** commande.\n\n1. **Assurez-vous que la** recherche est sélectionnée comme type de commande que vous souhaitez ajouter dans la boîte de dialogue Ajouter **une** commande.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-new-command.png\" alt-text=\"Image montrant la boîte de dialogue Ajouter une commande\" border=\"false\":::\n\n1. Entrez les informations appropriées pour les détails suivants :\n    - ID de commande\n    - Titre de la commande\n    - Description de la commande\n\n1. Déplacez-vous dans la boîte de dialogue pour afficher les détails restants.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command-b.png\" alt-text=\"Image montrant les détails restants dans la boîte de dialogue Ajouter une commande\" border=\"false\":::\n\n1. **Assurez-vous que La valeur** par défaut est sélectionnée.\n1. Sélectionnez les contextes suivants pour la commande d’extension de message :\n    - Zone de commande\n    - Zone de composition\n    - Message\n1. Entrez les informations appropriées pour les détails suivants :\n    - Nom du paramètre\n    - Titre du paramètre\n    - Description du paramètre\n\n1. Sélectionnez **Texte** comme type d’entrée.\n1. Sélectionnez **Enregistrer**.\n1. La commande d’extension de message est enregistrée et apparaît dans la liste des commandes dans le **volet Extension** de message.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-command-added.png\" alt-text=\"Image montrant l’ajout de la commande\" border=\"false\":::\n\n1. Sélectionnez **Enregistrer**.\n1. Volet **Des fonctionnalités d’ouverture** de l’application.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-app-capabilities-configured.png\" alt-text=\"Image montrant les fonctionnalités configurées pour l’application Hello World\" border=\"false\":::\n\n    Les trois fonctionnalités (application onglet personnel, bot et extension de message) sont configurées pour l’application Hello World.\n"
- title: Prévisualiser et tester votre Node.js de test
  durationInMinutes: 1
  content: "\nUne fois que vous avez importé votre application et configuré les fonctionnalités dans le portail du développeur, vous pouvez afficher un aperçu et tester l’exemple d’application.\n\n## <a name=\"preview-your-app-in-teams\"></a>Afficher un aperçu de votre application dans Teams\n\nAprès avoir configuré les fonctionnalités de votre application, vous pouvez prévisualiser et tester votre application dans Teams l’environnement local.\n\nPour afficher un aperçu de votre application :\n\n1. Sélectionnez **Aperçu dans Teams** la barre d’outils du Portail du développeur.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/preview-in-teams.png\" alt-text=\"Image montrant le bouton Aperçu\" border=\"false\":::\n\n    Le portail du développeur vous informe que votre application est correctement rechargée.\n\n1. Sélectionnez **Publier** dans le volet gauche, puis téléchargez le **package** d’application pour télécharger le package d’application configuré à partir du portail du développeur.\n1. Enregistrez le fichier zip du package d’application. Le nom de fichier est Hello World.zip.\n1. Sélectionnez **l’icône Du** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\"::: Store.\n1. Sélectionnez **Gérer vos applications.**\n1. Sélectionnez **Télécharger une application personnalisée.**\n1. Sélectionnez Hello World.zip pour le télécharger vers Teams dans l’environnement local.\n\n    La page **Ajouter** s’affiche pour votre application.\n\n1. Sélectionnez **Ajouter** pour installer l’application sur Teams.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/add-nodejs-app-sideload.png\" alt-text=\"Image montrant la boîte de dialogue Ajouter une application\" border=\"false\":::\n\n    Votre application est désormais disponible dans Teams. Vous pouvez afficher tous les onglets et tester les fonctionnalités :\n\n    - Onglet Hello :\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-tab.png\" alt-text=\"Image montrant l’onglet Hello dans l’environnement local\" border=\"false\":::\n\n    - Bot de conversation :\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot.png\" alt-text=\"Image montrant le bot de l’application dans un environnement local\" border=\"false\":::\n\n        Vous pouvez envoyer un message à l’aide de la conversation.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot-chat.png\" alt-text=\"Image montrant la conversation dans un environnement local\" border=\"false\":::\n\n    - Extension de message :\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext.png\" alt-text=\"Image montrant l’extension de message dans l’environnement local\" border=\"false\":::\n\n        Vous pouvez essayer une recherche à l’aide de l’extension de message.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext-query.png\" alt-text=\"Image montrant la recherche à l’aide de l’extension de message dans l’environnement local\" border=\"false\":::\n\n    - À propos de l’onglet :\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-about.png\" alt-text=\"Image montrant l’onglet À propos de dans l’environnement local\" border=\"false\":::"
