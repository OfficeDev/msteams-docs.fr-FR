### YamlMime:Tutorial
title: Déployer des liens dans Teams à l’aide d’un bot
metadata:
  title: Déployer des liens dans Teams à l’aide d’un bot
  description: Découvrez comment configurer le bot de déploiement de liens Teams. Ce guide vous aide à inscrire votre application et à recevoir une activité d’appel.
  audience: Developer
  level: Beginner
  ms.date: 01/20/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: messaging-extensions/how-to/link-unfurling.md
  nextTutorialTitle: En savoir plus sur le déploiement de liens
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: e3821b87d03d76c6932aed9184e11b70ed88078c
  ms.sourcegitcommit: 10debe0f01574a21aab54bfac692a4c8373263a8
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 10/31/2022
  ms.locfileid: "68789960"
items:
- durationInMinutes: 1
  content: "Microsoft Bot Framework étend la spécification des cartes en ajoutant un ensemble de cartes prédéfinies que les bots peuvent utiliser dans le cadre de la messagerie des bots. Le déploiement de liens à l’aide d’un bot dans Teams vous aide à inscrire votre application. Et permet de recevoir une activité d’appel, lorsque l’URL avec le domaine est collée dans la zone de rédaction du message. L’activité invoke contient l’URL complète et vous pouvez répondre avec une carte. Les utilisateurs peuvent déployer le lien à l’aide d’un bot avec des informations supplémentaires pour obtenir une expérience améliorée.\n\n > [!NOTE]\n > Actuellement, le déploiement de liens n’est pas pris en charge sur les clients mobiles.\n\n **Principales fonctionnalités du déploiement de liens** \n\n * Permet à l’utilisateur de coller des URL et de répondre avec une carte.\n * Permet à l’utilisateur d’inscrire l’application et reçoit l’activité d’appel.\n\nCe guide pas à pas vous aide à créer un bot pour effectuer le déploiement de liens dans Microsoft Teams pour `https://www.BotFramework.com`. Vous verrez la sortie suivante :\n\n:::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/final-image.png\" alt-text=\"Déploiement de lien\":::\n"
- title: Configuration requise
  durationInMinutes: 1
  content: "Veillez à installer les outils suivants et à configurer votre environnement de développement : \n\n | &nbsp; | Installer | Pour l’utilisation... |\n | --- | --- | --- |\n | **Obligatoire** | &nbsp; | &nbsp; |\n | &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams pour collaborer avec toutes les personnes avec lesquelles vous travaillez via des applications pour la conversation, les réunions, les appels et le tout au même endroit.|\n | &nbsp; | [Visual Studio 2022 version 17.3](https://visualstudio.microsoft.com)<br> Installez l’une des deux charges de travail suivantes :<br> • **développement ASP.NET et web** <br> • Développement **multiplateforme .NET Core** | Vous pouvez installer la version entreprise dans Visual Studio 2022 et installer les charges de travail. |\n | &nbsp; | [SDK .NET Core version 3.1](https://dotnet.microsoft.com/en-us/download) | Liaisons personnalisées pour le débogage local et les déploiements d’applications Azure Functions. Si vous n’avez pas installé le SDK .NET 3.1 (ou version ultérieure) globalement, la version portable peut être installée. |\n | &nbsp; | [ngrok](https://ngrok.com/download) | Les fonctionnalités d’application Teams (bots conversationnels, extensions de message et webhooks entrants) nécessitent des connexions entrantes. Un tunnel connecte votre système de développement à Teams. Elle n’est pas obligatoire pour les applications qui incluent uniquement des onglets. Ce package est installé dans le répertoire du projet (à l’aide de npm `devDependencies`). |\n\n  > [!NOTE]\n  > Après avoir téléchargé ngrok, inscrivez-vous et installez [authtoken](https://ngrok.com/download).\n"
- title: Configurer l’environnement local
  durationInMinutes: 1
  content: "\n1. Ouvrez [Exemples BotBuilder](https://github.com/microsoft/BotBuilder-Samples).\n1. Sélectionnez **Code**.\n1. Sélectionnez **Ouvrir avec GitHub Desktop** dans le menu déroulant.\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/clonerepository-new_1.png\" alt-text=\"Cloner le référentiel\":::\n\n1. Sélectionnez **Cloner**. \n"
- title: Créer et inscrire votre bot dans Portail Azure
  durationInMinutes: 5
  content: "Les étapes suivantes vous aident à créer et à inscrire votre bot dans Portail Azure :\n\n* Créez une ressource Azure Bot pour inscrire le bot auprès d’Azure Bot Service.\n* Créez une clé secrète client pour activer l’authentification unique du bot.\n* Ajoutez un canal Teams pour déployer le bot sur le canal Teams.\n* Utilisez ngrok pour créer un tunnel vers les points de terminaison de votre serveur web.\n* Ajoutez un point de terminaison de messagerie au tunnel ngrok que vous avez créé.\n\n**Pour créer une ressource Azure Bot**\n\n1. Accédez au [Portail Azure Microsoft](https://portal.azure.com/).\n1. Sélectionnez **Créer une ressource**.\n1. Dans la zone de recherche, entrez **Azure Bot**.\n1. Ensuite, sélectionnez **Entrée**.\n1. Sélectionnez **Azure Bot**.\n\n   :::image type=\"content\" source=\"./assets/images/azure-bot_1.png\" alt-text=\"Bot Azure.\":::\n\n1. Sélectionnez **Créer**.\n1. Entrez le nom de handle de bot requis dans **Handle de bot**.\n1. Sélectionnez votre **abonnement** et votre **groupe de ressources** dans la liste déroulante respective.\n1. Sélectionnez **Résidence des données requise (préversion)** .\n\n   :::image type=\"content\" source=\"./assets/images/conversation-bot/create-azure-bot.png\" alt-text=\"Capture d’écran montrant comment créer un bot Azure.\":::\n   \n   Vous pouvez également créer un groupe de ressources (sélectionnez **Créer un nouveau** > entrez le nom de la ressource > sélectionnez **OK**).\n\n1. Sélectionnez l’emplacement requis dans la liste déroulante **Nouvel emplacement du groupe de ressources** , si vous avez créé un groupe de ressources.\n\n    :::image type=\"content\" source=\"~/assets/images/bots/newresource.png\" alt-text=\"Capture d’écran montrant le nouvel emplacement du groupe de ressources.\":::\n\n1. Dans la section **ID d’application Microsoft** , par défaut **, l’option Créer un ID d’application Microsoft** est sélectionnée. \n\n   Vous pouvez également sélectionner **Utiliser l’inscription d’application existante** et entrer **ID d’application**, **ID de locataire d’application** et **ID de ressource MSI**.\n\n   > [!NOTE]\n   > Vous ne pouvez pas créer plusieurs bots avec le même **ID d’application Microsoft**.\n\n1. Sélectionnez **Type d’application** **multilocataire**.\n\n1. Sélectionnez **Examiner et créer**.\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/register-bot-2_1.png\" alt-text=\"Capture d’écran montrant la création de l’ID d’application Microsoft.\":::\n\n1. Une fois la validation réussie, sélectionnez **Créer**.\n\n   L’approvisionnement de votre service de bot prend quelques instants. \n\n1. Sélectionnez **Accéder à la ressource**. \n\n    :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/botdeployment_1.png\" alt-text=\"Capture d’écran montrant la navigation d’accéder à la ressource.\":::\n\n   Votre bot Azure est créé et vous pouvez voir le **groupe de ressources** et **l’ID d’abonnement** dans le bot Azure.\n\n    :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/bot-page_1.png\" alt-text=\"Ressource de bot Azure créée\":::\n    \n  **Pour créer une clé secrète client**\n\n   Si vous avez créé un **ID d’application Microsoft**, procédez comme suit :\n\n1. Dans le volet gauche, sélectionnez **Configuration**. \n\n   > [!TIP]\n   > Enregistrez **l’ID d’application Microsoft ou l’ID** **client** pour référence ultérieure.\n\n1. En regard de **Id d’application Microsoft**, sélectionnez **Gérer**.\n\n   :::image type=\"content\" source=\"~/assets/images/manage-bot-label_1.png\" alt-text=\"Capture d’écran montrant la sélection de l’option gérer.\":::\n\n1. Dans la section **Clés secrètes client** , sélectionnez **Nouvelle clé secrète client**. \n\n   :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/newclientsecret_1.png\" alt-text=\"Capture d’écran montrant la sélection d’une nouvelle clé secrète client.\":::\n        \n   La fenêtre **Ajouter une clé secrète client** s’affiche.\n\n1. Entrez **Description** dans la clé secrète client.\n\n1. Sélectionnez **Ajouter**.\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/clientsecret_1.png\" alt-text=\"Capture d’écran montrant l’option Ajouter.\":::\n   \n1. Dans la colonne **Valeur** , sélectionnez l’icône Copier dans le Presse-papiers pour copier les détails de la valeur.\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/clientvalue.png\" alt-text=\"Capture d’écran montrant la valeur de la clé secrète client copiée dans le Presse-papiers.\":::\n         \n   > [!TIP]\n   > Enregistrez la **valeur** de la clé secrète client ou le mot de passe de l’application pour référence ultérieure.\n\n **Pour ajouter le canal Teams**\n\n1. Sélectionnez **Accueil**.\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/gotohome_1.png\" alt-text=\"Page d’accueil\":::\n   \n1. Sélectionnez votre bot dans **Ressources récentes**.\n\n1. Sélectionnez **Canaux** dans le volet gauche.\n\n1. Sélectionner **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. Cochez la case pour accepter les **conditions d’utilisation du service**.\n\n1. Sélectionnez **Accepter**.\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/terms.png\" alt-text=\"Conditions d’utilisation du service\":::\n  \n1. Sélectionnez **Appliquer**.\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/apply.png\" alt-text=\"Capture d’écran montrant la sélection de Teams.\":::\n  \n**Pour créer un tunnel pour le serveur web local**\n\nUtilisez ngrok pour créer un tunnel vers les points de terminaison HTTPS de votre serveur web en cours d’exécution localement. Exécutez la commande suivante dans ngrok :\n\n  \n   ```bash\n   ngrok http --host-header=localhost 3978\n   ```\n   > [!TIP]\n   > Si vous rencontrez **ERR_NGROK_4018**, suivez les étapes indiquées dans l’invite de commandes pour vous inscrire et authentifier ngrok. Exécutez ensuite la commande `ngrok http --host-header=localhost 3978`.\n\n**Pour ajouter un point de terminaison de messagerie**\n\n1. À partir de ngrok, copiez l’URL HTTPS (https vers io).\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/ngrok-url.png\" alt-text=\"Capture d’écran montrant l’URL https ngrok.\":::\n\n    > [!NOTE]\n    > L’URL HTTPS dans votre ngrok est votre nom de domaine complet.\n    > est `WebAppDomain` un nom de domaine complet qui n’est pas inclus `https://` dans celui-ci.\n\n1. Dans **Paramètres**, sélectionnez **Configuration**.\n\n1. Dans **Point de terminaison de messagerie**, utilisez l’URL HTTPS disponible à partir de ngrok et à la fin de l’URL, ajoutez **/api/messages**.\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/messaging-endpoint_2.png\" alt-text=\"Capture d’écran montrant le point de terminaison de messagerie.\":::\n     \n1. Sélectionnez **Appliquer**.\n\n    Vous avez correctement configuré un bot dans Azure Bot Service.\n"
- title: Mettre à jour l’inscription de l’application Azure AD
  durationInMinutes: 1
  content: "1. Accédez au [Portail Azure](https://portal.azure.com/).\n\n1. Sélectionnez **Azure Active Directory**.\n\n1. Dans le volet gauche, sélectionnez **inscriptions d'applications**.\n\n1. Sélectionnez votre bot.\n   \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/appregister_1.png\" alt-text=\"Enregistrement des applications\":::\n   \n1. Sélectionnez **Exposer une API**.\n\n1. Sélectionnez **Définir**.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/exposeanapi_1.png\" alt-text=\"Exposer une API\":::\n  \n1. Définissez **l’URI de l’ID d’application** sous la forme .`api://your ngrok/botid-{your AppID}`\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/setlink_1.png\" alt-text=\"Définir le lien\":::\n           \n   L’image suivante montre le nom de domaine :\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/appIDuri_1.png\" alt-text=\"ID de l’application\":::\n  \n    > [!NOTE]\n    > Si vous utilisez un service de tunneling tel que ngrok, veillez à mettre à jour la valeur chaque fois que votre sous-domaine ngrok change.\n    > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`, où `f631****.ngrok.io` est le nouveau nom de sous-domaine ngrok.\n\n1. Sélectionnez **Ajouter une étendue**. \n   \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/selectscope_1.png\" alt-text=\"Sélectionnez l’étendue\":::\n\n1. Dans le panneau qui s’affiche, entrez `access_as_user` comme **nom de l’étendue**.\n\n1. Définissez **Qui peut donner votre consentement ?** sur `Admins and users`.\n\n1. Pour configurer les invites de consentement de l’administrateur et de l’utilisateur avec les valeurs appropriées pour `access_as_user` l’étendue, fournissez les informations suivantes dans les champs :</br>\n\n     * Entrez `Teams can access the user’s profile` **comme nom d’affichage Administration consentement**.\n\n     * Entrez `Allows Teams to call the app’s web APIs as the current user` **comme Administration description du consentement**.\n\n     * Entrez `Teams can access the user profile and make requests on the user’s behalf` en tant que **Nom d’affichage du consentement de l’utilisateur**.\n\n     * Entrez `Enable Teams to call this app’s APIs with the same rights as the user` la **description du consentement de l’utilisateur**.\n\n1. Vérifiez que **State** est défini comme **Enabled**.\n\n1. Sélectionnez **Ajouter une étendue** à enregistrer.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/addscope.png\" alt-text=\"Capture d’écran montrant comment ajouter une étendue.\"::: \n    \n    > [!NOTE]\n    > Le **nom de l’étendue** doit correspondre à l’URI **d’ID d’application** avec `/access_as_user` ajouté à la fin.</br>\n       `api://your ngrok/botid-00000000-0000-0000-0000-000000000000/access_as_user`\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/scope_1.png\" alt-text=\"Scopes\"::: \n    \n1. Dans la section **Applications clientes autorisées**, identifiez les applications que vous souhaitez autoriser pour l'application Web de votre application. \n\n1. Sélectionnez **Ajouter une application cliente**. \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/selectclientapp_1.png\" alt-text=\"Capture d’écran montrant la sélection de l’application cliente.\":::\n   \n1. Entrez **l’ID client** : `1fec8e78-bce4-4aaf-ab1b-5451cc387264` pour l’application de bureau Teams. \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/addclientapplication1.png\" alt-text=\"Capture d’écran montrant l’ajout d’une application cliente\":::\n   \n   Entrez **l’ID client** : `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` pour l’application web Teams.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/addclientapplication2.png\" alt-text=\"Capture d’écran de l’ajout de l’ID client.\":::\n  \n1. Sélectionnez **Étendues autorisées**.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/authorizedscope.png\" alt-text=\"Capture d’écran montrant l’ajout d’une application cliente.\":::\n  \n   L’image suivante affiche **l’ID client** :\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/clientapps.png\" alt-text=\"Capture d’écran montrant l’application cliente.\"::: \n     \n1. Dans le volet gauche, sélectionnez **Autorisations d’API**. \n\n   > [!NOTE]\n   > Les utilisateurs doivent donner leur consentement aux autorisations d’API uniquement si l’application Azure AD est inscrite dans un autre locataire.\n\n1. Sélectionnez **Ajouter une autorisation**.\n\n1. Sélectionnez **Autorisations déléguées** **Microsoft Graph** > .\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/addpermission_1.png\" alt-text=\"Capture d’écran montrant l’ajout d’une autorisation.\":::\n  \n1. Sélectionnez les autorisations suivantes :</br>\n     * **email**\n     * **offline_access**\n     * **Openid**\n     * **profil**\n     * **User.Read**\n\n1. Sélectionnez **Ajouter des autorisations**.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/other-permissions_1.png\" alt-text=\"Capture d’écran montrant l’ajout d’autres autorisations.\":::\n     \n1. Dans le volet gauche, sélectionnez **Authentification** pour définir un URI de redirection. \n\n   > [!NOTE]\n   > Si une application ne reçoit pas le consentement de l’administrateur informatique, les utilisateurs doivent fournir le consentement la première fois qu’ils utilisent une application.\n           \n     1. Sélectionnez **Ajouter une plateforme**.\n     1. Sélectionnez **Web**.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/webauth_1.png\" alt-text=\"Web\":::\n     \n     1. Entrez l’URI de redirection de votre application en ajoutant au nom de `auth-end` domaine complet :</br> \n       `https://your ngrok/auth-end`. </br>\n\n     1. Activez **l’octroi implicite et les flux hybrides** en cochant les cases suivantes :\n         * **Jetons d’ID**\n         * **Jetons d’accès**\n\n     1. Sélectionnez **Configurer**.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/authend_1.png\" alt-text=\"Auth-end\":::\n        \n"
- title: Configurer les paramètres d’application et les fichiers manifestes
  durationInMinutes: 1
  content: "1. Accédez à **appsettings.json** dans le référentiel cloné.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/appsettingslocation_1.png\" alt-text=\"Capture d’écran montrant la navigation de l’emplacement des paramètres de l’application.\":::\n  \n1. Ouvrez **appsettings.json** dans Visual Studio.\n\n1. Mettez à jour les informations suivantes :  \n\n     * Définissez `\"MicrosoftAppType\"` **sur Multi-locataire**.\n     * Définissez sur `\"MicrosoftAppId\"` **l’ID d’application Microsoft** de votre bot.\n     * Définissez sur `\"MicrosoftAppPassword\"` la valeur de l’ID de clé secrète client de votre bot.\n     * Définissez `\"MicrosoftAppTenantId\"` comme vide pour le bot MultiTenant.\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/appsettings_1.png\" alt-text=\"Capture d’écran montrant les paramètres de l’application.\":::\n    \n1. Accédez à **manifest.json** dans le référentiel cloné.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/manifestlocation_1.png\" alt-text=\"Capture d’écran montrant l’emplacement du fichier manifeste.\":::\n    \n1. Ouvrez **manifest.json** dans Visual Studio.\n\n1. Ajoutez l’extrait de code suivant à votre fichier manifeste, s’il n’est pas déjà présent :\n\n   ```json\n   \"bots\": [\n    {\n      \"botId\": \"<<YOUR-MICROSOFT-APP-ID>>\",\n      \"scopes\": [\n        \"personal\",\n        \"team\",\n        \"groupchat\"\n      ],\n      \"supportsFiles\": false,\n      \"isNotificationOnly\": false\n    }      \n   ```\n\n1. Remplacez toutes les occurrences de `<<YOUR-MICROSOFT-APP-ID>>` par **l’ID d’application Microsoft** de votre bot.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/manifest_1.png\" alt-text=\"Capture d’écran montrant le remplacement de l’ID d’application Microsoft.\":::\n  \n"
- title: Générer et exécuter le service
  durationInMinutes: 1
  content: "**Pour générer et exécuter le service à l’aide de la dernière version de Visual Studio ou de la ligne de commande**\n\n# <a name=\"visual-studio\"></a>[Visual Studio](#tab/vs)\n\n   1. Lancez la dernière version de Visual Studio.\n   1. Accédez à **Fichier** > **Ouvrir le** > **projet/la solution**.\n\n      :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/VSopenfile_1.png\" alt-text=\"Capture d’écran montrant la navigation du fichier ouvert.\":::\n      \n   1. Sélectionnez **Le fichier TeamsLinkUnfurling.csproj** dans le dossier **55.teams-link-unfurling** .\n\n      :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/csproj_1.png\" alt-text=\"Capture d’écran montrant la sélection du dossier.\":::\n  \n   1. Ouvrez **Explorateur de solutions** à partir de **l’affichage**.\n\n      :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/solutionexplorer_1.png\" alt-text=\"Capture d’écran montrant le Explorateur de solutions.\":::\n      \n   1. Cliquez avec le bouton droit sur **TeamsLinkUnfurling**.\n\n   1. Sélectionnez **Définir comme projet de démarrage**.\n      \n      :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/startup_1.png\" alt-text=\"Capture d’écran montrant la configuration du projet de démarrage.\"::: \n      \n   1. Appuyez sur **F5** pour exécuter le projet.\n\n   1. Sélectionnez **Oui** si la boîte de dialogue suivante s’affiche :\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/certificate_1.png\" alt-text=\"Capture d’écran montrant le certificat d’approbation.\":::\n      \n      Une page web **s’ouvre avec un message Votre bot est prêt!**.\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/appisready.png\" alt-text=\"Capture d’écran montrant la page web indiquant que le bot est prêt.\":::\n              \n# <a name=\"command-line\"></a>[Ligne de commande](#tab/cli)\n\nAccédez à **BotBuilder-Samples > samples > csharp_dotnetcore > 55.teams-link-unfurling** dans la fenêtre d’invite de commandes et entrez la commande suivante :\n\n```bash\ndotnet run\n```\n:::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/dotnetruncmd.png\" alt-text=\"Capture d’écran montrant l’exécution dotnet dans bash.\":::\n\n  ---\n"
- title: Charger l’application De déploiement de lien
  durationInMinutes: 1
  content: "1. Dans votre dépôt cloné, accédez à **csharp_dotnetcore > 55.teams-link-unfurling > TeamsAppManifest**.\n\n1. Créez un .zip avec les fichiers suivants présents dans le dossier **Manifeste** : \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/zipfile_1.png\" alt-text=\"Capture d’écran montrant le zipping du fichier.\":::\n   \n1. Accédez à **Microsoft Teams**.\n\n1. Sélectionner **les applications**.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/AppStore_1.png\" alt-text=\"Fichier zip\":::\n   \n1. Sélectionnez **Gérer vos applications**.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/manageapps_1.png\" alt-text=\"Gérer les applications\":::\n      \n1. Sélectionnez **Charger une application personnalisée**. \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/uploadapp_1.png\" alt-text=\"Charger une application personnalisée\":::\n  \n1. Sélectionnez **Ouvrir** pour charger le fichier .zip que vous avez créé dans le dossier **TeamsAppManifest** .\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/selectzip_1.png\" alt-text=\"Capture d’écran montrant la sélection du fichier zip.\":::\n  \n1. Sélectionnez **Ajouter**.\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/addapp.png\" alt-text=\"Capture d’écran montrant l’ajout d’une application.\":::\n   \n   L’application s’ouvre dans une conversation.\n\n1. Dans la zone composer un message, entrez `https://www.BotFramework.com`.\n\n   Le lien se déploie comme illustré dans l’image suivante :\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/result.png\" alt-text=\"Capture d’écran montrant le résultat du déploiement de lien.\":::\n   \n1. Appuyez sur Entrée.\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/result-1.png\" alt-text=\"Capture d’écran montrant la sortie.\":::\n"
- title: Relever le défi
  durationInMinutes: 1
  content: >
    Tu as trouvé quelque chose comme ça ?


    :::image type="content" source="../msteams-platform/assets/images/Teams-link-unfurling/final-image.png" alt-text="Capture d’écran montrant la sortie finale.":::
- content: Vous avez terminé le tutoriel pour bien démarrer avec l’application de déploiement de liens Teams !
