### YamlMime:Tutorial
title: Onglet Générer avec des cartes adaptatives
metadata:
  title: Onglet Générer avec des cartes adaptatives
  description: Avec ce module d’apprentissage, découvrez comment configurer des cartes adaptatives dans un onglet sur le bureau et mobile pour Microsoft Teams.
  audience: Developer
  level: Beginner
  ms.date: 12/23/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: tabs/how-to/authentication/tab-sso-overview.md
  nextTutorialTitle: En savoir plus sur l’authentification par onglet
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: a7b1c5dee33c10dcb5c36d233bfda066ed72a0e5
  ms.sourcegitcommit: 42602e8ec917f5033c0b6a95cf65b428db3c5b0a
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 08/09/2022
  ms.locfileid: "67285922"
items:
- durationInMinutes: 1
  content: >
    Les onglets de carte adaptative sont une nouvelle façon de construire des onglets dans Teams. Au lieu d'intégrer du contenu web dans une IFrame, vous pouvez rendre les cartes adaptatives dans un onglet. Alors que la partie frontale est rendue avec des cartes adaptatives, la partie arrière est alimentée par un robot. Le robot est chargé d'accepter les demandes et de répondre de manière appropriée avec la carte adaptative qui est rendue.


    Vous pouvez créer vos onglets avec des blocs de construction d’interface utilisateur appropriés natifs sur le bureau, le web et les appareils mobiles.


    Cet article vous aide à comprendre :


    * Modifications requises pour le manifeste de l’application.

    * Identifie la façon dont l’activité d’appel demande et envoie des informations dans l’onglet avec des cartes adaptatives.

    * Effet sur le flux de travail du module de tâche.


    Ce guide pas à pas vous aide à créer des onglets avec des cartes adaptatives sur le bureau et les appareils mobiles. La sortie suivante s’affiche :


    ![Capture d’écran de Desktop Mobile](~/assets/images/adaptive-cards/desktop-mobile-screenshot.png)
- title: Conditions préalables
  durationInMinutes: 1
  content: >
    Veillez à installer les outils suivants et à configurer votre environnement de développement :


    * Microsoft Teams avec un compte (pas un compte invité)

    * [Visual Studio Code](https://code.visualstudio.com/)

    * [Kit de développement logiciel (SDK) .NET Core](https://dotnet.microsoft.com/download) version 3.1

    * [ngrok](https://ngrok.com/) ou [Tunnel Relay](https://github.com/OfficeDev/microsoft-teams-tunnelrelay)

    * [Compte de développeur Microsoft 365](https://docs.microsoft.com/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) ou accès au compte Teams avec les autorisations appropriées pour installer une application.
- title: Créer une inscription de bot dans Microsoft Portail Azure
  durationInMinutes: 2
  content: "Les onglets de carte adaptative nécessitent Azure Bot Service pour créer des onglets dans teams. Inscrivez un bot auprès d’Azure Bot Service lorsque vous le développez et l’hébergez dans Azure. Effectuez les opérations suivantes :\n1. Utilisez ngrok pour créer un tunnel vers les points de terminaison de votre serveur web.\n1. Créez une ressource Azure Bot pour inscrire un bot auprès d’Azure Bot Service.\n1. Créez une clé secrète client qui active l’authentification unique du bot.\n1. Ajoutez un canal Microsoft Teams pour déployer le bot sur un canal Teams.\n1. Ajoutez un point de terminaison de messagerie au tunnel ngrok que vous avez créé.\n\nUtilisez ngrok pour créer un tunnel vers les points de terminaison HTTPS disponibles publiquement de votre serveur web local. Exécutez la commande suivante dans ngrok :\n\n```bash\nngrok http --host-header=rewrite 3978\n```\n\n**Pour créer une ressource Azure Bot**\n\n1. Ouvrez [Portail Azure](https://portal.azure.com/).\n1. Sélectionnez **Créer une ressource**.\n1. Recherchez le **bot Azure** dans la zone de recherche.\n1. Sélectionnez **Azure Bot**.\n\n    :::image type=\"content\" source=\"/assets/images/azure-bot.png\" alt-text=\"Bot Azure.\":::\n\n   :::image type=\"content\" source=\"./assets/images/azure-bot.png\" alt-text=\"Bot Azure.\":::\n\n\n1. Sélectionnez **Créer**.\n1. Entrez le nom du handle du bot dans le champ **Descripteur** de bot.\n1. Sélectionnez votre **abonnement** dans la liste déroulante.\n1. Sélectionnez votre **groupe de ressources** dans la liste déroulante.\n    \n    Pour créer un groupe de ressources, sélectionnez **Créer**, entrez le nom de la ressource, sélectionnez **OK**, puis sélectionnez l’emplacement requis dans la liste déroulante **Nouvel emplacement du groupe de ressources** .\n\n1. Sélectionnez **Type d’application** en tant que **multilocataire** pour **l’ID d’application Microsoft**.\n\n    ![Multilocataire](~/assets/images/adaptive-cards/multi-tenant.png)\n\n    > [!NOTE]\n    > Dans **la section Création de l’ID** d’application Microsoft, **l’option Créer un ID d’application Microsoft** est déjà sélectionnée pour créer un bot. Vous pouvez également sélectionner **Utiliser l’inscription d’application existante**, si vous avez déjà inscrit un bot. Entrez l’ID d’application Microsoft dans le champ **ID d’application existant** , puis entrez la valeur dans le champ **mot de passe de l’application existante** .\n\n1. Sélectionnez **Examiner et créer**.\n\n    ![Créer un bot Azure](~/assets/images/adaptive-cards/create-azure-bot.png)\n\n1. Si la validation réussit, sélectionnez **Créer**.\n\n    L’approvisionnement de votre service de bot prend quelques instants.\n\n    ![Validation d’Azure Bot](~/assets/images/adaptive-cards/validation-pane.png)\n\n1. Sélectionnez **Accéder à la ressource**. Le bot et les ressources associées sont répertoriés dans le groupe de ressources.\n\n    ![Accédez à cette ressource :](~/assets/images/adaptive-cards/go-to-resource-card.png)\n\n    Votre bot Azure est maintenant créé.\n\n    ![Ressource de bot Azure créée](~/assets/images/adaptive-cards/azure-bot-ui.png)\n\n**Pour créer une clé secrète client**\n\n1. Dans **Paramètres**, sélectionnez **Configuration**. Enregistrez **l’ID d’application Microsoft** (ID client) pour référence ultérieure.\n\n    ![ID d’application Microsoft](~/assets/images/adaptive-cards/config-microsoft-app-id.png)\n\n    > [!NOTE]\n    > Vérifiez que **MultiTenant** est sélectionné sous **Type de bot**.\n\n1. À côté de **l’ID d’application Microsoft**, sélectionnez **Gérer**.\n\n   :::image type=\"content\" source=\"~/assets/images/manage-bot-label.png\" alt-text=\"gérer le bot\":::\n\n1. Dans la section **Secrets client** , sélectionnez **Nouvelle clé secrète client**. **Une fenêtre de clé secrète client** s’affiche.  \n\n    ![Nouvelle clé secrète client](~/assets/images/meetings-side-panel/newclientsecret.png)\n    \n\n1. Entrez **Description** , puis **sélectionnez Ajouter**.\n\n    ![Clé secrète client](~/assets/images/adaptive-cards/client-secret.png)\n\n1. Dans la colonne **Valeur** , sélectionnez **Copier dans le Presse-papiers** et enregistrez l’ID de clé secrète client pour référence ultérieure.\n\n    ![Valeur de clé secrète client](~/assets/images/adaptive-cards/client-secret-value.png)\n   \n**Pour ajouter le canal Microsoft Teams**\n\n1. Accéder à **l’Accueil**\n\n    ![Page d’accueil du bot](~/assets/images/adaptive-cards/bot-home-page.png)\n\n1. Ouvrez votre bot, qui est répertorié dans la section **Ressources récentes** .\n1. Sélectionnez **Canaux** dans le volet gauche, puis Sélectionnez **Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n    :::image type=\"content\" source=\"~/assets/images/adaptive-cards/channel-teams.png\" alt-text=\"Sélectionner Teams dans les canaux\":::\n\n1. Cochez la case pour accepter les conditions d’utilisation, puis **sélectionnez Accepter**.</br>\n\n    ![Sélectionner les conditions d’utilisation](~/assets/images/adaptive-cards/select-terms-of-service.png)\n\n1. Sélectionnez **Enregistrer**.\n\n    ![Sélectionner Teams](~/assets/images/adaptive-cards/select-teams.png)\n\n**Pour ajouter un point de terminaison de messagerie**\n\n1. Accédez à la page **d’accueil** et sélectionnez **Configuration** sous **Paramètres** dans le volet gauche.\n1. Accédez à ngrok.\n1. Copiez l’URL HTTPS (https vers io) comme illustré dans l’image suivante :\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/ngrok-url.png\" alt-text=\"URL HTTPS ngrok\":::\n\n1. Dans **le point de terminaison de messagerie**, ajoutez l’URL HTTPS générée à partir de ngrok et, à la fin de l’URL, ajoutez **/api/messages**.\n\n    ![Point de terminaison de messagerie](~/assets/images/adaptive-cards/ngrok-messaging-endpoint.png)\n\n1. Sélectionnez **Appliquer**.\n\n    Vous avez correctement configuré un bot dans Azure Bot Service et vous devez maintenant configurer la connexion au service bot.\n"
- title: Configurer la connexion au service de bot
  durationInMinutes: 5
  content: "Pour vous assurer que l’Bot Service permet à l’utilisateur de se connecter et d’accéder au bot, vous devez configurer l’authentification unique pour votre bot. Pour ce faire, procédez comme suit :\n\n1. Ajoutez l’URI de redirection à la ressource de bot Azure.\n1. Exposer le point de terminaison d’API.\n1. Autorisez les applications clientes.\n1. Ajoutez toutes les autorisations d’API nécessaires pour les appels en aval.\n1. Activez l’octroi implicite.\n1. Mettre à jour le manifeste.\n1. Configurez Bot Service connexion.\n\n**Pour ajouter l’URI de redirection à la ressource de bot Azure**\n\n1. Sélectionnez **Gérer** en regard de **l’ID d’application Microsoft**.\n\n   :::image type=\"content\" source=\"~/assets/images/manage-bot-label.png\" alt-text=\"gérer le bot\":::\n\n1. Sélectionnez **Authentification** dans le volet gauche de votre ressource de bot.\n1. Dans la section **Configurations de plateforme**, sélectionnez le bouton **Ajouter une plateforme**.\n1. Sélectionnez **Web**.\n1. Entrez **les URI de redirection** sous `https://token.botframework.com/.auth/web/redirect` et **sélectionnez Configurer**.\n\n    ![Configurer l’URL de redirection web](~/assets/images/adaptive-cards/configure-web-redirect-url.png)\n\n    L’URI de redirection est ajouté à la ressource de bot Azure.\n\n    ![Afficher l’URL de redirection web](~/assets/images/adaptive-cards/web-redirect-url-display.png)\n\n**Pour exposer un point de terminaison d’API**\n\n1. Sélectionnez **Exposer une API** dans le volet gauche.\n1. Sélectionnez **Définir** pour l’URI d’ID d’application.\n1. Utilisez **l’URL d’ID** d’application affichée et ajoutez-la `api://` au lieu de `https://` **l’URL ngrok** et ajoutez-la au début de l’URL de l’ID d’application.\n\n    ![URI ID d'application](~/assets/images/adaptive-cards/app-id-url.png)\n\n1. Sélectionnez **Enregistrer**.\n1. Sélectionnez **Ajouter une étendue**.\n1. Dans **le nom de l’étendue**, entrez **access_as_user**.\n1. Dans **Qui peut donner son consentement ?**, basculez vers **Administrateurs et utilisateurs**.\n1. Entrez les valeurs suivantes dans les zones :\n\n    | Champ | Valeur |\n    | ----- | ----- |\n    | Administration nom d’affichage du consentement | Teams peut accéder au profil de l’utilisateur |\n    | Administration description du consentement | Permet à Teams d’appeler les API web de l’application en tant qu’utilisateur actuel. |\n    | Nom d’affichage du consentement de l’utilisateur | Teams peut accéder à votre profil utilisateur et effectuer des demandes en votre nom |\n    | Description du consentement de l’utilisateur | Permettre à Teams d’appeler les API de cette application avec les mêmes droits que vous. |\n\n1. Vérifiez que **State** est défini comme **Enabled**.\n\n    ![Ajouter une étendue](~/assets/images/adaptive-cards/add-scope.png)\n\n1. Sélectionnez **Ajouter une étendue**. Le nom de l’étendue correspond automatiquement à l’URI d’ID d’application, avec **/access_as_user** ajouté à la fin.\n\n**Pour autoriser les applications clientes**\n\nAjoutez les ID suivants en tant **qu’applications clientes autorisées**, activez la case à cocher Pour **les étendues autorisées** , puis **sélectionnez Ajouter une application**.      \n* 1fec8e78-bce4-4aaf-ab1b-5451cc387264 (application mobile ou de bureau Teams)            \n* 5e3ce6c0-2b1f-4285-8d4b-75ee78787346 (application web Teams)</br>\n\n    ![Ajouter une application cliente](~/assets/images/adaptive-cards/add-client-aapplication.png)      \n\n**Pour ajouter les autorisations d’API nécessaires pour les appels en aval**\n\n1. Sélectionnez **les autorisations d’API** dans le volet gauche.\n1. Sélectionnez **Ajouter une autorisation**. **La fenêtre Demander des autorisations d’API** s’affiche.\n1. Sélectionnez les **API Microsoft**. Sélectionnez Ensuite **Microsoft Graph** et sélectionnez **Autorisations déléguées**.\n1. Ajoutez **toutes les autorisations déléguées de** l’utilisateur dont votre application a besoin pour les API en aval, par exemple, User.Read.</br>\n\n    ![Autorisations de l’API](~/assets/images/adaptive-cards/add-permissions.png)\n\n**Pour activer l’octroi implicite**\n\n1. Sélectionnez **Applications** dans le volet gauche.\n1. Cochez **les cases Jetons d’accès** et **jetons d’ID** .</br>\n\n    ![Jetons d’authentification](~/assets/images/adaptive-cards/authentication-tokens.png)\n\n1. Sélectionnez **Enregistrer** pour enregistrer vos modifications.\n\n**Pour mettre à jour le manifeste**\n\n1. Sélectionnez **Manifeste** dans le volet gauche.\n1. Vérifiez que l’élément de configuration est défini sur **« accessTokenAcceptedVersion » : 2**. Si ce n’est pas le cas, remplacez sa valeur par **2** , puis **sélectionnez Enregistrer**.\n    \n    > [!NOTE]\n    > Si vous testez déjà votre bot dans Teams, vous devez déconnecter cette application et déconnecter Teams. Ensuite, reconnectez-vous pour voir cette modification.\n\n    ![Mettre à jour le manifeste](~/assets/images/adaptive-cards/manifest.png)\n\n**Pour configurer Bot Service connexion**\n\n1. Accédez à la page **d’accueil** et sélectionnez **Configuration** sous **Paramètres** dans le volet gauche.\n1. Sélectionnez le bouton **Ajouter des paramètres de connexion OAuth**.\n1. Dans **nouveau paramètre de connexion**, entrez les détails suivants :\n\n    | Champ | Valeur ou description |\n    | ----- | ----- |\n    | Nom | Entrez le nom de votre nouveau paramètre de connexion. Vous pouvez utiliser le nom dans les paramètres de votre code de service de bot. |\n    | Fournisseur de services | Sélectionnez **Azure Active Directory V2**. |\n    | ID client | Enregistré précédemment en tant **qu’ID d’application Microsoft**. |\n    | Clé secrète client | Enregistré précédemment en tant que **valeur** de l’ID de clé secrète client. |\n    | URL d’échange de jetons | Utilisez **l’URL d’ID d’application** obtenue précédemment lors de l’exposition du point de terminaison d’API. |\n    | ID client | Entrez **commun**. |\n    | Étendues | Entrez **User.Read** et ajoutez également toutes les **étendues** requises tout en spécifiant des autorisations pour les API en aval. |\n\n    :::image type=\"content\" source=\"./assets/images/adaptive-cards/oauth-connection-setting.png\" alt-text=\"Connexion au service bot\":::\n\n1. Sélectionnez **Enregistrer**.\n"
- title: Configurer le bot
  durationInMinutes: 1
  content: >
    Configurez l’exemple de bot pour comprendre comment authentifier le bot conversationnel dans Microsoft Teams.


    **Pour configurer et exécuter votre exemple de bot**


    1. Accédez au référentiel https://github.com/OfficeDev/Microsoft-Teams-Samples.git.

    1. Sélectionnez **Code** , puis sélectionnez la liste déroulante.

    1. Sélectionnez **Télécharger zip**.

        ![Téléchargement du dépôt](~/assets/images/adaptive-cards/repo-download.png)

    1. Veillez à noter le chemin d’accès du référentiel téléchargé.

    1. Dans le Explorateur de fichiers, sélectionnez le **projet**.

    1. Accédez à **Microsoft-Teams-Samples > exemples > tab-adaptive-cards > dossier csharp > TabWithAdpativeCardFlow** .

    1. Ouvrez le fichier **appsettings.json** dans Visual Studio Code.

    1. Mettez à jour la configuration **appsettings.json** pour que le bot utilise l’URI `MicrosoftAppId`, `MicrosoftAppPassword`et ajoutez votre URI ngrok en tant que `ApplicationBaseUrl`.

    1. Utilisez le nom de connexion OAuth comme **nom de connexion**.

        > [!NOTE]
        > Vous pouvez obtenir l’élément `MicrosoftAppId` à partir de la page Configuration du bot. Il `MicrosoftAppPassword` s’agit de la valeur de l’ID de secret client que vous avez enregistré précédemment.

        ![Appsettings Json](~/assets/images/adaptive-cards/appsettings-json.png)

    1. Sélectionnez **Enregistrer**.
- title: Configurer et charger l’application dans Teams
  durationInMinutes: 2
  content: >
    La méthode la plus complète pour tester votre bot consiste à créer un package d’application et à le charger dans Teams. Cette méthode est la seule façon de tester toutes les fonctionnalités disponibles pour votre bot, dans toutes les étendues. Vous pouvez configurer et exécuter l’application Teams en chargeant le `manifest.zip` fichier.


    **Pour exécuter l’application Teams en chargeant le fichier manifest.zip**


    1. Dans le Explorateur de fichiers, accédez aux **exemples > Microsoft-Teams-Samples > tab-adaptive-cards > csharp > TabWithAdpativeCardFlow > AppPackage** pour ouvrir le dossier.

    1. Ouvrez le `manifest.json` fichier dans Visual Studio Code.

    1. Dans le `manifest.json` fichier, recherchez **{contentBotId}** et ajoutez votre ID d’application Microsoft et enregistrez-le.

        ![Configuration du manifeste](~/assets/images/adaptive-cards/manifest-vsc.png)

    1. Dans le Explorateur de fichiers, accédez au dossier **AppPackage**.

    1. Compressez le contenu du dossier **AppPackage** à créer `manifest.zip`.

        > [!NOTE]
        > Ne `manifest.zip` doit pas contenir de dossiers supplémentaires. Il doit contenir un fichier source JSON **manifeste** , une icône **de couleur** et une icône **de contour** à l’intérieur du dossier zip.

    1. Accédez à Teams.

    1. Pour charger `manifest.zip`, sélectionnez **Store > Gérer vos applications > Charger une application personnalisée** et ouvrez `manifest.zip`.

    1. Sélectionnez **Ajouter** pour ajouter l’onglet à votre conversation.

        ![Onglet dans l’application Teams](~/assets/images/adaptive-cards/tab-in-teams.png)

        Vous pouvez interagir avec cet onglet en vous connectant.

    1. Envoyez un message à l’onglet.

        ![Capture d’écran de Desktop Mobile](~/assets/images/adaptive-cards/desktop-mobile-screenshot.png)
- title: Interaction avec l’onglet dans Teams
  durationInMinutes: 1
  content: "Les onglets vous permettent d’accéder aux services et au contenu dans un espace dédié au sein d’un canal ou dans une conversation.\n\nSuivez les étapes pour utiliser l’onglet :\n\n1. Dans le volet gauche de Teams, sélectionnez les points de suspension ●●● et choisissez votre application dans la liste.\n1. Onglet montrant la carte adaptative avec des contrôles d’action.\n\n    ![Onglet montrant la carte adaptative avec des contrôles d’action](~/assets/images/adaptive-cards/adaptive-cards-tab-action-controls.png)\n\n1. Sélectionnez **Se connecter** et choisissez un compte pour accéder à l’onglet.\n\n    ![Connexion](~/assets/images/adaptive-cards/sign-in-page.png)\n\n1. Sélectionnez **Afficher le module de tâche** sur la page d’accueil.\n\n    ![Afficher le module de tâches](~/assets/images/adaptive-cards/tab-home-page.png)\n\n1. Tab/fetch est la première demande d’appel que votre bot reçoit lorsqu’un utilisateur ouvre un onglet de carte adaptative. Lorsque votre bot reçoit la demande, il envoie une réponse continue d’onglet ou une réponse d’authentification de tabulation.\n\n    ![Exemple de module de tâche](~/assets/images/adaptive-cards/sample-task-module.png)\n\n1. **Submit, fonction de carte**\n    adaptative La **demande de tâche/d’envoi** est déclenchée auprès de votre bot avec les données correspondantes via l’action. \n\n    ![Carte d’envoi de tâche](~/assets/images/adaptive-cards/task-submit.png)\n\n1. Tab vous permet de vous connecter, sauf si vous sélectionnez **Se déconnecter**.\n\n    ![Se déconnecter](~/assets/images/adaptive-cards/sign-out.png)\n\n1. Actualisez pour vous **reconnecter** .\n\n    ![Déconnexion réussie](~/assets/images/adaptive-cards/success-sign-out.png)\n"
- title: Relever le défi
  durationInMinutes: 1
  content: >
    Tu as trouvé quelque chose comme ça ?


    ![Capture d’écran de Desktop Mobile](~/assets/images/adaptive-cards/desktop-mobile-screenshot.png)
- content: Vous avez terminé le didacticiel pour commencer à utiliser les cartes adaptatives pour Microsoft Teams à l’aide de Bot Framework.
