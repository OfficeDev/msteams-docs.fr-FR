### YamlMime:Tutorial
title: Onglet Créer avec cartes adaptatives
metadata:
  title: Onglet Créer avec cartes adaptatives
  description: 'Dans ce didacticiel, vous allez apprendre à configurer des cartes adaptatives dans un onglet pour Teams.'
  audience: Developer
  level: Beginner
  ms.date: 12/23/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: tabs/how-to/authentication/auth-aad-sso.md
  nextTutorialTitle: En savoir plus sur l’authentification par onglet
  ms.custom: mvc
  ms.localizationpriority: high
items:
  - durationInMinutes: 1
    content: |
      Les onglets de carte adaptative sont un nouveau moyen de créer des onglets dans Teams. Au lieu d’incorporer du contenu web dans un IFrame, vous pouvez restituer des cartes adaptatives dans un onglet. Lorsque le frontal est restituer avec des cartes adaptatives, le système frontal est alimenté par un bot. Le bot est responsable de l’acceptation des demandes et de la réponse appropriée avec la carte adaptative qui est rendue.

      Vous pouvez créer vos onglets avec des blocs de construction d’interface utilisateur (IU) appropriés natifs sur ordinateur de bureau, web et mobile.

      Cet article vous aide à comprendre :

      * Modifications requises pour le manifeste de l’application.
      * Identifie la façon dont l’activité d’appel demande et envoie des informations dans l’onglet à l’aide de cartes adaptatives.
      * Effet sur le flux de travail du module de tâche.

      Ce guide pas à pas vous aide à créer des onglets avec des cartes adaptatives sur ordinateur de bureau et mobile. Vous verrez le résultat suivant :

      ![Capture d’écran de Desktop Mobile](~/assets/images/adaptive-cards/desktop-mobile-screenshot.png)
  - title: Conditions préalables
    durationInMinutes: 1
    content: |
      Veillez à installer les outils suivants et à configurer votre environnement de développement

      * Microsoft Teams avec un compte (et non un compte invité).
      * [Visual Studio Code](https://code.visualstudio.com/)
      * [.NET Core SDK](https://dotnet.microsoft.com/download) version 3.1
      * [ngrok](https://ngrok.com/) ou [Tunnel Relay](https://github.com/OfficeDev/microsoft-teams-tunnelrelay)
      * [Microsoft 365 un compte de](https://docs.microsoft.com/en-us/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) développeur ou un accès Teams compte avec les autorisations appropriées pour installer une application.
  - title: Créer une inscription de bot dans Microsoft Azure web
    durationInMinutes: 2
    content: |
      Les onglets de carte adaptative nécessitent azure Bot Service pour créer des onglets dans teams. Inscrivez le bot auprès d’Azure Bot Service lorsque vous le développez et l’hébergez dans Azure. Effectuez les choses suivantes :
      1. Utilisez ngrok pour créer un tunnel vers les points de terminaison de votre serveur web.
      1. Créez une ressource Azure Bot pour inscrire le bot auprès d’Azure Bot Service.
      1. Créez une secret client qui permet l’authentification sso du bot.
      1. Ajoutez Microsoft Teams canal pour déployer le bot sur un canal Teams’accès.
      1. Ajoutez le point de terminaison de messagerie au tunnel ngrok que vous avez créé.

      Utilisez ngrok pour créer un tunnel vers les points de terminaison HTTPS disponibles publiquement de votre serveur web exécutant localement. Exécutez la commande suivante dans ngrok :

      ```bash
      ngrok http -host-header=rewrite 3978
      ```

      **Pour créer une ressource Azure Bot**

      1. Ouvrez [Microsoft Azure portail.](https://portal.azure.com/)
      1. Sélectionnez **Créer une ressource**.
      1. Recherchez **le bot Azure** dans la zone de recherche.
      1. **Sélectionnez Azure Bot**.

          ![Azure Bot](~/assets/images/adaptive-cards/azure-bot.png)

      1. Sélectionnez **Créer**.
      1. Entrez le nom de handle du bot dans **le champ De handle bot** .
      1. Sélectionnez **votre abonnement dans** la liste liste.
      1. Sélectionnez votre **groupe de ressources** dans la liste liste.
          
          Pour créer un nouveau groupe de ressources, sélectionnez Créer un nouveau **groupe de ressources**, entrez le nom de la ressource, **sélectionnez OK** et sélectionnez l’emplacement requis dans la liste de listes de listes des emplacements du nouveau groupe de ressources.

      1. **Sélectionnez Type d’application en** **tant qu’ID** **d’application Multi-Client pour Microsoft**.

          ![Client multiple](~/assets/images/adaptive-cards/multi-tenant.png)

          > [!NOTE]
          > Dans **la section Création du type** d’ID d’application Microsoft, créer un **ID** d’application Microsoft est déjà sélectionné pour créer un bot. Vous pouvez également sélectionner **Utiliser l’inscription d’application** existante, si vous avez déjà inscrit un bot. Entrez l’ID de l’application Microsoft dans **le champ ID** d’application existant, puis entrez la valeur dans **le champ Mot de passe de l’application** existante.

      1. Sélectionnez **Examiner et créer**.

          ![Créer un bot Azure](~/assets/images/adaptive-cards/create-azure-bot.png)

      1. Si la validation réussit, sélectionnez **Créer**.

          La mise en service de votre service de bot prend quelques instants.

          ![Validation du bot Azure](~/assets/images/adaptive-cards/validation-pane.png)

      1. Sélectionnez **Accéder à la ressource**. Le bot et les ressources associées sont répertoriés dans le groupe de ressources.

          ![Accédez à cette ressource :](~/assets/images/adaptive-cards/go-to-resource-card.png)

          Votre bot Azure est maintenant créé.

          ![Ressource de bot Azure créée](~/assets/images/adaptive-cards/azure-bot-ui.png)

      **Pour créer une secret client**

      1. Dans **Paramètres**, sélectionnez **Configuration**. Enregistrez **l’ID de l’application Microsoft** (ID client) pour référence ultérieure.

          ![ID d’application Microsoft](~/assets/images/adaptive-cards/config-microsoft-app-id.png)

          > [!NOTE]
          > **Assurez-vous que MultiTenant** est sélectionné sous **Type de bot**.

      1. Adjacent à **l’ID de l’application Microsoft**, sélectionnez **Gérer**.

          ![Gérer le bot](~/assets/images/adaptive-cards/manage-bot-label.png)

      1. Dans la section **Secrets client** , sélectionnez **Nouvelle secret client**. **Une fenêtre d’ajout d’une secret client** s’affiche.  

          ![Nouvelle secret client](~/assets/images/adaptive-cards/new-client-secret.png)

      1. Entrez **description,** puis sélectionnez **Ajouter**.

          ![Secret client](~/assets/images/adaptive-cards/client-secret.png)

      1. Dans la **colonne Valeur** , **sélectionnez Copier dans le Presse-papiers** et enregistrez l’ID de la question secrète client pour référence ultérieure.

          ![Valeur de la secret client](~/assets/images/adaptive-cards/client-secret-value.png)
         
      **Pour ajouter le Microsoft Teams canal**

      1. Go to **Home**.

          ![Page d’accueil du bot](~/assets/images/adaptive-cards/bot-home-page.png)

      1. Ouvrez votre bot, qui est répertorié dans la section **Ressources récentes** .
      1. **Sélectionnez Canaux** dans le volet gauche et **sélectionnez Teams** <img src="~/assets/images/bots/teamsicon.png" alt="Teams icon" width="20"/>.

          ![Canal Teams](~/assets/images/adaptive-cards/channel-teams.png)

      1. Cochez la case pour accepter les conditions d’utilisation et sélectionnez **Accepter**.</br>

          ![Sélectionner les conditions d’utilisation](~/assets/images/adaptive-cards/select-terms-of-service.png)

      1. Sélectionnez **Enregistrer**.

          ![Sélectionnez Teams](~/assets/images/adaptive-cards/select-teams.png)

      **Pour ajouter un point de terminaison de messagerie**

      1. Go to **Home** page and select **Configuration** under **Paramètres** from the left pane.
      1. Go to ngrok.
      1. Copiez l’URL HTTPS (https to io) comme illustré dans l’image suivante :

          ![URL HTTPS ngrok](~/assets/images/adaptive-cards/ngrok-url.png)

      1. Dans **le point de terminaison** de messagerie, ajoutez l’URL HTTPS générée à partir de ngrok et à la fin de l’URL, **ajoutez /api/messages**.

          ![Point de terminaison de messagerie](~/assets/images/adaptive-cards/ngrok-messaging-endpoint.png)

      1. Sélectionnez **Appliquer**.

          Vous avez correctement installé un bot dans Azure Bot Service et vous devez maintenant configurer la connexion au service de bot.
  - title: Configurer la connexion au service de bot
    durationInMinutes: 5
    content: |
      Pour vous assurer que le bot Service permet à l’utilisateur de se connecter et d’accéder au bot, vous devez configurer l’utilisateur sso pour votre bot. Pour ce faire, effectuez les choses suivantes :

      1. Ajouter un URI de redirection à la ressource du bot Azure
      1. Exposer le point de terminaison de l’API
      1. Autoriser les applications clientes
      1. Ajouter les autorisations d’API nécessaires pour les appels en aval
      1. Activer l’octroi implicite
      1. Mettre à jour le manifeste
      1. Configurer la connexion bot service

      **Pour ajouter un URI de redirection à la ressource du bot Azure**

      1. **Sélectionnez Gérer** en plus de **l’ID d’application Microsoft**.

          ![Gérer le bot](~/assets/images/adaptive-cards/manage-bot-label.png)

      1. **Sélectionnez l’authentification** dans le volet gauche de votre ressource bot.
      1. Dans **configurations de plateforme**, **sélectionnez Ajouter une plateforme**.
      1. Sélectionnez **Web**.
      1. Entrez **les UR de** redirection en tant **https://token.botframework.com/.auth/web/redirect** que, puis **sélectionnez Configurer**.

          ![Configurer l’URL de redirection web](~/assets/images/adaptive-cards/configure-web-redirect-url.png)

          L’URI de redirection est ajouté à la ressource du bot Azure.

          ![Afficher l’URL de redirection web](~/assets/images/adaptive-cards/web-redirect-url-display.png)

      **Pour exposer le point de terminaison de l’API**

      1. **Sélectionnez Exposer une API** dans le volet gauche.
      1. **Sélectionnez Définir** pour l’URI d’ID d’application.
      1. Utilisez   **l’URL de l’ID** d’application affichée et ajoutez api:// au lieu de https:// dans **l’URL ngrok** et ajoutez-la au début de l’URL de l’ID d’application.

          ![URI ID d'application](~/assets/images/adaptive-cards/app-id-url.png)

      1. Sélectionnez **Enregistrer**.
      1. Sélectionnez **Ajouter une étendue**.
      1. Dans **le nom de l’étendue**, **entrez access_as_user**.
      1. In **Qui can consent?**, switch to **Admins and users**.
      1. Entrez les valeurs suivantes dans les zones :

          | Champ | Valeur |
          | ----- | ----- |
          | Nom complet du consentement de l’administrateur | Teams pouvez accéder au profil de l’utilisateur |
          | Description du consentement de l’administrateur | Permet Teams d’appeler les API web de l’application en tant qu’utilisateur actuel. |
          | Nom complet du consentement de l’utilisateur | Teams pouvez accéder à votre profil utilisateur et effectuer des demandes en votre nom |
          | Description du consentement de l’utilisateur | Activez Teams pour appeler les API de cette application avec les mêmes droits que vous. |

      1. Vérifiez que **State** est défini comme **Enabled**.

          ![Ajouter une étendue](~/assets/images/adaptive-cards/add-scope.png)

      1. Sélectionnez **Ajouter une étendue**. Le nom de l’étendue correspond automatiquement à l’URI de l’ID d’application, **avec /access_as_user** ajouté à la fin.

      **Pour autoriser les applications clientes**

      Ajoutez les ID suivants en tant **qu’applications clientes** autorisées, cochez la case pour les **étendues autorisées** et **sélectionnez Ajouter une application**.      
      * 1fec8e78-bce4-4aaf-ab1b-5451cc387264 (Teams application mobile ou de bureau)            
      * 5e3ce6c0-2b1f-4285-8d4b-75ee78787346 (application web Teams)</br>

          ![Ajouter une application cliente](~/assets/images/adaptive-cards/add-client-aapplication.png)      

      **Pour ajouter les autorisations d’API nécessaires pour les appels en aval**

      1. Sélectionnez **les autorisations d’API** dans le volet gauche.
      1. Sélectionnez **Ajouter une autorisation**. **La fenêtre Demander des autorisations d’API** s’affiche.
      1. **Sélectionnez l’API Microsoft**. Ensuite, **sélectionnez Microsoft Graph** et les **autorisations déléguées**.
      1. Ajoutez les **autorisations déléguées utilisateur dont** votre application a besoin pour les API en aval, par exemple, User.Read.</br>

          ![Autorisations d’API](~/assets/images/adaptive-cards/add-permissions.png)

      **Pour activer l’octroi implicite**

      1. Sélectionnez **Authentification** dans le volet gauche.
      1. **Cochez les jetons d’accès** et **les jetons d’ID**.</br>

          ![Jetons d’authentification](~/assets/images/adaptive-cards/authentication-tokens.png)

      1. **Sélectionnez Enregistrer** pour enregistrer les modifications.

      **Pour mettre à jour le manifeste**

      1. **Sélectionnez Manifeste** dans le volet gauche.
      1. Assurez-vous que l’élément de config est définie sur **« accessTokenAcceptedVersion » : 2**. Si ce n’est pas le cas, modifiez sa valeur **sur 2** et sélectionnez **Enregistrer**.
          
          > [!NOTE]
          > Si vous testez déjà votre bot dans Teams, vous devez dé signer cette application et vous dé Teams. Connectez-vous à nouveau pour voir cette modification.

          ![Mettre à jour le manifeste](~/assets/images/adaptive-cards/manifest.png)

      **Pour configurer la connexion bot service**

      1. Go to **Home** page and select **Configuration** under **Paramètres** from the left pane.
      1. **Sélectionnez Ajouter une connexion OAuth Paramètres**.
      1. Dans **Nouveau paramètre de connexion**, entrez les détails suivants :

          | Champ | Valeur ou description |
          | ----- | ----- |
          | Nom | Entrez le nom de votre nouveau paramètre de connexion. Vous pouvez utiliser le nom dans les paramètres de votre code de service de bot. |
          | Fournisseur de services | **Sélectionnez Azure Active Directory V2**. |
          | ID client | Enregistré précédemment en tant **qu’ID d’application Microsoft**. |
          | Secret client | Enregistré précédemment sous **la valeur de** l’ID de la secret client. |
          | URL de Exchange jeton | Utilisez **l’URL d’ID d’application** obtenue précédemment lors de l’exposition du point de terminaison de l’API. |
          | ID client | Entrez **commun.** |
          | Étendues | Entrez **User.Read et** ajoutez également toutes les **étendues requises** tout en spécifiant des autorisations pour les API en aval. |

          :::image type="content" source="./assets/images/adaptive-cards/oauth-connection-setting.png" alt-text="Connexion au service bot":::

      1. Sélectionnez **Enregistrer**.
  - title: Configurer le bot
    durationInMinutes: 1
    content: |
      Configurez l’exemple de bot pour comprendre comment authentifier le bot de conversation dans Microsoft Teams.

      **Pour configurer et exécuter votre exemple de bot**

      1. Go to the repo https://github.com/OfficeDev/Microsoft-Teams-Samples.git.
      1. **Sélectionnez Code** et sélectionnez la dropdown.
      1. **Sélectionnez Télécharger le fichier ZIP**.

          ![Repo Download](~/assets/images/adaptive-cards/repo-download.png)

      1. Veillez à noter le chemin d’accès du référentiel qui est téléchargé.
      1. Dans l’Explorateur de fichiers, sélectionnez **le Project**.
      1. Go to **Microsoft-Teams-Samples > samples > tab-adaptive-cards > csharp > TabWithAdpativeCardFlow** folder.
      1. Ouvrez **le fichier appsettings.json** dans Visual Studio Code.
      1. Mettez à **jour la configuration appsettings.json** pour que le bot `MicrosoftAppId`utilise le , `MicrosoftAppPassword`et ajoutez votre URI ngrok en tant que `ApplicationBaseUrl`.
      1. Utilisez le nom de connexion OAuth comme nom **de connexion**.

          > [!NOTE]
          > Vous pouvez obtenir cette `MicrosoftAppId` dernière à partir de la page configuration du bot. Il s’agit `MicrosoftAppPassword` de la valeur de l’ID de secret client que vous avez enregistré précédemment.

          ![Appsettings Json](~/assets/images/adaptive-cards/appsettings-json.png)

      1. Sélectionnez **Enregistrer**.
  - title: Configurer et télécharger l’application dans Teams
    durationInMinutes: 2
    content: |
      La façon la plus complète de tester votre bot consiste à créer un package d’application et à le télécharger sur Teams. Cette méthode est le seul moyen de tester les fonctionnalités complètes disponibles pour votre bot, dans toutes les étendues. Vous pouvez configurer et exécuter l’application Teams en chargeant **le fichiermanifest.zip'application**.

      **Pour exécuter l’Teams en chargeant le fichier manifest.zip**

      1. Dans l’Explorateur de fichiers, go to **Microsoft-Teams-Samples > samples > tab-adaptive-cards > csharp > TabWithAdpativeCardFlow > AppPackage** to open the folder.
      1. Ouvrez **le fichier manifest.json** dans Visual Studio Code.
      1. Dans le **fichier manifest.json** , **recherchez {contentBotId}** , ajoutez votre ID d’application Microsoft et enregistrez.

          ![Config de manifeste](~/assets/images/adaptive-cards/manifest-vsc.png)

      1. Dans l’Explorateur de fichiers, allez dans le **dossier AppPackage** .
      1. Compressez le contenu du **dossier AppPackage** pour créer **desmanifest.zip**.

          > [!NOTE]
          > Le **manifest.zip** ne doit pas contenir de dossiers supplémentaires. Il doit avoir un **fichier** source JSON **manifeste, une** icône de couleur et une **icône de plan** à l’intérieur du dossier zip.

      1. Go to Teams.
      1. Pour télécharger **manifest.zip**, sélectionnez **Windows Store > gérer vos applications > Télécharger une application personnalisée** et ouvrir **manifest.zip**.
      1. **Sélectionnez Ajouter** pour ajouter l’onglet à votre conversation.

          ![Onglet dans Teams application](~/assets/images/adaptive-cards/tab-in-teams.png)

          Vous pouvez interagir avec cet onglet en vous signant.

      1. Envoyez un message à l’onglet.

          ![Capture d’écran de Desktop Mobile](~/assets/images/adaptive-cards/desktop-mobile-screenshot.png)
  - title: Interaction avec l’onglet dans Teams
    durationInMinutes: 1
    content: "Les onglets vous permettent d’accéder aux services et au contenu dans un espace dédié au sein d’un canal ou d’une conversation.\n\nSuivez les étapes pour utiliser l’onglet :\n\n1. Dans le volet gauche du Teams, sélectionnez les ellipses «\_...\_» et choisissez votre application dans la liste.\n1. Onglet affichant la carte adaptative avec des contrôles d’action.\n\n    ![Onglet affichant la carte adaptative avec des contrôles d’action](~/assets/images/adaptive-cards/adaptive-cards-tab-action-controls.png)\n\n1. **Sélectionnez Se connectez** et choisissez un compte pour accéder à l’onglet.\n\n    ![Connexion](~/assets/images/adaptive-cards/sign-in-page.png)\n\n1. **Sélectionnez Afficher le module de** tâche sur la page d’accueil.\n\n    ![Afficher le module de tâche](~/assets/images/adaptive-cards/tab-home-page.png)\n\n1. Tab/fetch est la première demande d’appel que votre bot reçoit lorsqu’un utilisateur ouvre un onglet Carte adaptative. Lorsque votre bot reçoit la demande, il envoie une réponse de tabulation continue ou une réponse d’th de tabulation.\n\n    ![Exemple de module de tâche](~/assets/images/adaptive-cards/sample-task-module.png)\n\n1. **Envoyer la fonction de carte adaptative**\n    **la demande de tâche/** d’envoyer est déclenchée à votre bot avec les données correspondantes par le biais de l’action. \n\n    ![Fiche d’soumission de tâche](~/assets/images/adaptive-cards/task-submit.png)\n\n1. Tab keeps you signed in unless you select **Sign out**.\n\n    ![Se sortir de l’affichage](~/assets/images/adaptive-cards/sign-out.png)\n\n1. Actualisez **pour vous ré-inscrire** .\n\n    ![Signature de réussite](~/assets/images/adaptive-cards/success-sign-out.png)\n"
  - title: Défi complet
    durationInMinutes: 1
    content: |
      Avez-vous eu un projet comme celui-ci ?

      ![Capture d’écran de Desktop Mobile](~/assets/images/adaptive-cards/desktop-mobile-screenshot.png)
  - content: |
      Vous avez terminé le didacticiel pour commencer à utiliser des cartes adaptatives pour Microsoft Teams l’aide de Bot Framework.